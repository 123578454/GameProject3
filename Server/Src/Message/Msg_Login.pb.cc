// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Msg_Login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CheckVersionReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckVersionReq> {
} _CheckVersionReq_default_instance_;
class CheckVersionAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckVersionAck> {
} _CheckVersionAck_default_instance_;
class AccountRegReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountRegReq> {
} _AccountRegReq_default_instance_;
class AccountRegAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountRegAck> {
} _AccountRegAck_default_instance_;
class AccountLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginReq> {
} _AccountLoginReq_default_instance_;
class AccountLoginAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginAck> {
} _AccountLoginAck_default_instance_;
class ClientServerListReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientServerListReq> {
} _ClientServerListReq_default_instance_;
class ClientServerNodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientServerNode> {
} _ClientServerNode_default_instance_;
class ClientServerListAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientServerListAck> {
} _ClientServerListAck_default_instance_;
class RegToLoginSvrReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegToLoginSvrReq> {
} _RegToLoginSvrReq_default_instance_;
class RegToLoginSvrAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegToLoginSvrAck> {
} _RegToLoginSvrAck_default_instance_;
class GmsvrRegToLogicReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GmsvrRegToLogicReq> {
} _GmsvrRegToLogicReq_default_instance_;
class GmsvrRegToLogicAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GmsvrRegToLogicAck> {
} _GmsvrRegToLogicAck_default_instance_;
class SelectServerReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SelectServerReq> {
} _SelectServerReq_default_instance_;
class SelectServerAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SelectServerAck> {
} _SelectServerAck_default_instance_;
class RoleItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleItem> {
} _RoleItem_default_instance_;
class RoleListReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleListReq> {
} _RoleListReq_default_instance_;
class RoleListAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleListAck> {
} _RoleListAck_default_instance_;
class RoleCreateReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleCreateReq> {
} _RoleCreateReq_default_instance_;
class RoleCreateAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleCreateAck> {
} _RoleCreateAck_default_instance_;
class RoleDeleteReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleDeleteReq> {
} _RoleDeleteReq_default_instance_;
class RoleDeleteAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleDeleteAck> {
} _RoleDeleteAck_default_instance_;
class RoleLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLoginReq> {
} _RoleLoginReq_default_instance_;
class RoleLoginAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLoginAck> {
} _RoleLoginAck_default_instance_;
class RoleLogoutReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLogoutReq> {
} _RoleLogoutReq_default_instance_;
class RoleLogoutAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLogoutAck> {
} _RoleLogoutAck_default_instance_;
class RoleDisconnectReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleDisconnectReq> {
} _RoleDisconnectReq_default_instance_;
class RoleDisconnectAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleDisconnectAck> {
} _RoleDisconnectAck_default_instance_;
class RoleMoveReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleMoveReq> {
} _RoleMoveReq_default_instance_;
class RoleMoveAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleMoveAck> {
} _RoleMoveAck_default_instance_;
class CreateNewSceneReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateNewSceneReq> {
} _CreateNewSceneReq_default_instance_;
class CreateNewSceneAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateNewSceneAck> {
} _CreateNewSceneAck_default_instance_;
class EnterSceneReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneReq> {
} _EnterSceneReq_default_instance_;
class EnterSceneAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneAck> {
} _EnterSceneAck_default_instance_;
class LeaveSceneReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LeaveSceneReq> {
} _LeaveSceneReq_default_instance_;
class LeaveSceneAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LeaveSceneAck> {
} _LeaveSceneAck_default_instance_;
class TransRoleDataReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TransRoleDataReq> {
} _TransRoleDataReq_default_instance_;
class TransRoleDataAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TransRoleDataAck> {
} _TransRoleDataAck_default_instance_;
class NotifyIntoSceneDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NotifyIntoScene> {
} _NotifyIntoScene_default_instance_;
class NearByRoleItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NearByRoleItem> {
} _NearByRoleItem_default_instance_;
class NearByAddNtyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NearByAddNty> {
} _NearByAddNty_default_instance_;
class NearByDelNtyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NearByDelNty> {
} _NearByDelNty_default_instance_;
class NearByUpdateNtyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NearByUpdateNty> {
} _NearByUpdateNty_default_instance_;

namespace protobuf_Msg_5fLogin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[43];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, clientverion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, packagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, clientverion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, packagename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, lastsvrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, lastsvrname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, packname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, clientversion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrdefault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svropentime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, svrnode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrReq, servername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmsvrRegToLogicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmsvrRegToLogicReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmsvrRegToLogicAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmsvrRegToLogicAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, serveraddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, serverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, roletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, exp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, rolelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, roletype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, roletype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, roletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleMoveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleMoveReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleMoveReq, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleMoveReq, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleMoveReq, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleMoveReq, d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleMoveAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleMoveAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, createparam_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, createparam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, rolename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, roletype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneReq, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataReq, rolename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataReq, roletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataReq, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataAck, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataAck, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataAck, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, copytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, copyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, roletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByAddNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByAddNty, rolelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByDelNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByDelNty, rolelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByUpdateNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByUpdateNty, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByUpdateNty, roletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByUpdateNty, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByUpdateNty, name_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CheckVersionReq)},
  { 8, -1, sizeof(CheckVersionAck)},
  { 16, -1, sizeof(AccountRegReq)},
  { 24, -1, sizeof(AccountRegAck)},
  { 31, -1, sizeof(AccountLoginReq)},
  { 38, -1, sizeof(AccountLoginAck)},
  { 47, -1, sizeof(ClientServerListReq)},
  { 56, -1, sizeof(ClientServerNode)},
  { 66, -1, sizeof(ClientServerListAck)},
  { 73, -1, sizeof(RegToLoginSvrReq)},
  { 80, -1, sizeof(RegToLoginSvrAck)},
  { 86, -1, sizeof(GmsvrRegToLogicReq)},
  { 92, -1, sizeof(GmsvrRegToLogicAck)},
  { 98, -1, sizeof(SelectServerReq)},
  { 104, -1, sizeof(SelectServerAck)},
  { 114, -1, sizeof(RoleItem)},
  { 124, -1, sizeof(RoleListReq)},
  { 131, -1, sizeof(RoleListAck)},
  { 138, -1, sizeof(RoleCreateReq)},
  { 146, -1, sizeof(RoleCreateAck)},
  { 156, -1, sizeof(RoleDeleteReq)},
  { 163, -1, sizeof(RoleDeleteAck)},
  { 169, -1, sizeof(RoleLoginReq)},
  { 177, -1, sizeof(RoleLoginAck)},
  { 189, -1, sizeof(RoleLogoutReq)},
  { 196, -1, sizeof(RoleLogoutAck)},
  { 202, -1, sizeof(RoleDisconnectReq)},
  { 208, -1, sizeof(RoleDisconnectAck)},
  { 214, -1, sizeof(RoleMoveReq)},
  { 224, -1, sizeof(RoleMoveAck)},
  { 230, -1, sizeof(CreateNewSceneReq)},
  { 237, -1, sizeof(CreateNewSceneAck)},
  { 247, -1, sizeof(EnterSceneReq)},
  { 253, -1, sizeof(EnterSceneAck)},
  { 264, -1, sizeof(LeaveSceneReq)},
  { 271, -1, sizeof(LeaveSceneAck)},
  { 277, -1, sizeof(TransRoleDataReq)},
  { 286, -1, sizeof(TransRoleDataAck)},
  { 296, -1, sizeof(NotifyIntoScene)},
  { 305, -1, sizeof(NearByRoleItem)},
  { 314, -1, sizeof(NearByAddNty)},
  { 320, -1, sizeof(NearByDelNty)},
  { 326, -1, sizeof(NearByUpdateNty)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckVersionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckVersionAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountRegReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountRegAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientServerListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientServerNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientServerListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegToLoginSvrReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegToLoginSvrAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GmsvrRegToLogicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GmsvrRegToLogicAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectServerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleCreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleCreateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleDeleteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleDeleteAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLogoutAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleDisconnectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleDisconnectAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleMoveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleMoveAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateNewSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateNewSceneAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterSceneAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LeaveSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LeaveSceneAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransRoleDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransRoleDataAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NotifyIntoScene_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NearByRoleItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NearByAddNty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NearByDelNty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NearByUpdateNty_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Msg_Login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 43);
}

}  // namespace

void TableStruct::Shutdown() {
  _CheckVersionReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CheckVersionAck_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AccountRegReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AccountRegAck_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _AccountLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _AccountLoginAck_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ClientServerListReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ClientServerNode_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ClientServerListAck_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _RegToLoginSvrReq_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _RegToLoginSvrAck_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _GmsvrRegToLogicReq_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _GmsvrRegToLogicAck_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _SelectServerReq_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _SelectServerAck_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _RoleItem_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _RoleListReq_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _RoleListAck_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _RoleCreateReq_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _RoleCreateAck_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _RoleDeleteReq_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _RoleDeleteAck_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _RoleLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _RoleLoginAck_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _RoleLogoutReq_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _RoleLogoutAck_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _RoleDisconnectReq_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _RoleDisconnectAck_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _RoleMoveReq_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _RoleMoveAck_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _CreateNewSceneReq_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _CreateNewSceneAck_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _EnterSceneReq_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _EnterSceneAck_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _LeaveSceneReq_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _LeaveSceneAck_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _TransRoleDataReq_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _TransRoleDataAck_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _NotifyIntoScene_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _NearByRoleItem_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _NearByAddNty_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _NearByDelNty_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _NearByUpdateNty_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CheckVersionReq_default_instance_.DefaultConstruct();
  _CheckVersionAck_default_instance_.DefaultConstruct();
  _AccountRegReq_default_instance_.DefaultConstruct();
  _AccountRegAck_default_instance_.DefaultConstruct();
  _AccountLoginReq_default_instance_.DefaultConstruct();
  _AccountLoginAck_default_instance_.DefaultConstruct();
  _ClientServerListReq_default_instance_.DefaultConstruct();
  _ClientServerNode_default_instance_.DefaultConstruct();
  _ClientServerListAck_default_instance_.DefaultConstruct();
  _RegToLoginSvrReq_default_instance_.DefaultConstruct();
  _RegToLoginSvrAck_default_instance_.DefaultConstruct();
  _GmsvrRegToLogicReq_default_instance_.DefaultConstruct();
  _GmsvrRegToLogicAck_default_instance_.DefaultConstruct();
  _SelectServerReq_default_instance_.DefaultConstruct();
  _SelectServerAck_default_instance_.DefaultConstruct();
  _RoleItem_default_instance_.DefaultConstruct();
  _RoleListReq_default_instance_.DefaultConstruct();
  _RoleListAck_default_instance_.DefaultConstruct();
  _RoleCreateReq_default_instance_.DefaultConstruct();
  _RoleCreateAck_default_instance_.DefaultConstruct();
  _RoleDeleteReq_default_instance_.DefaultConstruct();
  _RoleDeleteAck_default_instance_.DefaultConstruct();
  _RoleLoginReq_default_instance_.DefaultConstruct();
  _RoleLoginAck_default_instance_.DefaultConstruct();
  _RoleLogoutReq_default_instance_.DefaultConstruct();
  _RoleLogoutAck_default_instance_.DefaultConstruct();
  _RoleDisconnectReq_default_instance_.DefaultConstruct();
  _RoleDisconnectAck_default_instance_.DefaultConstruct();
  _RoleMoveReq_default_instance_.DefaultConstruct();
  _RoleMoveAck_default_instance_.DefaultConstruct();
  _CreateNewSceneReq_default_instance_.DefaultConstruct();
  _CreateNewSceneAck_default_instance_.DefaultConstruct();
  _EnterSceneReq_default_instance_.DefaultConstruct();
  _EnterSceneAck_default_instance_.DefaultConstruct();
  _LeaveSceneReq_default_instance_.DefaultConstruct();
  _LeaveSceneAck_default_instance_.DefaultConstruct();
  _TransRoleDataReq_default_instance_.DefaultConstruct();
  _TransRoleDataAck_default_instance_.DefaultConstruct();
  _NotifyIntoScene_default_instance_.DefaultConstruct();
  _NearByRoleItem_default_instance_.DefaultConstruct();
  _NearByAddNty_default_instance_.DefaultConstruct();
  _NearByDelNty_default_instance_.DefaultConstruct();
  _NearByUpdateNty_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017Msg_Login.proto\"M\n\017CheckVersionReq\022\024\n\014"
      "ClientVerion\030\001 \001(\005\022\023\n\013PackageName\030\002 \001(\t\022"
      "\017\n\007Channel\030\003 \001(\005\"M\n\017CheckVersionAck\022\017\n\007R"
      "etCode\030\001 \001(\r\022\024\n\014ClientVerion\030\002 \001(\005\022\023\n\013Pa"
      "ckageName\030\003 \001(\t\"G\n\rAccountRegReq\022\023\n\013Acco"
      "untName\030\001 \001(\t\022\020\n\010Password\030\002 \001(\t\022\017\n\007Chann"
      "el\030\003 \001(\005\"3\n\rAccountRegAck\022\017\n\007RetCode\030\001 \001"
      "(\r\022\021\n\tAccountID\030\002 \001(\004\"8\n\017AccountLoginReq"
      "\022\023\n\013AccountName\030\001 \001(\t\022\020\n\010Password\030\002 \001(\t\""
      "]\n\017AccountLoginAck\022\017\n\007RetCode\030\001 \001(\r\022\021\n\tA"
      "ccountID\030\002 \001(\004\022\021\n\tLastSvrID\030\003 \001(\005\022\023\n\013Las"
      "tSvrName\030\004 \001(\t\"b\n\023ClientServerListReq\022\021\n"
      "\tAccountID\030\001 \001(\004\022\017\n\007Channel\030\002 \001(\005\022\020\n\010Pac"
      "kName\030\003 \001(\t\022\025\n\rClientVersion\030\004 \001(\005\"m\n\020Cl"
      "ientServerNode\022\r\n\005SvrID\030\001 \001(\005\022\017\n\007SvrName"
      "\030\002 \001(\t\022\020\n\010SvrState\030\003 \001(\r\022\022\n\nSvrDefault\030\004"
      " \001(\r\022\023\n\013SvrOpenTime\030\005 \001(\005\"J\n\023ClientServe"
      "rListAck\022\017\n\007RetCode\030\001 \001(\r\022\"\n\007SvrNode\030\002 \003"
      "(\0132\021.ClientServerNode\"8\n\020RegToLoginSvrRe"
      "q\022\020\n\010ServerID\030\001 \001(\005\022\022\n\nServerName\030\002 \001(\t\""
      "#\n\020RegToLoginSvrAck\022\017\n\007RetCode\030\001 \001(\r\"&\n\022"
      "GmsvrRegToLogicReq\022\020\n\010ServerID\030\001 \001(\005\"%\n\022"
      "GmsvrRegToLogicAck\022\017\n\007RetCode\030\001 \001(\r\"#\n\017S"
      "electServerReq\022\020\n\010ServerID\030\001 \001(\005\"o\n\017Sele"
      "ctServerAck\022\017\n\007RetCode\030\001 \001(\r\022\020\n\010ServerID"
      "\030\002 \001(\r\022\022\n\nServerAddr\030\003 \001(\t\022\022\n\nServerPort"
      "\030\004 \001(\005\022\021\n\tLoginCode\030\005 \001(\005\"R\n\010RoleItem\022\n\n"
      "\002ID\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\020\n\010RoleType\030\003 \001("
      "\005\022\r\n\005Level\030\004 \001(\005\022\013\n\003Exp\030\005 \001(\004\"3\n\013RoleLis"
      "tReq\022\021\n\tAccountID\030\001 \001(\004\022\021\n\tLoginCode\030\002 \001"
      "(\005\";\n\013RoleListAck\022\017\n\007RetCode\030\001 \001(\r\022\033\n\010Ro"
      "leList\030\002 \003(\0132\t.RoleItem\"B\n\rRoleCreateReq"
      "\022\021\n\tAccountID\030\001 \001(\004\022\014\n\004Name\030\003 \001(\t\022\020\n\010Rol"
      "eType\030\004 \001(\r\"c\n\rRoleCreateAck\022\017\n\007RetCode\030"
      "\001 \001(\r\022\021\n\tAccountID\030\002 \001(\004\022\016\n\006RoleID\030\003 \001(\004"
      "\022\014\n\004Name\030\004 \001(\t\022\020\n\010RoleType\030\005 \001(\r\"2\n\rRole"
      "DeleteReq\022\021\n\tAccountID\030\001 \001(\004\022\016\n\006RoleID\030\002"
      " \001(\004\" \n\rRoleDeleteAck\022\017\n\007RetCode\030\001 \001(\r\"D"
      "\n\014RoleLoginReq\022\021\n\tAccountID\030\001 \001(\004\022\016\n\006Rol"
      "eID\030\002 \001(\004\022\021\n\tLoginCode\030\003 \001(\005\"~\n\014RoleLogi"
      "nAck\022\017\n\007RetCode\030\001 \001(\r\022\021\n\tAccountID\030\002 \001(\004"
      "\022\016\n\006RoleID\030\003 \001(\004\022\020\n\010RoleType\030\004 \001(\r\022\r\n\005Le"
      "vel\030\005 \001(\005\022\013\n\003Exp\030\006 \001(\004\022\014\n\004Name\030\007 \001(\t\"2\n\r"
      "RoleLogoutReq\022\021\n\tAccountID\030\001 \001(\004\022\016\n\006Role"
      "ID\030\002 \001(\004\" \n\rRoleLogoutAck\022\017\n\007RetCode\030\001 \001"
      "(\r\"#\n\021RoleDisconnectReq\022\016\n\006RoleID\030\002 \001(\004\""
      "$\n\021RoleDisconnectAck\022\017\n\007RetCode\030\001 \001(\r\"I\n"
      "\013RoleMoveReq\022\016\n\006RoleID\030\001 \001(\004\022\t\n\001x\030\002 \001(\002\022"
      "\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\022\t\n\001d\030\005 \001(\002\"\036\n\013Role"
      "MoveAck\022\017\n\007RetCode\030\001 \001(\r\":\n\021CreateNewSce"
      "neReq\022\020\n\010CopyType\030\001 \001(\r\022\023\n\013CreateParam\030\003"
      " \001(\004\"m\n\021CreateNewSceneAck\022\017\n\007RetCode\030\001 \001"
      "(\r\022\020\n\010CopyType\030\002 \001(\r\022\016\n\006CopyID\030\003 \001(\r\022\023\n\013"
      "CreateParam\030\004 \001(\004\022\020\n\010ServerID\030\005 \001(\r\"\037\n\rE"
      "nterSceneReq\022\016\n\006RoleID\030\001 \001(\004\"v\n\rEnterSce"
      "neAck\022\017\n\007RetCode\030\001 \001(\r\022\020\n\010CopyType\030\002 \001(\r"
      "\022\016\n\006CopyID\030\003 \001(\r\022\016\n\006RoleID\030\004 \001(\004\022\020\n\010Role"
      "Name\030\005 \001(\t\022\020\n\010RoleType\030\006 \001(\r\"/\n\rLeaveSce"
      "neReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Reason\030\002 \001(\005\" \n"
      "\rLeaveSceneAck\022\017\n\007RetCode\030\001 \001(\r\"U\n\020Trans"
      "RoleDataReq\022\016\n\006RoleID\030\001 \001(\004\022\020\n\010RoleName\030"
      "\002 \001(\t\022\020\n\010RoleType\030\003 \001(\r\022\r\n\005Level\030\004 \001(\005\"g"
      "\n\020TransRoleDataAck\022\017\n\007RetCode\030\001 \001(\r\022\016\n\006R"
      "oleID\030\002 \001(\004\022\020\n\010CopyType\030\003 \001(\r\022\016\n\006CopyID\030"
      "\004 \001(\r\022\020\n\010ServerID\030\005 \001(\r\"U\n\017NotifyIntoSce"
      "ne\022\016\n\006RoleID\030\001 \001(\004\022\020\n\010CopyType\030\002 \001(\005\022\016\n\006"
      "CopyID\030\003 \001(\r\022\020\n\010ServerID\030\004 \001(\005\"O\n\016NearBy"
      "RoleItem\022\016\n\006RoleID\030\001 \001(\004\022\020\n\010RoleType\030\002 \001"
      "(\r\022\r\n\005Level\030\003 \001(\005\022\014\n\004Name\030\004 \001(\t\"1\n\014NearB"
      "yAddNty\022!\n\010RoleList\030\001 \003(\0132\017.NearByRoleIt"
      "em\" \n\014NearByDelNty\022\020\n\010RoleList\030\001 \003(\004\"P\n\017"
      "NearByUpdateNty\022\016\n\006RoleID\030\001 \001(\004\022\020\n\010RoleT"
      "ype\030\002 \001(\r\022\r\n\005Level\030\003 \001(\005\022\014\n\004Name\030\004 \001(\tb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2926);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_Login.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Msg_5fLogin_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVersionReq::kClientVerionFieldNumber;
const int CheckVersionReq::kPackageNameFieldNumber;
const int CheckVersionReq::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVersionReq::CheckVersionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckVersionReq)
}
CheckVersionReq::CheckVersionReq(const CheckVersionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.packagename().size() > 0) {
    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  ::memcpy(&clientverion_, &from.clientverion_,
    reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&clientverion_) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:CheckVersionReq)
}

void CheckVersionReq::SharedCtor() {
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientverion_, 0, reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&clientverion_) + sizeof(channel_));
  _cached_size_ = 0;
}

CheckVersionReq::~CheckVersionReq() {
  // @@protoc_insertion_point(destructor:CheckVersionReq)
  SharedDtor();
}

void CheckVersionReq::SharedDtor() {
  packagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckVersionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckVersionReq& CheckVersionReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckVersionReq* CheckVersionReq::New(::google::protobuf::Arena* arena) const {
  CheckVersionReq* n = new CheckVersionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckVersionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckVersionReq)
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientverion_, 0, reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&clientverion_) + sizeof(channel_));
}

bool CheckVersionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckVersionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ClientVerion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientverion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PackageName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CheckVersionReq.PackageName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckVersionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckVersionReq)
  return false;
#undef DO_
}

void CheckVersionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ClientVerion = 1;
  if (this->clientverion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clientverion(), output);
  }

  // string PackageName = 2;
  if (this->packagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionReq.PackageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->packagename(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // @@protoc_insertion_point(serialize_end:CheckVersionReq)
}

::google::protobuf::uint8* CheckVersionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CheckVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ClientVerion = 1;
  if (this->clientverion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clientverion(), target);
  }

  // string PackageName = 2;
  if (this->packagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionReq.PackageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->packagename(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CheckVersionReq)
  return target;
}

size_t CheckVersionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CheckVersionReq)
  size_t total_size = 0;

  // string PackageName = 2;
  if (this->packagename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packagename());
  }

  // int32 ClientVerion = 1;
  if (this->clientverion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientverion());
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckVersionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVersionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckVersionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckVersionReq)
    MergeFrom(*source);
  }
}

void CheckVersionReq::MergeFrom(const CheckVersionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.packagename().size() > 0) {

    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  if (from.clientverion() != 0) {
    set_clientverion(from.clientverion());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void CheckVersionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionReq::CopyFrom(const CheckVersionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionReq::IsInitialized() const {
  return true;
}

void CheckVersionReq::Swap(CheckVersionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVersionReq::InternalSwap(CheckVersionReq* other) {
  packagename_.Swap(&other->packagename_);
  std::swap(clientverion_, other->clientverion_);
  std::swap(channel_, other->channel_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckVersionReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckVersionReq

// int32 ClientVerion = 1;
void CheckVersionReq::clear_clientverion() {
  clientverion_ = 0;
}
::google::protobuf::int32 CheckVersionReq::clientverion() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.ClientVerion)
  return clientverion_;
}
void CheckVersionReq::set_clientverion(::google::protobuf::int32 value) {
  
  clientverion_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionReq.ClientVerion)
}

// string PackageName = 2;
void CheckVersionReq::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckVersionReq::packagename() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.PackageName)
  return packagename_.GetNoArena();
}
void CheckVersionReq::set_packagename(const ::std::string& value) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionReq.PackageName)
}
#if LANG_CXX11
void CheckVersionReq::set_packagename(::std::string&& value) {
  
  packagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CheckVersionReq.PackageName)
}
#endif
void CheckVersionReq::set_packagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionReq.PackageName)
}
void CheckVersionReq::set_packagename(const char* value, size_t size) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionReq.PackageName)
}
::std::string* CheckVersionReq::mutable_packagename() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionReq.PackageName)
  return packagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckVersionReq::release_packagename() {
  // @@protoc_insertion_point(field_release:CheckVersionReq.PackageName)
  
  return packagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckVersionReq::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    
  } else {
    
  }
  packagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionReq.PackageName)
}

// int32 Channel = 3;
void CheckVersionReq::clear_channel() {
  channel_ = 0;
}
::google::protobuf::int32 CheckVersionReq::channel() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.Channel)
  return channel_;
}
void CheckVersionReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionReq.Channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVersionAck::kRetCodeFieldNumber;
const int CheckVersionAck::kClientVerionFieldNumber;
const int CheckVersionAck::kPackageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVersionAck::CheckVersionAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckVersionAck)
}
CheckVersionAck::CheckVersionAck(const CheckVersionAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.packagename().size() > 0) {
    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    reinterpret_cast<char*>(&clientverion_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(clientverion_));
  // @@protoc_insertion_point(copy_constructor:CheckVersionAck)
}

void CheckVersionAck::SharedCtor() {
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&clientverion_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(clientverion_));
  _cached_size_ = 0;
}

CheckVersionAck::~CheckVersionAck() {
  // @@protoc_insertion_point(destructor:CheckVersionAck)
  SharedDtor();
}

void CheckVersionAck::SharedDtor() {
  packagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckVersionAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckVersionAck& CheckVersionAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckVersionAck* CheckVersionAck::New(::google::protobuf::Arena* arena) const {
  CheckVersionAck* n = new CheckVersionAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckVersionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckVersionAck)
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&clientverion_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(clientverion_));
}

bool CheckVersionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckVersionAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ClientVerion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientverion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PackageName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CheckVersionAck.PackageName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckVersionAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckVersionAck)
  return false;
#undef DO_
}

void CheckVersionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckVersionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // int32 ClientVerion = 2;
  if (this->clientverion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clientverion(), output);
  }

  // string PackageName = 3;
  if (this->packagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionAck.PackageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->packagename(), output);
  }

  // @@protoc_insertion_point(serialize_end:CheckVersionAck)
}

::google::protobuf::uint8* CheckVersionAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CheckVersionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // int32 ClientVerion = 2;
  if (this->clientverion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clientverion(), target);
  }

  // string PackageName = 3;
  if (this->packagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionAck.PackageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->packagename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CheckVersionAck)
  return target;
}

size_t CheckVersionAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CheckVersionAck)
  size_t total_size = 0;

  // string PackageName = 3;
  if (this->packagename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packagename());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 ClientVerion = 2;
  if (this->clientverion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientverion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckVersionAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckVersionAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVersionAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckVersionAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckVersionAck)
    MergeFrom(*source);
  }
}

void CheckVersionAck::MergeFrom(const CheckVersionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckVersionAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.packagename().size() > 0) {

    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.clientverion() != 0) {
    set_clientverion(from.clientverion());
  }
}

void CheckVersionAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckVersionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionAck::CopyFrom(const CheckVersionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckVersionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionAck::IsInitialized() const {
  return true;
}

void CheckVersionAck::Swap(CheckVersionAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVersionAck::InternalSwap(CheckVersionAck* other) {
  packagename_.Swap(&other->packagename_);
  std::swap(retcode_, other->retcode_);
  std::swap(clientverion_, other->clientverion_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckVersionAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckVersionAck

// uint32 RetCode = 1;
void CheckVersionAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 CheckVersionAck::retcode() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.RetCode)
  return retcode_;
}
void CheckVersionAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionAck.RetCode)
}

// int32 ClientVerion = 2;
void CheckVersionAck::clear_clientverion() {
  clientverion_ = 0;
}
::google::protobuf::int32 CheckVersionAck::clientverion() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.ClientVerion)
  return clientverion_;
}
void CheckVersionAck::set_clientverion(::google::protobuf::int32 value) {
  
  clientverion_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionAck.ClientVerion)
}

// string PackageName = 3;
void CheckVersionAck::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckVersionAck::packagename() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.PackageName)
  return packagename_.GetNoArena();
}
void CheckVersionAck::set_packagename(const ::std::string& value) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionAck.PackageName)
}
#if LANG_CXX11
void CheckVersionAck::set_packagename(::std::string&& value) {
  
  packagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CheckVersionAck.PackageName)
}
#endif
void CheckVersionAck::set_packagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionAck.PackageName)
}
void CheckVersionAck::set_packagename(const char* value, size_t size) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionAck.PackageName)
}
::std::string* CheckVersionAck::mutable_packagename() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionAck.PackageName)
  return packagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckVersionAck::release_packagename() {
  // @@protoc_insertion_point(field_release:CheckVersionAck.PackageName)
  
  return packagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckVersionAck::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    
  } else {
    
  }
  packagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionAck.PackageName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountRegReq::kAccountNameFieldNumber;
const int AccountRegReq::kPasswordFieldNumber;
const int AccountRegReq::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountRegReq::AccountRegReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountRegReq)
}
AccountRegReq::AccountRegReq(const AccountRegReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:AccountRegReq)
}

void AccountRegReq::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  _cached_size_ = 0;
}

AccountRegReq::~AccountRegReq() {
  // @@protoc_insertion_point(destructor:AccountRegReq)
  SharedDtor();
}

void AccountRegReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountRegReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountRegReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountRegReq& AccountRegReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountRegReq* AccountRegReq::New(::google::protobuf::Arena* arena) const {
  AccountRegReq* n = new AccountRegReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountRegReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountRegReq)
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
}

bool AccountRegReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountRegReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AccountName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountRegReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountRegReq.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountRegReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountRegReq)
  return false;
#undef DO_
}

void AccountRegReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountRegReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountRegReq)
}

::google::protobuf::uint8* AccountRegReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountRegReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountRegReq)
  return target;
}

size_t AccountRegReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountRegReq)
  size_t total_size = 0;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountRegReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountRegReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountRegReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountRegReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountRegReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountRegReq)
    MergeFrom(*source);
  }
}

void AccountRegReq::MergeFrom(const AccountRegReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountRegReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void AccountRegReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountRegReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountRegReq::CopyFrom(const AccountRegReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountRegReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountRegReq::IsInitialized() const {
  return true;
}

void AccountRegReq::Swap(AccountRegReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountRegReq::InternalSwap(AccountRegReq* other) {
  accountname_.Swap(&other->accountname_);
  password_.Swap(&other->password_);
  std::swap(channel_, other->channel_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountRegReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountRegReq

// string AccountName = 1;
void AccountRegReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountRegReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.AccountName)
  return accountname_.GetNoArena();
}
void AccountRegReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.AccountName)
}
#if LANG_CXX11
void AccountRegReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.AccountName)
}
#endif
void AccountRegReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.AccountName)
}
void AccountRegReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.AccountName)
}
::std::string* AccountRegReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountRegReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountRegReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountRegReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.AccountName)
}

// string Password = 2;
void AccountRegReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountRegReq::password() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Password)
  return password_.GetNoArena();
}
void AccountRegReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.Password)
}
#if LANG_CXX11
void AccountRegReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.Password)
}
#endif
void AccountRegReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.Password)
}
void AccountRegReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.Password)
}
::std::string* AccountRegReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountRegReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountRegReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountRegReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.Password)
}

// int32 Channel = 3;
void AccountRegReq::clear_channel() {
  channel_ = 0;
}
::google::protobuf::int32 AccountRegReq::channel() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Channel)
  return channel_;
}
void AccountRegReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AccountRegReq.Channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountRegAck::kRetCodeFieldNumber;
const int AccountRegAck::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountRegAck::AccountRegAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountRegAck)
}
AccountRegAck::AccountRegAck(const AccountRegAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:AccountRegAck)
}

void AccountRegAck::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
  _cached_size_ = 0;
}

AccountRegAck::~AccountRegAck() {
  // @@protoc_insertion_point(destructor:AccountRegAck)
  SharedDtor();
}

void AccountRegAck::SharedDtor() {
}

void AccountRegAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountRegAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountRegAck& AccountRegAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountRegAck* AccountRegAck::New(::google::protobuf::Arena* arena) const {
  AccountRegAck* n = new AccountRegAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountRegAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountRegAck)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
}

bool AccountRegAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountRegAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountRegAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountRegAck)
  return false;
#undef DO_
}

void AccountRegAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountRegAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountRegAck)
}

::google::protobuf::uint8* AccountRegAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountRegAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountRegAck)
  return target;
}

size_t AccountRegAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountRegAck)
  size_t total_size = 0;

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountRegAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountRegAck)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountRegAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountRegAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountRegAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountRegAck)
    MergeFrom(*source);
  }
}

void AccountRegAck::MergeFrom(const AccountRegAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountRegAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AccountRegAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountRegAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountRegAck::CopyFrom(const AccountRegAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountRegAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountRegAck::IsInitialized() const {
  return true;
}

void AccountRegAck::Swap(AccountRegAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountRegAck::InternalSwap(AccountRegAck* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountRegAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountRegAck

// uint32 RetCode = 1;
void AccountRegAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 AccountRegAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.RetCode)
  return retcode_;
}
void AccountRegAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.RetCode)
}

// uint64 AccountID = 2;
void AccountRegAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AccountRegAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.AccountID)
  return accountid_;
}
void AccountRegAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.AccountID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginReq::kAccountNameFieldNumber;
const int AccountLoginReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginReq::AccountLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLoginReq)
}
AccountLoginReq::AccountLoginReq(const AccountLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:AccountLoginReq)
}

void AccountLoginReq::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AccountLoginReq::~AccountLoginReq() {
  // @@protoc_insertion_point(destructor:AccountLoginReq)
  SharedDtor();
}

void AccountLoginReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLoginReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginReq& AccountLoginReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountLoginReq* AccountLoginReq::New(::google::protobuf::Arena* arena) const {
  AccountLoginReq* n = new AccountLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLoginReq)
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AccountLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AccountName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginReq.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLoginReq)
  return false;
#undef DO_
}

void AccountLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountLoginReq)
}

::google::protobuf::uint8* AccountLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountLoginReq)
  return target;
}

size_t AccountLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLoginReq)
  size_t total_size = 0;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLoginReq)
    MergeFrom(*source);
  }
}

void AccountLoginReq::MergeFrom(const AccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void AccountLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginReq::CopyFrom(const AccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginReq::IsInitialized() const {
  return true;
}

void AccountLoginReq::Swap(AccountLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLoginReq::InternalSwap(AccountLoginReq* other) {
  accountname_.Swap(&other->accountname_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLoginReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountLoginReq

// string AccountName = 1;
void AccountLoginReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountLoginReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.AccountName)
  return accountname_.GetNoArena();
}
void AccountLoginReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.AccountName)
}
#if LANG_CXX11
void AccountLoginReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.AccountName)
}
#endif
void AccountLoginReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.AccountName)
}
void AccountLoginReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.AccountName)
}
::std::string* AccountLoginReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountLoginReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountLoginReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.AccountName)
}

// string Password = 2;
void AccountLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountLoginReq::password() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.Password)
  return password_.GetNoArena();
}
void AccountLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.Password)
}
#if LANG_CXX11
void AccountLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.Password)
}
#endif
void AccountLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.Password)
}
void AccountLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.Password)
}
::std::string* AccountLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.Password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginAck::kRetCodeFieldNumber;
const int AccountLoginAck::kAccountIDFieldNumber;
const int AccountLoginAck::kLastSvrIDFieldNumber;
const int AccountLoginAck::kLastSvrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginAck::AccountLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLoginAck)
}
AccountLoginAck::AccountLoginAck(const AccountLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lastsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lastsvrname().size() > 0) {
    lastsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastsvrname_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&lastsvrid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(lastsvrid_));
  // @@protoc_insertion_point(copy_constructor:AccountLoginAck)
}

void AccountLoginAck::SharedCtor() {
  lastsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&lastsvrid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(lastsvrid_));
  _cached_size_ = 0;
}

AccountLoginAck::~AccountLoginAck() {
  // @@protoc_insertion_point(destructor:AccountLoginAck)
  SharedDtor();
}

void AccountLoginAck::SharedDtor() {
  lastsvrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLoginAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginAck& AccountLoginAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountLoginAck* AccountLoginAck::New(::google::protobuf::Arena* arena) const {
  AccountLoginAck* n = new AccountLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLoginAck)
  lastsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&lastsvrid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(lastsvrid_));
}

bool AccountLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LastSvrID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastsvrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LastSvrName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastsvrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastsvrname().data(), this->lastsvrname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginAck.LastSvrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLoginAck)
  return false;
#undef DO_
}

void AccountLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lastsvrid(), output);
  }

  // string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastsvrname().data(), this->lastsvrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginAck.LastSvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lastsvrname(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountLoginAck)
}

::google::protobuf::uint8* AccountLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lastsvrid(), target);
  }

  // string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastsvrname().data(), this->lastsvrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginAck.LastSvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lastsvrname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountLoginAck)
  return target;
}

size_t AccountLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLoginAck)
  size_t total_size = 0;

  // string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastsvrname());
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lastsvrid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLoginAck)
    MergeFrom(*source);
  }
}

void AccountLoginAck::MergeFrom(const AccountLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lastsvrname().size() > 0) {

    lastsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastsvrname_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.lastsvrid() != 0) {
    set_lastsvrid(from.lastsvrid());
  }
}

void AccountLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginAck::CopyFrom(const AccountLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginAck::IsInitialized() const {
  return true;
}

void AccountLoginAck::Swap(AccountLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLoginAck::InternalSwap(AccountLoginAck* other) {
  lastsvrname_.Swap(&other->lastsvrname_);
  std::swap(accountid_, other->accountid_);
  std::swap(retcode_, other->retcode_);
  std::swap(lastsvrid_, other->lastsvrid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLoginAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountLoginAck

// uint32 RetCode = 1;
void AccountLoginAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 AccountLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.RetCode)
  return retcode_;
}
void AccountLoginAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.RetCode)
}

// uint64 AccountID = 2;
void AccountLoginAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AccountLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.AccountID)
  return accountid_;
}
void AccountLoginAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.AccountID)
}

// int32 LastSvrID = 3;
void AccountLoginAck::clear_lastsvrid() {
  lastsvrid_ = 0;
}
::google::protobuf::int32 AccountLoginAck::lastsvrid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.LastSvrID)
  return lastsvrid_;
}
void AccountLoginAck::set_lastsvrid(::google::protobuf::int32 value) {
  
  lastsvrid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.LastSvrID)
}

// string LastSvrName = 4;
void AccountLoginAck::clear_lastsvrname() {
  lastsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountLoginAck::lastsvrname() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.LastSvrName)
  return lastsvrname_.GetNoArena();
}
void AccountLoginAck::set_lastsvrname(const ::std::string& value) {
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginAck.LastSvrName)
}
#if LANG_CXX11
void AccountLoginAck::set_lastsvrname(::std::string&& value) {
  
  lastsvrname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginAck.LastSvrName)
}
#endif
void AccountLoginAck::set_lastsvrname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginAck.LastSvrName)
}
void AccountLoginAck::set_lastsvrname(const char* value, size_t size) {
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginAck.LastSvrName)
}
::std::string* AccountLoginAck::mutable_lastsvrname() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginAck.LastSvrName)
  return lastsvrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountLoginAck::release_lastsvrname() {
  // @@protoc_insertion_point(field_release:AccountLoginAck.LastSvrName)
  
  return lastsvrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountLoginAck::set_allocated_lastsvrname(::std::string* lastsvrname) {
  if (lastsvrname != NULL) {
    
  } else {
    
  }
  lastsvrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastsvrname);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginAck.LastSvrName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerListReq::kAccountIDFieldNumber;
const int ClientServerListReq::kChannelFieldNumber;
const int ClientServerListReq::kPackNameFieldNumber;
const int ClientServerListReq::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerListReq::ClientServerListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerListReq)
}
ClientServerListReq::ClientServerListReq(const ClientServerListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.packname().size() > 0) {
    packname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packname_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&clientversion_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(clientversion_));
  // @@protoc_insertion_point(copy_constructor:ClientServerListReq)
}

void ClientServerListReq::SharedCtor() {
  packname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&clientversion_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(clientversion_));
  _cached_size_ = 0;
}

ClientServerListReq::~ClientServerListReq() {
  // @@protoc_insertion_point(destructor:ClientServerListReq)
  SharedDtor();
}

void ClientServerListReq::SharedDtor() {
  packname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientServerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerListReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerListReq& ClientServerListReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientServerListReq* ClientServerListReq::New(::google::protobuf::Arena* arena) const {
  ClientServerListReq* n = new ClientServerListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerListReq)
  packname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&clientversion_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(clientversion_));
}

bool ClientServerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PackName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->packname().data(), this->packname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientServerListReq.PackName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ClientVersion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerListReq)
  return false;
#undef DO_
}

void ClientServerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // string PackName = 3;
  if (this->packname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packname().data(), this->packname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerListReq.PackName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->packname(), output);
  }

  // int32 ClientVersion = 4;
  if (this->clientversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->clientversion(), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerListReq)
}

::google::protobuf::uint8* ClientServerListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // string PackName = 3;
  if (this->packname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packname().data(), this->packname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerListReq.PackName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->packname(), target);
  }

  // int32 ClientVersion = 4;
  if (this->clientversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->clientversion(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerListReq)
  return target;
}

size_t ClientServerListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerListReq)
  size_t total_size = 0;

  // string PackName = 3;
  if (this->packname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packname());
  }

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // int32 ClientVersion = 4;
  if (this->clientversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerListReq)
    MergeFrom(*source);
  }
}

void ClientServerListReq::MergeFrom(const ClientServerListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.packname().size() > 0) {

    packname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packname_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.clientversion() != 0) {
    set_clientversion(from.clientversion());
  }
}

void ClientServerListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerListReq::CopyFrom(const ClientServerListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerListReq::IsInitialized() const {
  return true;
}

void ClientServerListReq::Swap(ClientServerListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerListReq::InternalSwap(ClientServerListReq* other) {
  packname_.Swap(&other->packname_);
  std::swap(accountid_, other->accountid_);
  std::swap(channel_, other->channel_);
  std::swap(clientversion_, other->clientversion_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerListReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerListReq

// uint64 AccountID = 1;
void ClientServerListReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClientServerListReq::accountid() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.AccountID)
  return accountid_;
}
void ClientServerListReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.AccountID)
}

// int32 Channel = 2;
void ClientServerListReq::clear_channel() {
  channel_ = 0;
}
::google::protobuf::int32 ClientServerListReq::channel() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.Channel)
  return channel_;
}
void ClientServerListReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.Channel)
}

// string PackName = 3;
void ClientServerListReq::clear_packname() {
  packname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientServerListReq::packname() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.PackName)
  return packname_.GetNoArena();
}
void ClientServerListReq::set_packname(const ::std::string& value) {
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerListReq.PackName)
}
#if LANG_CXX11
void ClientServerListReq::set_packname(::std::string&& value) {
  
  packname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientServerListReq.PackName)
}
#endif
void ClientServerListReq::set_packname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerListReq.PackName)
}
void ClientServerListReq::set_packname(const char* value, size_t size) {
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerListReq.PackName)
}
::std::string* ClientServerListReq::mutable_packname() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerListReq.PackName)
  return packname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientServerListReq::release_packname() {
  // @@protoc_insertion_point(field_release:ClientServerListReq.PackName)
  
  return packname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientServerListReq::set_allocated_packname(::std::string* packname) {
  if (packname != NULL) {
    
  } else {
    
  }
  packname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packname);
  // @@protoc_insertion_point(field_set_allocated:ClientServerListReq.PackName)
}

// int32 ClientVersion = 4;
void ClientServerListReq::clear_clientversion() {
  clientversion_ = 0;
}
::google::protobuf::int32 ClientServerListReq::clientversion() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.ClientVersion)
  return clientversion_;
}
void ClientServerListReq::set_clientversion(::google::protobuf::int32 value) {
  
  clientversion_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.ClientVersion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerNode::kSvrIDFieldNumber;
const int ClientServerNode::kSvrNameFieldNumber;
const int ClientServerNode::kSvrStateFieldNumber;
const int ClientServerNode::kSvrDefaultFieldNumber;
const int ClientServerNode::kSvrOpenTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerNode::ClientServerNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerNode)
}
ClientServerNode::ClientServerNode(const ClientServerNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.svrname().size() > 0) {
    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  ::memcpy(&svrid_, &from.svrid_,
    reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
  // @@protoc_insertion_point(copy_constructor:ClientServerNode)
}

void ClientServerNode::SharedCtor() {
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&svrid_, 0, reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
  _cached_size_ = 0;
}

ClientServerNode::~ClientServerNode() {
  // @@protoc_insertion_point(destructor:ClientServerNode)
  SharedDtor();
}

void ClientServerNode::SharedDtor() {
  svrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientServerNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerNode::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerNode& ClientServerNode::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientServerNode* ClientServerNode::New(::google::protobuf::Arena* arena) const {
  ClientServerNode* n = new ClientServerNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerNode::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerNode)
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&svrid_, 0, reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
}

bool ClientServerNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 SvrID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SvrName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_svrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->svrname().data(), this->svrname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientServerNode.SvrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SvrState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SvrDefault = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrdefault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SvrOpenTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svropentime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerNode)
  return false;
#undef DO_
}

void ClientServerNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->svrid(), output);
  }

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), this->svrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerNode.SvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->svrname(), output);
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->svrstate(), output);
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->svrdefault(), output);
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->svropentime(), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerNode)
}

::google::protobuf::uint8* ClientServerNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->svrid(), target);
  }

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), this->svrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerNode.SvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->svrname(), target);
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->svrstate(), target);
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->svrdefault(), target);
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->svropentime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerNode)
  return target;
}

size_t ClientServerNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerNode)
  size_t total_size = 0;

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->svrname());
  }

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrid());
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrstate());
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrdefault());
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svropentime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerNode)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerNode)
    MergeFrom(*source);
  }
}

void ClientServerNode::MergeFrom(const ClientServerNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.svrname().size() > 0) {

    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  if (from.svrid() != 0) {
    set_svrid(from.svrid());
  }
  if (from.svrstate() != 0) {
    set_svrstate(from.svrstate());
  }
  if (from.svrdefault() != 0) {
    set_svrdefault(from.svrdefault());
  }
  if (from.svropentime() != 0) {
    set_svropentime(from.svropentime());
  }
}

void ClientServerNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerNode::CopyFrom(const ClientServerNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerNode::IsInitialized() const {
  return true;
}

void ClientServerNode::Swap(ClientServerNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerNode::InternalSwap(ClientServerNode* other) {
  svrname_.Swap(&other->svrname_);
  std::swap(svrid_, other->svrid_);
  std::swap(svrstate_, other->svrstate_);
  std::swap(svrdefault_, other->svrdefault_);
  std::swap(svropentime_, other->svropentime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerNode::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerNode

// int32 SvrID = 1;
void ClientServerNode::clear_svrid() {
  svrid_ = 0;
}
::google::protobuf::int32 ClientServerNode::svrid() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrID)
  return svrid_;
}
void ClientServerNode::set_svrid(::google::protobuf::int32 value) {
  
  svrid_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrID)
}

// string SvrName = 2;
void ClientServerNode::clear_svrname() {
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientServerNode::svrname() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrName)
  return svrname_.GetNoArena();
}
void ClientServerNode::set_svrname(const ::std::string& value) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrName)
}
#if LANG_CXX11
void ClientServerNode::set_svrname(::std::string&& value) {
  
  svrname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientServerNode.SvrName)
}
#endif
void ClientServerNode::set_svrname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerNode.SvrName)
}
void ClientServerNode::set_svrname(const char* value, size_t size) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerNode.SvrName)
}
::std::string* ClientServerNode::mutable_svrname() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerNode.SvrName)
  return svrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientServerNode::release_svrname() {
  // @@protoc_insertion_point(field_release:ClientServerNode.SvrName)
  
  return svrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientServerNode::set_allocated_svrname(::std::string* svrname) {
  if (svrname != NULL) {
    
  } else {
    
  }
  svrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svrname);
  // @@protoc_insertion_point(field_set_allocated:ClientServerNode.SvrName)
}

// uint32 SvrState = 3;
void ClientServerNode::clear_svrstate() {
  svrstate_ = 0u;
}
::google::protobuf::uint32 ClientServerNode::svrstate() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrState)
  return svrstate_;
}
void ClientServerNode::set_svrstate(::google::protobuf::uint32 value) {
  
  svrstate_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrState)
}

// uint32 SvrDefault = 4;
void ClientServerNode::clear_svrdefault() {
  svrdefault_ = 0u;
}
::google::protobuf::uint32 ClientServerNode::svrdefault() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrDefault)
  return svrdefault_;
}
void ClientServerNode::set_svrdefault(::google::protobuf::uint32 value) {
  
  svrdefault_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrDefault)
}

// int32 SvrOpenTime = 5;
void ClientServerNode::clear_svropentime() {
  svropentime_ = 0;
}
::google::protobuf::int32 ClientServerNode::svropentime() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrOpenTime)
  return svropentime_;
}
void ClientServerNode::set_svropentime(::google::protobuf::int32 value) {
  
  svropentime_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrOpenTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerListAck::kRetCodeFieldNumber;
const int ClientServerListAck::kSvrNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerListAck::ClientServerListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerListAck)
}
ClientServerListAck::ClientServerListAck(const ClientServerListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      svrnode_(from.svrnode_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:ClientServerListAck)
}

void ClientServerListAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

ClientServerListAck::~ClientServerListAck() {
  // @@protoc_insertion_point(destructor:ClientServerListAck)
  SharedDtor();
}

void ClientServerListAck::SharedDtor() {
}

void ClientServerListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerListAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerListAck& ClientServerListAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientServerListAck* ClientServerListAck::New(::google::protobuf::Arena* arena) const {
  ClientServerListAck* n = new ClientServerListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerListAck)
  svrnode_.Clear();
  retcode_ = 0u;
}

bool ClientServerListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ClientServerNode SvrNode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_svrnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerListAck)
  return false;
#undef DO_
}

void ClientServerListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // repeated .ClientServerNode SvrNode = 2;
  for (unsigned int i = 0, n = this->svrnode_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->svrnode(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerListAck)
}

::google::protobuf::uint8* ClientServerListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // repeated .ClientServerNode SvrNode = 2;
  for (unsigned int i = 0, n = this->svrnode_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->svrnode(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerListAck)
  return target;
}

size_t ClientServerListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerListAck)
  size_t total_size = 0;

  // repeated .ClientServerNode SvrNode = 2;
  {
    unsigned int count = this->svrnode_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->svrnode(i));
    }
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerListAck)
    MergeFrom(*source);
  }
}

void ClientServerListAck::MergeFrom(const ClientServerListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  svrnode_.MergeFrom(from.svrnode_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ClientServerListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerListAck::CopyFrom(const ClientServerListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerListAck::IsInitialized() const {
  return true;
}

void ClientServerListAck::Swap(ClientServerListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerListAck::InternalSwap(ClientServerListAck* other) {
  svrnode_.InternalSwap(&other->svrnode_);
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerListAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerListAck

// uint32 RetCode = 1;
void ClientServerListAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 ClientServerListAck::retcode() const {
  // @@protoc_insertion_point(field_get:ClientServerListAck.RetCode)
  return retcode_;
}
void ClientServerListAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListAck.RetCode)
}

// repeated .ClientServerNode SvrNode = 2;
int ClientServerListAck::svrnode_size() const {
  return svrnode_.size();
}
void ClientServerListAck::clear_svrnode() {
  svrnode_.Clear();
}
const ::ClientServerNode& ClientServerListAck::svrnode(int index) const {
  // @@protoc_insertion_point(field_get:ClientServerListAck.SvrNode)
  return svrnode_.Get(index);
}
::ClientServerNode* ClientServerListAck::mutable_svrnode(int index) {
  // @@protoc_insertion_point(field_mutable:ClientServerListAck.SvrNode)
  return svrnode_.Mutable(index);
}
::ClientServerNode* ClientServerListAck::add_svrnode() {
  // @@protoc_insertion_point(field_add:ClientServerListAck.SvrNode)
  return svrnode_.Add();
}
::google::protobuf::RepeatedPtrField< ::ClientServerNode >*
ClientServerListAck::mutable_svrnode() {
  // @@protoc_insertion_point(field_mutable_list:ClientServerListAck.SvrNode)
  return &svrnode_;
}
const ::google::protobuf::RepeatedPtrField< ::ClientServerNode >&
ClientServerListAck::svrnode() const {
  // @@protoc_insertion_point(field_list:ClientServerListAck.SvrNode)
  return svrnode_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegToLoginSvrReq::kServerIDFieldNumber;
const int RegToLoginSvrReq::kServerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegToLoginSvrReq::RegToLoginSvrReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegToLoginSvrReq)
}
RegToLoginSvrReq::RegToLoginSvrReq(const RegToLoginSvrReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:RegToLoginSvrReq)
}

void RegToLoginSvrReq::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = 0;
  _cached_size_ = 0;
}

RegToLoginSvrReq::~RegToLoginSvrReq() {
  // @@protoc_insertion_point(destructor:RegToLoginSvrReq)
  SharedDtor();
}

void RegToLoginSvrReq::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegToLoginSvrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegToLoginSvrReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegToLoginSvrReq& RegToLoginSvrReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegToLoginSvrReq* RegToLoginSvrReq::New(::google::protobuf::Arena* arena) const {
  RegToLoginSvrReq* n = new RegToLoginSvrReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegToLoginSvrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RegToLoginSvrReq)
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = 0;
}

bool RegToLoginSvrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RegToLoginSvrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), this->servername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegToLoginSvrReq.ServerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RegToLoginSvrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RegToLoginSvrReq)
  return false;
#undef DO_
}

void RegToLoginSvrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RegToLoginSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegToLoginSvrReq.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // @@protoc_insertion_point(serialize_end:RegToLoginSvrReq)
}

::google::protobuf::uint8* RegToLoginSvrReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegToLoginSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegToLoginSvrReq.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RegToLoginSvrReq)
  return target;
}

size_t RegToLoginSvrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegToLoginSvrReq)
  size_t total_size = 0;

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegToLoginSvrReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegToLoginSvrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RegToLoginSvrReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegToLoginSvrReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegToLoginSvrReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegToLoginSvrReq)
    MergeFrom(*source);
  }
}

void RegToLoginSvrReq::MergeFrom(const RegToLoginSvrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegToLoginSvrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void RegToLoginSvrReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegToLoginSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegToLoginSvrReq::CopyFrom(const RegToLoginSvrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegToLoginSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegToLoginSvrReq::IsInitialized() const {
  return true;
}

void RegToLoginSvrReq::Swap(RegToLoginSvrReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegToLoginSvrReq::InternalSwap(RegToLoginSvrReq* other) {
  servername_.Swap(&other->servername_);
  std::swap(serverid_, other->serverid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegToLoginSvrReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegToLoginSvrReq

// int32 ServerID = 1;
void RegToLoginSvrReq::clear_serverid() {
  serverid_ = 0;
}
::google::protobuf::int32 RegToLoginSvrReq::serverid() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrReq.ServerID)
  return serverid_;
}
void RegToLoginSvrReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:RegToLoginSvrReq.ServerID)
}

// string ServerName = 2;
void RegToLoginSvrReq::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegToLoginSvrReq::servername() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrReq.ServerName)
  return servername_.GetNoArena();
}
void RegToLoginSvrReq::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RegToLoginSvrReq.ServerName)
}
#if LANG_CXX11
void RegToLoginSvrReq::set_servername(::std::string&& value) {
  
  servername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RegToLoginSvrReq.ServerName)
}
#endif
void RegToLoginSvrReq::set_servername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RegToLoginSvrReq.ServerName)
}
void RegToLoginSvrReq::set_servername(const char* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RegToLoginSvrReq.ServerName)
}
::std::string* RegToLoginSvrReq::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:RegToLoginSvrReq.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegToLoginSvrReq::release_servername() {
  // @@protoc_insertion_point(field_release:RegToLoginSvrReq.ServerName)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegToLoginSvrReq::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:RegToLoginSvrReq.ServerName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegToLoginSvrAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegToLoginSvrAck::RegToLoginSvrAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegToLoginSvrAck)
}
RegToLoginSvrAck::RegToLoginSvrAck(const RegToLoginSvrAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RegToLoginSvrAck)
}

void RegToLoginSvrAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RegToLoginSvrAck::~RegToLoginSvrAck() {
  // @@protoc_insertion_point(destructor:RegToLoginSvrAck)
  SharedDtor();
}

void RegToLoginSvrAck::SharedDtor() {
}

void RegToLoginSvrAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegToLoginSvrAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegToLoginSvrAck& RegToLoginSvrAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegToLoginSvrAck* RegToLoginSvrAck::New(::google::protobuf::Arena* arena) const {
  RegToLoginSvrAck* n = new RegToLoginSvrAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegToLoginSvrAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RegToLoginSvrAck)
  retcode_ = 0u;
}

bool RegToLoginSvrAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RegToLoginSvrAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RegToLoginSvrAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RegToLoginSvrAck)
  return false;
#undef DO_
}

void RegToLoginSvrAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RegToLoginSvrAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RegToLoginSvrAck)
}

::google::protobuf::uint8* RegToLoginSvrAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegToLoginSvrAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RegToLoginSvrAck)
  return target;
}

size_t RegToLoginSvrAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegToLoginSvrAck)
  size_t total_size = 0;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegToLoginSvrAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegToLoginSvrAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RegToLoginSvrAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegToLoginSvrAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegToLoginSvrAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegToLoginSvrAck)
    MergeFrom(*source);
  }
}

void RegToLoginSvrAck::MergeFrom(const RegToLoginSvrAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegToLoginSvrAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RegToLoginSvrAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegToLoginSvrAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegToLoginSvrAck::CopyFrom(const RegToLoginSvrAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegToLoginSvrAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegToLoginSvrAck::IsInitialized() const {
  return true;
}

void RegToLoginSvrAck::Swap(RegToLoginSvrAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegToLoginSvrAck::InternalSwap(RegToLoginSvrAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegToLoginSvrAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegToLoginSvrAck

// uint32 RetCode = 1;
void RegToLoginSvrAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 RegToLoginSvrAck::retcode() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrAck.RetCode)
  return retcode_;
}
void RegToLoginSvrAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RegToLoginSvrAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmsvrRegToLogicReq::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmsvrRegToLogicReq::GmsvrRegToLogicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GmsvrRegToLogicReq)
}
GmsvrRegToLogicReq::GmsvrRegToLogicReq(const GmsvrRegToLogicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:GmsvrRegToLogicReq)
}

void GmsvrRegToLogicReq::SharedCtor() {
  serverid_ = 0;
  _cached_size_ = 0;
}

GmsvrRegToLogicReq::~GmsvrRegToLogicReq() {
  // @@protoc_insertion_point(destructor:GmsvrRegToLogicReq)
  SharedDtor();
}

void GmsvrRegToLogicReq::SharedDtor() {
}

void GmsvrRegToLogicReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmsvrRegToLogicReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmsvrRegToLogicReq& GmsvrRegToLogicReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GmsvrRegToLogicReq* GmsvrRegToLogicReq::New(::google::protobuf::Arena* arena) const {
  GmsvrRegToLogicReq* n = new GmsvrRegToLogicReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmsvrRegToLogicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GmsvrRegToLogicReq)
  serverid_ = 0;
}

bool GmsvrRegToLogicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GmsvrRegToLogicReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GmsvrRegToLogicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GmsvrRegToLogicReq)
  return false;
#undef DO_
}

void GmsvrRegToLogicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GmsvrRegToLogicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:GmsvrRegToLogicReq)
}

::google::protobuf::uint8* GmsvrRegToLogicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GmsvrRegToLogicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GmsvrRegToLogicReq)
  return target;
}

size_t GmsvrRegToLogicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GmsvrRegToLogicReq)
  size_t total_size = 0;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmsvrRegToLogicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GmsvrRegToLogicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GmsvrRegToLogicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmsvrRegToLogicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GmsvrRegToLogicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GmsvrRegToLogicReq)
    MergeFrom(*source);
  }
}

void GmsvrRegToLogicReq::MergeFrom(const GmsvrRegToLogicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GmsvrRegToLogicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void GmsvrRegToLogicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GmsvrRegToLogicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmsvrRegToLogicReq::CopyFrom(const GmsvrRegToLogicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GmsvrRegToLogicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmsvrRegToLogicReq::IsInitialized() const {
  return true;
}

void GmsvrRegToLogicReq::Swap(GmsvrRegToLogicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmsvrRegToLogicReq::InternalSwap(GmsvrRegToLogicReq* other) {
  std::swap(serverid_, other->serverid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmsvrRegToLogicReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmsvrRegToLogicReq

// int32 ServerID = 1;
void GmsvrRegToLogicReq::clear_serverid() {
  serverid_ = 0;
}
::google::protobuf::int32 GmsvrRegToLogicReq::serverid() const {
  // @@protoc_insertion_point(field_get:GmsvrRegToLogicReq.ServerID)
  return serverid_;
}
void GmsvrRegToLogicReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:GmsvrRegToLogicReq.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmsvrRegToLogicAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmsvrRegToLogicAck::GmsvrRegToLogicAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GmsvrRegToLogicAck)
}
GmsvrRegToLogicAck::GmsvrRegToLogicAck(const GmsvrRegToLogicAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:GmsvrRegToLogicAck)
}

void GmsvrRegToLogicAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

GmsvrRegToLogicAck::~GmsvrRegToLogicAck() {
  // @@protoc_insertion_point(destructor:GmsvrRegToLogicAck)
  SharedDtor();
}

void GmsvrRegToLogicAck::SharedDtor() {
}

void GmsvrRegToLogicAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmsvrRegToLogicAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmsvrRegToLogicAck& GmsvrRegToLogicAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GmsvrRegToLogicAck* GmsvrRegToLogicAck::New(::google::protobuf::Arena* arena) const {
  GmsvrRegToLogicAck* n = new GmsvrRegToLogicAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmsvrRegToLogicAck::Clear() {
// @@protoc_insertion_point(message_clear_start:GmsvrRegToLogicAck)
  retcode_ = 0u;
}

bool GmsvrRegToLogicAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GmsvrRegToLogicAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GmsvrRegToLogicAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GmsvrRegToLogicAck)
  return false;
#undef DO_
}

void GmsvrRegToLogicAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GmsvrRegToLogicAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:GmsvrRegToLogicAck)
}

::google::protobuf::uint8* GmsvrRegToLogicAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GmsvrRegToLogicAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GmsvrRegToLogicAck)
  return target;
}

size_t GmsvrRegToLogicAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GmsvrRegToLogicAck)
  size_t total_size = 0;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmsvrRegToLogicAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GmsvrRegToLogicAck)
  GOOGLE_DCHECK_NE(&from, this);
  const GmsvrRegToLogicAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmsvrRegToLogicAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GmsvrRegToLogicAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GmsvrRegToLogicAck)
    MergeFrom(*source);
  }
}

void GmsvrRegToLogicAck::MergeFrom(const GmsvrRegToLogicAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GmsvrRegToLogicAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GmsvrRegToLogicAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GmsvrRegToLogicAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmsvrRegToLogicAck::CopyFrom(const GmsvrRegToLogicAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GmsvrRegToLogicAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmsvrRegToLogicAck::IsInitialized() const {
  return true;
}

void GmsvrRegToLogicAck::Swap(GmsvrRegToLogicAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmsvrRegToLogicAck::InternalSwap(GmsvrRegToLogicAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmsvrRegToLogicAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmsvrRegToLogicAck

// uint32 RetCode = 1;
void GmsvrRegToLogicAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 GmsvrRegToLogicAck::retcode() const {
  // @@protoc_insertion_point(field_get:GmsvrRegToLogicAck.RetCode)
  return retcode_;
}
void GmsvrRegToLogicAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:GmsvrRegToLogicAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectServerReq::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectServerReq::SelectServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SelectServerReq)
}
SelectServerReq::SelectServerReq(const SelectServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:SelectServerReq)
}

void SelectServerReq::SharedCtor() {
  serverid_ = 0;
  _cached_size_ = 0;
}

SelectServerReq::~SelectServerReq() {
  // @@protoc_insertion_point(destructor:SelectServerReq)
  SharedDtor();
}

void SelectServerReq::SharedDtor() {
}

void SelectServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectServerReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectServerReq& SelectServerReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectServerReq* SelectServerReq::New(::google::protobuf::Arena* arena) const {
  SelectServerReq* n = new SelectServerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SelectServerReq)
  serverid_ = 0;
}

bool SelectServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SelectServerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SelectServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SelectServerReq)
  return false;
#undef DO_
}

void SelectServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SelectServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:SelectServerReq)
}

::google::protobuf::uint8* SelectServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SelectServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SelectServerReq)
  return target;
}

size_t SelectServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SelectServerReq)
  size_t total_size = 0;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SelectServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SelectServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SelectServerReq)
    MergeFrom(*source);
  }
}

void SelectServerReq::MergeFrom(const SelectServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SelectServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void SelectServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SelectServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectServerReq::CopyFrom(const SelectServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SelectServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectServerReq::IsInitialized() const {
  return true;
}

void SelectServerReq::Swap(SelectServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectServerReq::InternalSwap(SelectServerReq* other) {
  std::swap(serverid_, other->serverid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectServerReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectServerReq

// int32 ServerID = 1;
void SelectServerReq::clear_serverid() {
  serverid_ = 0;
}
::google::protobuf::int32 SelectServerReq::serverid() const {
  // @@protoc_insertion_point(field_get:SelectServerReq.ServerID)
  return serverid_;
}
void SelectServerReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:SelectServerReq.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectServerAck::kRetCodeFieldNumber;
const int SelectServerAck::kServerIDFieldNumber;
const int SelectServerAck::kServerAddrFieldNumber;
const int SelectServerAck::kServerPortFieldNumber;
const int SelectServerAck::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectServerAck::SelectServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SelectServerAck)
}
SelectServerAck::SelectServerAck(const SelectServerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serveraddr().size() > 0) {
    serveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddr_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:SelectServerAck)
}

void SelectServerAck::SharedCtor() {
  serveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(logincode_));
  _cached_size_ = 0;
}

SelectServerAck::~SelectServerAck() {
  // @@protoc_insertion_point(destructor:SelectServerAck)
  SharedDtor();
}

void SelectServerAck::SharedDtor() {
  serveraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectServerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectServerAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectServerAck& SelectServerAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectServerAck* SelectServerAck::New(::google::protobuf::Arena* arena) const {
  SelectServerAck* n = new SelectServerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SelectServerAck)
  serveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(logincode_));
}

bool SelectServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SelectServerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ServerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serveraddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serveraddr().data(), this->serveraddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SelectServerAck.ServerAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerPort = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SelectServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SelectServerAck)
  return false;
#undef DO_
}

void SelectServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SelectServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint32 ServerID = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->serverid(), output);
  }

  // string ServerAddr = 3;
  if (this->serveraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddr().data(), this->serveraddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SelectServerAck.ServerAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serveraddr(), output);
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverport(), output);
  }

  // int32 LoginCode = 5;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:SelectServerAck)
}

::google::protobuf::uint8* SelectServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SelectServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint32 ServerID = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->serverid(), target);
  }

  // string ServerAddr = 3;
  if (this->serveraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddr().data(), this->serveraddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SelectServerAck.ServerAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serveraddr(), target);
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverport(), target);
  }

  // int32 LoginCode = 5;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SelectServerAck)
  return target;
}

size_t SelectServerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SelectServerAck)
  size_t total_size = 0;

  // string ServerAddr = 3;
  if (this->serveraddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serveraddr());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // uint32 ServerID = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serverid());
  }

  // int32 ServerPort = 4;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // int32 LoginCode = 5;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SelectServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectServerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SelectServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SelectServerAck)
    MergeFrom(*source);
  }
}

void SelectServerAck::MergeFrom(const SelectServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SelectServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serveraddr().size() > 0) {

    serveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddr_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void SelectServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SelectServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectServerAck::CopyFrom(const SelectServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SelectServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectServerAck::IsInitialized() const {
  return true;
}

void SelectServerAck::Swap(SelectServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectServerAck::InternalSwap(SelectServerAck* other) {
  serveraddr_.Swap(&other->serveraddr_);
  std::swap(retcode_, other->retcode_);
  std::swap(serverid_, other->serverid_);
  std::swap(serverport_, other->serverport_);
  std::swap(logincode_, other->logincode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectServerAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectServerAck

// uint32 RetCode = 1;
void SelectServerAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 SelectServerAck::retcode() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.RetCode)
  return retcode_;
}
void SelectServerAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.RetCode)
}

// uint32 ServerID = 2;
void SelectServerAck::clear_serverid() {
  serverid_ = 0u;
}
::google::protobuf::uint32 SelectServerAck::serverid() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerID)
  return serverid_;
}
void SelectServerAck::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerID)
}

// string ServerAddr = 3;
void SelectServerAck::clear_serveraddr() {
  serveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SelectServerAck::serveraddr() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerAddr)
  return serveraddr_.GetNoArena();
}
void SelectServerAck::set_serveraddr(const ::std::string& value) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerAddr)
}
#if LANG_CXX11
void SelectServerAck::set_serveraddr(::std::string&& value) {
  
  serveraddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SelectServerAck.ServerAddr)
}
#endif
void SelectServerAck::set_serveraddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SelectServerAck.ServerAddr)
}
void SelectServerAck::set_serveraddr(const char* value, size_t size) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SelectServerAck.ServerAddr)
}
::std::string* SelectServerAck::mutable_serveraddr() {
  
  // @@protoc_insertion_point(field_mutable:SelectServerAck.ServerAddr)
  return serveraddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectServerAck::release_serveraddr() {
  // @@protoc_insertion_point(field_release:SelectServerAck.ServerAddr)
  
  return serveraddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectServerAck::set_allocated_serveraddr(::std::string* serveraddr) {
  if (serveraddr != NULL) {
    
  } else {
    
  }
  serveraddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serveraddr);
  // @@protoc_insertion_point(field_set_allocated:SelectServerAck.ServerAddr)
}

// int32 ServerPort = 4;
void SelectServerAck::clear_serverport() {
  serverport_ = 0;
}
::google::protobuf::int32 SelectServerAck::serverport() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerPort)
  return serverport_;
}
void SelectServerAck::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerPort)
}

// int32 LoginCode = 5;
void SelectServerAck::clear_logincode() {
  logincode_ = 0;
}
::google::protobuf::int32 SelectServerAck::logincode() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.LoginCode)
  return logincode_;
}
void SelectServerAck::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleItem::kIDFieldNumber;
const int RoleItem::kNameFieldNumber;
const int RoleItem::kRoleTypeFieldNumber;
const int RoleItem::kLevelFieldNumber;
const int RoleItem::kExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleItem::RoleItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleItem)
}
RoleItem::RoleItem(const RoleItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&exp_) -
    reinterpret_cast<char*>(&id_) + sizeof(exp_));
  // @@protoc_insertion_point(copy_constructor:RoleItem)
}

void RoleItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&exp_) -
    reinterpret_cast<char*>(&id_) + sizeof(exp_));
  _cached_size_ = 0;
}

RoleItem::~RoleItem() {
  // @@protoc_insertion_point(destructor:RoleItem)
  SharedDtor();
}

void RoleItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleItem::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleItem& RoleItem::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleItem* RoleItem::New(::google::protobuf::Arena* arena) const {
  RoleItem* n = new RoleItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleItem::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleItem)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&exp_) -
    reinterpret_cast<char*>(&id_) + sizeof(exp_));
}

bool RoleItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleItem.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RoleType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Exp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleItem)
  return false;
#undef DO_
}

void RoleItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 RoleType = 3;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roletype(), output);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // uint64 Exp = 5;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->exp(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleItem)
}

::google::protobuf::uint8* RoleItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 RoleType = 3;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roletype(), target);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // uint64 Exp = 5;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->exp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleItem)
  return target;
}

size_t RoleItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleItem)
  size_t total_size = 0;

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 RoleType = 3;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roletype());
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // uint64 Exp = 5;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->exp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleItem)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleItem)
    MergeFrom(*source);
  }
}

void RoleItem::MergeFrom(const RoleItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
}

void RoleItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleItem::CopyFrom(const RoleItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleItem::IsInitialized() const {
  return true;
}

void RoleItem::Swap(RoleItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleItem::InternalSwap(RoleItem* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  std::swap(roletype_, other->roletype_);
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleItem::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleItem

// uint64 ID = 1;
void RoleItem::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleItem::id() const {
  // @@protoc_insertion_point(field_get:RoleItem.ID)
  return id_;
}
void RoleItem::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.ID)
}

// string Name = 2;
void RoleItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleItem::name() const {
  // @@protoc_insertion_point(field_get:RoleItem.Name)
  return name_.GetNoArena();
}
void RoleItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleItem.Name)
}
#if LANG_CXX11
void RoleItem::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleItem.Name)
}
#endif
void RoleItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleItem.Name)
}
void RoleItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleItem.Name)
}
::std::string* RoleItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleItem::release_name() {
  // @@protoc_insertion_point(field_release:RoleItem.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleItem.Name)
}

// int32 RoleType = 3;
void RoleItem::clear_roletype() {
  roletype_ = 0;
}
::google::protobuf::int32 RoleItem::roletype() const {
  // @@protoc_insertion_point(field_get:RoleItem.RoleType)
  return roletype_;
}
void RoleItem::set_roletype(::google::protobuf::int32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.RoleType)
}

// int32 Level = 4;
void RoleItem::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 RoleItem::level() const {
  // @@protoc_insertion_point(field_get:RoleItem.Level)
  return level_;
}
void RoleItem::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.Level)
}

// uint64 Exp = 5;
void RoleItem::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleItem::exp() const {
  // @@protoc_insertion_point(field_get:RoleItem.Exp)
  return exp_;
}
void RoleItem::set_exp(::google::protobuf::uint64 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.Exp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListReq::kAccountIDFieldNumber;
const int RoleListReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListReq::RoleListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListReq)
}
RoleListReq::RoleListReq(const RoleListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:RoleListReq)
}

void RoleListReq::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
  _cached_size_ = 0;
}

RoleListReq::~RoleListReq() {
  // @@protoc_insertion_point(destructor:RoleListReq)
  SharedDtor();
}

void RoleListReq::SharedDtor() {
}

void RoleListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleListReq& RoleListReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleListReq* RoleListReq::New(::google::protobuf::Arena* arena) const {
  RoleListReq* n = new RoleListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListReq)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
}

bool RoleListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListReq)
  return false;
#undef DO_
}

void RoleListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleListReq)
}

::google::protobuf::uint8* RoleListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleListReq)
  return target;
}

size_t RoleListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListReq)
  size_t total_size = 0;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListReq)
    MergeFrom(*source);
  }
}

void RoleListReq::MergeFrom(const RoleListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListReq::CopyFrom(const RoleListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListReq::IsInitialized() const {
  return true;
}

void RoleListReq::Swap(RoleListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListReq::InternalSwap(RoleListReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(logincode_, other->logincode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListReq

// uint64 AccountID = 1;
void RoleListReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleListReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleListReq.AccountID)
  return accountid_;
}
void RoleListReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.AccountID)
}

// int32 LoginCode = 2;
void RoleListReq::clear_logincode() {
  logincode_ = 0;
}
::google::protobuf::int32 RoleListReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleListReq.LoginCode)
  return logincode_;
}
void RoleListReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListAck::kRetCodeFieldNumber;
const int RoleListAck::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListAck::RoleListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListAck)
}
RoleListAck::RoleListAck(const RoleListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rolelist_(from.rolelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleListAck)
}

void RoleListAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleListAck::~RoleListAck() {
  // @@protoc_insertion_point(destructor:RoleListAck)
  SharedDtor();
}

void RoleListAck::SharedDtor() {
}

void RoleListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleListAck& RoleListAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleListAck* RoleListAck::New(::google::protobuf::Arena* arena) const {
  RoleListAck* n = new RoleListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListAck)
  rolelist_.Clear();
  retcode_ = 0u;
}

bool RoleListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RoleItem RoleList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rolelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListAck)
  return false;
#undef DO_
}

void RoleListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // repeated .RoleItem RoleList = 2;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rolelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleListAck)
}

::google::protobuf::uint8* RoleListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // repeated .RoleItem RoleList = 2;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->rolelist(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleListAck)
  return target;
}

size_t RoleListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListAck)
  size_t total_size = 0;

  // repeated .RoleItem RoleList = 2;
  {
    unsigned int count = this->rolelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rolelist(i));
    }
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListAck)
    MergeFrom(*source);
  }
}

void RoleListAck::MergeFrom(const RoleListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rolelist_.MergeFrom(from.rolelist_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListAck::CopyFrom(const RoleListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListAck::IsInitialized() const {
  return true;
}

void RoleListAck::Swap(RoleListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListAck::InternalSwap(RoleListAck* other) {
  rolelist_.InternalSwap(&other->rolelist_);
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListAck

// uint32 RetCode = 1;
void RoleListAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 RoleListAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleListAck.RetCode)
  return retcode_;
}
void RoleListAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleListAck.RetCode)
}

// repeated .RoleItem RoleList = 2;
int RoleListAck::rolelist_size() const {
  return rolelist_.size();
}
void RoleListAck::clear_rolelist() {
  rolelist_.Clear();
}
const ::RoleItem& RoleListAck::rolelist(int index) const {
  // @@protoc_insertion_point(field_get:RoleListAck.RoleList)
  return rolelist_.Get(index);
}
::RoleItem* RoleListAck::mutable_rolelist(int index) {
  // @@protoc_insertion_point(field_mutable:RoleListAck.RoleList)
  return rolelist_.Mutable(index);
}
::RoleItem* RoleListAck::add_rolelist() {
  // @@protoc_insertion_point(field_add:RoleListAck.RoleList)
  return rolelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::RoleItem >*
RoleListAck::mutable_rolelist() {
  // @@protoc_insertion_point(field_mutable_list:RoleListAck.RoleList)
  return &rolelist_;
}
const ::google::protobuf::RepeatedPtrField< ::RoleItem >&
RoleListAck::rolelist() const {
  // @@protoc_insertion_point(field_list:RoleListAck.RoleList)
  return rolelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleCreateReq::kAccountIDFieldNumber;
const int RoleCreateReq::kNameFieldNumber;
const int RoleCreateReq::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleCreateReq::RoleCreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleCreateReq)
}
RoleCreateReq::RoleCreateReq(const RoleCreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
  // @@protoc_insertion_point(copy_constructor:RoleCreateReq)
}

void RoleCreateReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
  _cached_size_ = 0;
}

RoleCreateReq::~RoleCreateReq() {
  // @@protoc_insertion_point(destructor:RoleCreateReq)
  SharedDtor();
}

void RoleCreateReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleCreateReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleCreateReq& RoleCreateReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleCreateReq* RoleCreateReq::New(::google::protobuf::Arena* arena) const {
  RoleCreateReq* n = new RoleCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleCreateReq)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
}

bool RoleCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleCreateReq.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RoleType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleCreateReq)
  return false;
#undef DO_
}

void RoleCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateReq.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // uint32 RoleType = 4;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->roletype(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleCreateReq)
}

::google::protobuf::uint8* RoleCreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateReq.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // uint32 RoleType = 4;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->roletype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleCreateReq)
  return target;
}

size_t RoleCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleCreateReq)
  size_t total_size = 0;

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RoleType = 4;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleCreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleCreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleCreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleCreateReq)
    MergeFrom(*source);
  }
}

void RoleCreateReq::MergeFrom(const RoleCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
}

void RoleCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleCreateReq::CopyFrom(const RoleCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCreateReq::IsInitialized() const {
  return true;
}

void RoleCreateReq::Swap(RoleCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleCreateReq::InternalSwap(RoleCreateReq* other) {
  name_.Swap(&other->name_);
  std::swap(accountid_, other->accountid_);
  std::swap(roletype_, other->roletype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleCreateReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleCreateReq

// uint64 AccountID = 1;
void RoleCreateReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleCreateReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.AccountID)
  return accountid_;
}
void RoleCreateReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.AccountID)
}

// string Name = 3;
void RoleCreateReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleCreateReq::name() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Name)
  return name_.GetNoArena();
}
void RoleCreateReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleCreateReq.Name)
}
#if LANG_CXX11
void RoleCreateReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleCreateReq.Name)
}
#endif
void RoleCreateReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleCreateReq.Name)
}
void RoleCreateReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleCreateReq.Name)
}
::std::string* RoleCreateReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleCreateReq.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleCreateReq::release_name() {
  // @@protoc_insertion_point(field_release:RoleCreateReq.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleCreateReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleCreateReq.Name)
}

// uint32 RoleType = 4;
void RoleCreateReq::clear_roletype() {
  roletype_ = 0u;
}
::google::protobuf::uint32 RoleCreateReq::roletype() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.RoleType)
  return roletype_;
}
void RoleCreateReq::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.RoleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleCreateAck::kRetCodeFieldNumber;
const int RoleCreateAck::kAccountIDFieldNumber;
const int RoleCreateAck::kRoleIDFieldNumber;
const int RoleCreateAck::kNameFieldNumber;
const int RoleCreateAck::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleCreateAck::RoleCreateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleCreateAck)
}
RoleCreateAck::RoleCreateAck(const RoleCreateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
  // @@protoc_insertion_point(copy_constructor:RoleCreateAck)
}

void RoleCreateAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
  _cached_size_ = 0;
}

RoleCreateAck::~RoleCreateAck() {
  // @@protoc_insertion_point(destructor:RoleCreateAck)
  SharedDtor();
}

void RoleCreateAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleCreateAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleCreateAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleCreateAck& RoleCreateAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleCreateAck* RoleCreateAck::New(::google::protobuf::Arena* arena) const {
  RoleCreateAck* n = new RoleCreateAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleCreateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleCreateAck)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
}

bool RoleCreateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleCreateAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleCreateAck.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RoleType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleCreateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleCreateAck)
  return false;
#undef DO_
}

void RoleCreateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roleid(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateAck.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // uint32 RoleType = 5;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->roletype(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleCreateAck)
}

::google::protobuf::uint8* RoleCreateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roleid(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateAck.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // uint32 RoleType = 5;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->roletype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleCreateAck)
  return target;
}

size_t RoleCreateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleCreateAck)
  size_t total_size = 0;

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // uint32 RoleType = 5;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleCreateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleCreateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleCreateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleCreateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleCreateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleCreateAck)
    MergeFrom(*source);
  }
}

void RoleCreateAck::MergeFrom(const RoleCreateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleCreateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
}

void RoleCreateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleCreateAck::CopyFrom(const RoleCreateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCreateAck::IsInitialized() const {
  return true;
}

void RoleCreateAck::Swap(RoleCreateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleCreateAck::InternalSwap(RoleCreateAck* other) {
  name_.Swap(&other->name_);
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(retcode_, other->retcode_);
  std::swap(roletype_, other->roletype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleCreateAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleCreateAck

// uint32 RetCode = 1;
void RoleCreateAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 RoleCreateAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RetCode)
  return retcode_;
}
void RoleCreateAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RetCode)
}

// uint64 AccountID = 2;
void RoleCreateAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleCreateAck::accountid() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.AccountID)
  return accountid_;
}
void RoleCreateAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.AccountID)
}

// uint64 RoleID = 3;
void RoleCreateAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleCreateAck::roleid() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RoleID)
  return roleid_;
}
void RoleCreateAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RoleID)
}

// string Name = 4;
void RoleCreateAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleCreateAck::name() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.Name)
  return name_.GetNoArena();
}
void RoleCreateAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleCreateAck.Name)
}
#if LANG_CXX11
void RoleCreateAck::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleCreateAck.Name)
}
#endif
void RoleCreateAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleCreateAck.Name)
}
void RoleCreateAck::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleCreateAck.Name)
}
::std::string* RoleCreateAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleCreateAck.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleCreateAck::release_name() {
  // @@protoc_insertion_point(field_release:RoleCreateAck.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleCreateAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleCreateAck.Name)
}

// uint32 RoleType = 5;
void RoleCreateAck::clear_roletype() {
  roletype_ = 0u;
}
::google::protobuf::uint32 RoleCreateAck::roletype() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RoleType)
  return roletype_;
}
void RoleCreateAck::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RoleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDeleteReq::kAccountIDFieldNumber;
const int RoleDeleteReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDeleteReq::RoleDeleteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDeleteReq)
}
RoleDeleteReq::RoleDeleteReq(const RoleDeleteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:RoleDeleteReq)
}

void RoleDeleteReq::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
  _cached_size_ = 0;
}

RoleDeleteReq::~RoleDeleteReq() {
  // @@protoc_insertion_point(destructor:RoleDeleteReq)
  SharedDtor();
}

void RoleDeleteReq::SharedDtor() {
}

void RoleDeleteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDeleteReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDeleteReq& RoleDeleteReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleDeleteReq* RoleDeleteReq::New(::google::protobuf::Arena* arena) const {
  RoleDeleteReq* n = new RoleDeleteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDeleteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDeleteReq)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
}

bool RoleDeleteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDeleteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDeleteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDeleteReq)
  return false;
#undef DO_
}

void RoleDeleteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDeleteReq)
}

::google::protobuf::uint8* RoleDeleteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDeleteReq)
  return target;
}

size_t RoleDeleteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDeleteReq)
  size_t total_size = 0;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDeleteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDeleteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDeleteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDeleteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDeleteReq)
    MergeFrom(*source);
  }
}

void RoleDeleteReq::MergeFrom(const RoleDeleteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleDeleteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDeleteReq::CopyFrom(const RoleDeleteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDeleteReq::IsInitialized() const {
  return true;
}

void RoleDeleteReq::Swap(RoleDeleteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDeleteReq::InternalSwap(RoleDeleteReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDeleteReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDeleteReq

// uint64 AccountID = 1;
void RoleDeleteReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleDeleteReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.AccountID)
  return accountid_;
}
void RoleDeleteReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.AccountID)
}

// uint64 RoleID = 2;
void RoleDeleteReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleDeleteReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.RoleID)
  return roleid_;
}
void RoleDeleteReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDeleteAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDeleteAck::RoleDeleteAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDeleteAck)
}
RoleDeleteAck::RoleDeleteAck(const RoleDeleteAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleDeleteAck)
}

void RoleDeleteAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleDeleteAck::~RoleDeleteAck() {
  // @@protoc_insertion_point(destructor:RoleDeleteAck)
  SharedDtor();
}

void RoleDeleteAck::SharedDtor() {
}

void RoleDeleteAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDeleteAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDeleteAck& RoleDeleteAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleDeleteAck* RoleDeleteAck::New(::google::protobuf::Arena* arena) const {
  RoleDeleteAck* n = new RoleDeleteAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDeleteAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDeleteAck)
  retcode_ = 0u;
}

bool RoleDeleteAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDeleteAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDeleteAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDeleteAck)
  return false;
#undef DO_
}

void RoleDeleteAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDeleteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDeleteAck)
}

::google::protobuf::uint8* RoleDeleteAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleDeleteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDeleteAck)
  return target;
}

size_t RoleDeleteAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDeleteAck)
  size_t total_size = 0;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDeleteAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDeleteAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDeleteAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDeleteAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDeleteAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDeleteAck)
    MergeFrom(*source);
  }
}

void RoleDeleteAck::MergeFrom(const RoleDeleteAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDeleteAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleDeleteAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDeleteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDeleteAck::CopyFrom(const RoleDeleteAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDeleteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDeleteAck::IsInitialized() const {
  return true;
}

void RoleDeleteAck::Swap(RoleDeleteAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDeleteAck::InternalSwap(RoleDeleteAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDeleteAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDeleteAck

// uint32 RetCode = 1;
void RoleDeleteAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 RoleDeleteAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDeleteAck.RetCode)
  return retcode_;
}
void RoleDeleteAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLoginReq::kAccountIDFieldNumber;
const int RoleLoginReq::kRoleIDFieldNumber;
const int RoleLoginReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLoginReq::RoleLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLoginReq)
}
RoleLoginReq::RoleLoginReq(const RoleLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:RoleLoginReq)
}

void RoleLoginReq::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
  _cached_size_ = 0;
}

RoleLoginReq::~RoleLoginReq() {
  // @@protoc_insertion_point(destructor:RoleLoginReq)
  SharedDtor();
}

void RoleLoginReq::SharedDtor() {
}

void RoleLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLoginReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLoginReq& RoleLoginReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLoginReq* RoleLoginReq::New(::google::protobuf::Arena* arena) const {
  RoleLoginReq* n = new RoleLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLoginReq)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
}

bool RoleLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLoginReq)
  return false;
#undef DO_
}

void RoleLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLoginReq)
}

::google::protobuf::uint8* RoleLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLoginReq)
  return target;
}

size_t RoleLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLoginReq)
  size_t total_size = 0;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 LoginCode = 3;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLoginReq)
    MergeFrom(*source);
  }
}

void RoleLoginReq::MergeFrom(const RoleLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLoginReq::CopyFrom(const RoleLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginReq::IsInitialized() const {
  return true;
}

void RoleLoginReq::Swap(RoleLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLoginReq::InternalSwap(RoleLoginReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(logincode_, other->logincode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLoginReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLoginReq

// uint64 AccountID = 1;
void RoleLoginReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.AccountID)
  return accountid_;
}
void RoleLoginReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.AccountID)
}

// uint64 RoleID = 2;
void RoleLoginReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleLoginReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.RoleID)
  return roleid_;
}
void RoleLoginReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.RoleID)
}

// int32 LoginCode = 3;
void RoleLoginReq::clear_logincode() {
  logincode_ = 0;
}
::google::protobuf::int32 RoleLoginReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.LoginCode)
  return logincode_;
}
void RoleLoginReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLoginAck::kRetCodeFieldNumber;
const int RoleLoginAck::kAccountIDFieldNumber;
const int RoleLoginAck::kRoleIDFieldNumber;
const int RoleLoginAck::kRoleTypeFieldNumber;
const int RoleLoginAck::kLevelFieldNumber;
const int RoleLoginAck::kExpFieldNumber;
const int RoleLoginAck::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLoginAck::RoleLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLoginAck)
}
RoleLoginAck::RoleLoginAck(const RoleLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:RoleLoginAck)
}

void RoleLoginAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(level_));
  _cached_size_ = 0;
}

RoleLoginAck::~RoleLoginAck() {
  // @@protoc_insertion_point(destructor:RoleLoginAck)
  SharedDtor();
}

void RoleLoginAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLoginAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLoginAck& RoleLoginAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLoginAck* RoleLoginAck::New(::google::protobuf::Arena* arena) const {
  RoleLoginAck* n = new RoleLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLoginAck)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(level_));
}

bool RoleLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RoleType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Exp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleLoginAck.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLoginAck)
  return false;
#undef DO_
}

void RoleLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roleid(), output);
  }

  // uint32 RoleType = 4;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->roletype(), output);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // uint64 Exp = 6;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->exp(), output);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleLoginAck.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLoginAck)
}

::google::protobuf::uint8* RoleLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roleid(), target);
  }

  // uint32 RoleType = 4;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->roletype(), target);
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // uint64 Exp = 6;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->exp(), target);
  }

  // string Name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleLoginAck.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLoginAck)
  return target;
}

size_t RoleLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLoginAck)
  size_t total_size = 0;

  // string Name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // uint32 RoleType = 4;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 Exp = 6;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->exp());
  }

  // int32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLoginAck)
    MergeFrom(*source);
  }
}

void RoleLoginAck::MergeFrom(const RoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void RoleLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLoginAck::CopyFrom(const RoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginAck::IsInitialized() const {
  return true;
}

void RoleLoginAck::Swap(RoleLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLoginAck::InternalSwap(RoleLoginAck* other) {
  name_.Swap(&other->name_);
  std::swap(accountid_, other->accountid_);
  std::swap(retcode_, other->retcode_);
  std::swap(roletype_, other->roletype_);
  std::swap(roleid_, other->roleid_);
  std::swap(exp_, other->exp_);
  std::swap(level_, other->level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLoginAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLoginAck

// uint32 RetCode = 1;
void RoleLoginAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 RoleLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.RetCode)
  return retcode_;
}
void RoleLoginAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.RetCode)
}

// uint64 AccountID = 2;
void RoleLoginAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.AccountID)
  return accountid_;
}
void RoleLoginAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.AccountID)
}

// uint64 RoleID = 3;
void RoleLoginAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleLoginAck::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.RoleID)
  return roleid_;
}
void RoleLoginAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.RoleID)
}

// uint32 RoleType = 4;
void RoleLoginAck::clear_roletype() {
  roletype_ = 0u;
}
::google::protobuf::uint32 RoleLoginAck::roletype() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.RoleType)
  return roletype_;
}
void RoleLoginAck::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.RoleType)
}

// int32 Level = 5;
void RoleLoginAck::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 RoleLoginAck::level() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.Level)
  return level_;
}
void RoleLoginAck::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.Level)
}

// uint64 Exp = 6;
void RoleLoginAck::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleLoginAck::exp() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.Exp)
  return exp_;
}
void RoleLoginAck::set_exp(::google::protobuf::uint64 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.Exp)
}

// string Name = 7;
void RoleLoginAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleLoginAck::name() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.Name)
  return name_.GetNoArena();
}
void RoleLoginAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleLoginAck.Name)
}
#if LANG_CXX11
void RoleLoginAck::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleLoginAck.Name)
}
#endif
void RoleLoginAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleLoginAck.Name)
}
void RoleLoginAck::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleLoginAck.Name)
}
::std::string* RoleLoginAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleLoginAck.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleLoginAck::release_name() {
  // @@protoc_insertion_point(field_release:RoleLoginAck.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleLoginAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleLoginAck.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLogoutReq::kAccountIDFieldNumber;
const int RoleLogoutReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLogoutReq::RoleLogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLogoutReq)
}
RoleLogoutReq::RoleLogoutReq(const RoleLogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:RoleLogoutReq)
}

void RoleLogoutReq::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
  _cached_size_ = 0;
}

RoleLogoutReq::~RoleLogoutReq() {
  // @@protoc_insertion_point(destructor:RoleLogoutReq)
  SharedDtor();
}

void RoleLogoutReq::SharedDtor() {
}

void RoleLogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLogoutReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLogoutReq& RoleLogoutReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLogoutReq* RoleLogoutReq::New(::google::protobuf::Arena* arena) const {
  RoleLogoutReq* n = new RoleLogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLogoutReq)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
}

bool RoleLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLogoutReq)
  return false;
#undef DO_
}

void RoleLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLogoutReq)
}

::google::protobuf::uint8* RoleLogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLogoutReq)
  return target;
}

size_t RoleLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLogoutReq)
  size_t total_size = 0;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLogoutReq)
    MergeFrom(*source);
  }
}

void RoleLogoutReq::MergeFrom(const RoleLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleLogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLogoutReq::CopyFrom(const RoleLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLogoutReq::IsInitialized() const {
  return true;
}

void RoleLogoutReq::Swap(RoleLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLogoutReq::InternalSwap(RoleLogoutReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLogoutReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLogoutReq

// uint64 AccountID = 1;
void RoleLogoutReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleLogoutReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLogoutReq.AccountID)
  return accountid_;
}
void RoleLogoutReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutReq.AccountID)
}

// uint64 RoleID = 2;
void RoleLogoutReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleLogoutReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLogoutReq.RoleID)
  return roleid_;
}
void RoleLogoutReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLogoutAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLogoutAck::RoleLogoutAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLogoutAck)
}
RoleLogoutAck::RoleLogoutAck(const RoleLogoutAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleLogoutAck)
}

void RoleLogoutAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleLogoutAck::~RoleLogoutAck() {
  // @@protoc_insertion_point(destructor:RoleLogoutAck)
  SharedDtor();
}

void RoleLogoutAck::SharedDtor() {
}

void RoleLogoutAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLogoutAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLogoutAck& RoleLogoutAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLogoutAck* RoleLogoutAck::New(::google::protobuf::Arena* arena) const {
  RoleLogoutAck* n = new RoleLogoutAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLogoutAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLogoutAck)
  retcode_ = 0u;
}

bool RoleLogoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLogoutAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLogoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLogoutAck)
  return false;
#undef DO_
}

void RoleLogoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLogoutAck)
}

::google::protobuf::uint8* RoleLogoutAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLogoutAck)
  return target;
}

size_t RoleLogoutAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLogoutAck)
  size_t total_size = 0;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLogoutAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLogoutAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLogoutAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLogoutAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLogoutAck)
    MergeFrom(*source);
  }
}

void RoleLogoutAck::MergeFrom(const RoleLogoutAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleLogoutAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLogoutAck::CopyFrom(const RoleLogoutAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLogoutAck::IsInitialized() const {
  return true;
}

void RoleLogoutAck::Swap(RoleLogoutAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLogoutAck::InternalSwap(RoleLogoutAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLogoutAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLogoutAck

// uint32 RetCode = 1;
void RoleLogoutAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 RoleLogoutAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleLogoutAck.RetCode)
  return retcode_;
}
void RoleLogoutAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDisconnectReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDisconnectReq::RoleDisconnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDisconnectReq)
}
RoleDisconnectReq::RoleDisconnectReq(const RoleDisconnectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:RoleDisconnectReq)
}

void RoleDisconnectReq::SharedCtor() {
  roleid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RoleDisconnectReq::~RoleDisconnectReq() {
  // @@protoc_insertion_point(destructor:RoleDisconnectReq)
  SharedDtor();
}

void RoleDisconnectReq::SharedDtor() {
}

void RoleDisconnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDisconnectReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDisconnectReq& RoleDisconnectReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleDisconnectReq* RoleDisconnectReq::New(::google::protobuf::Arena* arena) const {
  RoleDisconnectReq* n = new RoleDisconnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDisconnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDisconnectReq)
  roleid_ = GOOGLE_ULONGLONG(0);
}

bool RoleDisconnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDisconnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDisconnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDisconnectReq)
  return false;
#undef DO_
}

void RoleDisconnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDisconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDisconnectReq)
}

::google::protobuf::uint8* RoleDisconnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleDisconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDisconnectReq)
  return target;
}

size_t RoleDisconnectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDisconnectReq)
  size_t total_size = 0;

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDisconnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDisconnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDisconnectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDisconnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDisconnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDisconnectReq)
    MergeFrom(*source);
  }
}

void RoleDisconnectReq::MergeFrom(const RoleDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDisconnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleDisconnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDisconnectReq::CopyFrom(const RoleDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDisconnectReq::IsInitialized() const {
  return true;
}

void RoleDisconnectReq::Swap(RoleDisconnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDisconnectReq::InternalSwap(RoleDisconnectReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDisconnectReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDisconnectReq

// uint64 RoleID = 2;
void RoleDisconnectReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleDisconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.RoleID)
  return roleid_;
}
void RoleDisconnectReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDisconnectAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDisconnectAck::RoleDisconnectAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDisconnectAck)
}
RoleDisconnectAck::RoleDisconnectAck(const RoleDisconnectAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleDisconnectAck)
}

void RoleDisconnectAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleDisconnectAck::~RoleDisconnectAck() {
  // @@protoc_insertion_point(destructor:RoleDisconnectAck)
  SharedDtor();
}

void RoleDisconnectAck::SharedDtor() {
}

void RoleDisconnectAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDisconnectAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDisconnectAck& RoleDisconnectAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleDisconnectAck* RoleDisconnectAck::New(::google::protobuf::Arena* arena) const {
  RoleDisconnectAck* n = new RoleDisconnectAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDisconnectAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDisconnectAck)
  retcode_ = 0u;
}

bool RoleDisconnectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDisconnectAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDisconnectAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDisconnectAck)
  return false;
#undef DO_
}

void RoleDisconnectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDisconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDisconnectAck)
}

::google::protobuf::uint8* RoleDisconnectAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleDisconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDisconnectAck)
  return target;
}

size_t RoleDisconnectAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDisconnectAck)
  size_t total_size = 0;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDisconnectAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDisconnectAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDisconnectAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDisconnectAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDisconnectAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDisconnectAck)
    MergeFrom(*source);
  }
}

void RoleDisconnectAck::MergeFrom(const RoleDisconnectAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDisconnectAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleDisconnectAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDisconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDisconnectAck::CopyFrom(const RoleDisconnectAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDisconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDisconnectAck::IsInitialized() const {
  return true;
}

void RoleDisconnectAck::Swap(RoleDisconnectAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDisconnectAck::InternalSwap(RoleDisconnectAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDisconnectAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDisconnectAck

// uint32 RetCode = 1;
void RoleDisconnectAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 RoleDisconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectAck.RetCode)
  return retcode_;
}
void RoleDisconnectAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleMoveReq::kRoleIDFieldNumber;
const int RoleMoveReq::kXFieldNumber;
const int RoleMoveReq::kYFieldNumber;
const int RoleMoveReq::kZFieldNumber;
const int RoleMoveReq::kDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleMoveReq::RoleMoveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleMoveReq)
}
RoleMoveReq::RoleMoveReq(const RoleMoveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    reinterpret_cast<char*>(&d_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(d_));
  // @@protoc_insertion_point(copy_constructor:RoleMoveReq)
}

void RoleMoveReq::SharedCtor() {
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&d_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(d_));
  _cached_size_ = 0;
}

RoleMoveReq::~RoleMoveReq() {
  // @@protoc_insertion_point(destructor:RoleMoveReq)
  SharedDtor();
}

void RoleMoveReq::SharedDtor() {
}

void RoleMoveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleMoveReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleMoveReq& RoleMoveReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleMoveReq* RoleMoveReq::New(::google::protobuf::Arena* arena) const {
  RoleMoveReq* n = new RoleMoveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleMoveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleMoveReq)
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&d_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(d_));
}

bool RoleMoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleMoveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float d = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleMoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleMoveReq)
  return false;
#undef DO_
}

void RoleMoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleMoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // float d = 5;
  if (this->d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->d(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleMoveReq)
}

::google::protobuf::uint8* RoleMoveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleMoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // float d = 5;
  if (this->d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->d(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleMoveReq)
  return target;
}

size_t RoleMoveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleMoveReq)
  size_t total_size = 0;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float d = 5;
  if (this->d() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleMoveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleMoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleMoveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleMoveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleMoveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleMoveReq)
    MergeFrom(*source);
  }
}

void RoleMoveReq::MergeFrom(const RoleMoveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleMoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.d() != 0) {
    set_d(from.d());
  }
}

void RoleMoveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleMoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleMoveReq::CopyFrom(const RoleMoveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleMoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleMoveReq::IsInitialized() const {
  return true;
}

void RoleMoveReq::Swap(RoleMoveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleMoveReq::InternalSwap(RoleMoveReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(d_, other->d_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleMoveReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleMoveReq

// uint64 RoleID = 1;
void RoleMoveReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RoleMoveReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleMoveReq.RoleID)
  return roleid_;
}
void RoleMoveReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleMoveReq.RoleID)
}

// float x = 2;
void RoleMoveReq::clear_x() {
  x_ = 0;
}
float RoleMoveReq::x() const {
  // @@protoc_insertion_point(field_get:RoleMoveReq.x)
  return x_;
}
void RoleMoveReq::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:RoleMoveReq.x)
}

// float y = 3;
void RoleMoveReq::clear_y() {
  y_ = 0;
}
float RoleMoveReq::y() const {
  // @@protoc_insertion_point(field_get:RoleMoveReq.y)
  return y_;
}
void RoleMoveReq::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:RoleMoveReq.y)
}

// float z = 4;
void RoleMoveReq::clear_z() {
  z_ = 0;
}
float RoleMoveReq::z() const {
  // @@protoc_insertion_point(field_get:RoleMoveReq.z)
  return z_;
}
void RoleMoveReq::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:RoleMoveReq.z)
}

// float d = 5;
void RoleMoveReq::clear_d() {
  d_ = 0;
}
float RoleMoveReq::d() const {
  // @@protoc_insertion_point(field_get:RoleMoveReq.d)
  return d_;
}
void RoleMoveReq::set_d(float value) {
  
  d_ = value;
  // @@protoc_insertion_point(field_set:RoleMoveReq.d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleMoveAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleMoveAck::RoleMoveAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleMoveAck)
}
RoleMoveAck::RoleMoveAck(const RoleMoveAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleMoveAck)
}

void RoleMoveAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

RoleMoveAck::~RoleMoveAck() {
  // @@protoc_insertion_point(destructor:RoleMoveAck)
  SharedDtor();
}

void RoleMoveAck::SharedDtor() {
}

void RoleMoveAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleMoveAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleMoveAck& RoleMoveAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleMoveAck* RoleMoveAck::New(::google::protobuf::Arena* arena) const {
  RoleMoveAck* n = new RoleMoveAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleMoveAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleMoveAck)
  retcode_ = 0u;
}

bool RoleMoveAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleMoveAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleMoveAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleMoveAck)
  return false;
#undef DO_
}

void RoleMoveAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleMoveAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleMoveAck)
}

::google::protobuf::uint8* RoleMoveAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleMoveAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleMoveAck)
  return target;
}

size_t RoleMoveAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleMoveAck)
  size_t total_size = 0;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleMoveAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleMoveAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleMoveAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleMoveAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleMoveAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleMoveAck)
    MergeFrom(*source);
  }
}

void RoleMoveAck::MergeFrom(const RoleMoveAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleMoveAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleMoveAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleMoveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleMoveAck::CopyFrom(const RoleMoveAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleMoveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleMoveAck::IsInitialized() const {
  return true;
}

void RoleMoveAck::Swap(RoleMoveAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleMoveAck::InternalSwap(RoleMoveAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleMoveAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleMoveAck

// uint32 RetCode = 1;
void RoleMoveAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 RoleMoveAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleMoveAck.RetCode)
  return retcode_;
}
void RoleMoveAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleMoveAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneReq::kCopyTypeFieldNumber;
const int CreateNewSceneReq::kCreateParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneReq::CreateNewSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateNewSceneReq)
}
CreateNewSceneReq::CreateNewSceneReq(const CreateNewSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&createparam_, &from.createparam_,
    reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&createparam_) + sizeof(copytype_));
  // @@protoc_insertion_point(copy_constructor:CreateNewSceneReq)
}

void CreateNewSceneReq::SharedCtor() {
  ::memset(&createparam_, 0, reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&createparam_) + sizeof(copytype_));
  _cached_size_ = 0;
}

CreateNewSceneReq::~CreateNewSceneReq() {
  // @@protoc_insertion_point(destructor:CreateNewSceneReq)
  SharedDtor();
}

void CreateNewSceneReq::SharedDtor() {
}

void CreateNewSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewSceneReq& CreateNewSceneReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateNewSceneReq* CreateNewSceneReq::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneReq* n = new CreateNewSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateNewSceneReq)
  ::memset(&createparam_, 0, reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&createparam_) + sizeof(copytype_));
}

bool CreateNewSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateNewSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 CopyType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateParam = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createparam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateNewSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateNewSceneReq)
  return false;
#undef DO_
}

void CreateNewSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 CopyType = 1;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->copytype(), output);
  }

  // uint64 CreateParam = 3;
  if (this->createparam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->createparam(), output);
  }

  // @@protoc_insertion_point(serialize_end:CreateNewSceneReq)
}

::google::protobuf::uint8* CreateNewSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 CopyType = 1;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->copytype(), target);
  }

  // uint64 CreateParam = 3;
  if (this->createparam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->createparam(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CreateNewSceneReq)
  return target;
}

size_t CreateNewSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateNewSceneReq)
  size_t total_size = 0;

  // uint64 CreateParam = 3;
  if (this->createparam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createparam());
  }

  // uint32 CopyType = 1;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateNewSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateNewSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateNewSceneReq)
    MergeFrom(*source);
  }
}

void CreateNewSceneReq::MergeFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateNewSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.createparam() != 0) {
    set_createparam(from.createparam());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
}

void CreateNewSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneReq::CopyFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneReq::IsInitialized() const {
  return true;
}

void CreateNewSceneReq::Swap(CreateNewSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneReq::InternalSwap(CreateNewSceneReq* other) {
  std::swap(createparam_, other->createparam_);
  std::swap(copytype_, other->copytype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewSceneReq

// uint32 CopyType = 1;
void CreateNewSceneReq::clear_copytype() {
  copytype_ = 0u;
}
::google::protobuf::uint32 CreateNewSceneReq::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CopyType)
  return copytype_;
}
void CreateNewSceneReq::set_copytype(::google::protobuf::uint32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CopyType)
}

// uint64 CreateParam = 3;
void CreateNewSceneReq::clear_createparam() {
  createparam_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CreateNewSceneReq::createparam() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CreateParam)
  return createparam_;
}
void CreateNewSceneReq::set_createparam(::google::protobuf::uint64 value) {
  
  createparam_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CreateParam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneAck::kRetCodeFieldNumber;
const int CreateNewSceneAck::kCopyTypeFieldNumber;
const int CreateNewSceneAck::kCopyIDFieldNumber;
const int CreateNewSceneAck::kCreateParamFieldNumber;
const int CreateNewSceneAck::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneAck::CreateNewSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateNewSceneAck)
}
CreateNewSceneAck::CreateNewSceneAck(const CreateNewSceneAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:CreateNewSceneAck)
}

void CreateNewSceneAck::SharedCtor() {
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(serverid_));
  _cached_size_ = 0;
}

CreateNewSceneAck::~CreateNewSceneAck() {
  // @@protoc_insertion_point(destructor:CreateNewSceneAck)
  SharedDtor();
}

void CreateNewSceneAck::SharedDtor() {
}

void CreateNewSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewSceneAck& CreateNewSceneAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateNewSceneAck* CreateNewSceneAck::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneAck* n = new CreateNewSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateNewSceneAck)
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(serverid_));
}

bool CreateNewSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateNewSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateParam = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createparam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ServerID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateNewSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateNewSceneAck)
  return false;
#undef DO_
}

void CreateNewSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateNewSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->copytype(), output);
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->copyid(), output);
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->createparam(), output);
  }

  // uint32 ServerID = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CreateNewSceneAck)
}

::google::protobuf::uint8* CreateNewSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateNewSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->copytype(), target);
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->copyid(), target);
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->createparam(), target);
  }

  // uint32 ServerID = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CreateNewSceneAck)
  return target;
}

size_t CreateNewSceneAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateNewSceneAck)
  size_t total_size = 0;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copytype());
  }

  // uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createparam());
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyid());
  }

  // uint32 ServerID = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateNewSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewSceneAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateNewSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateNewSceneAck)
    MergeFrom(*source);
  }
}

void CreateNewSceneAck::MergeFrom(const CreateNewSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateNewSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.createparam() != 0) {
    set_createparam(from.createparam());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void CreateNewSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateNewSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneAck::CopyFrom(const CreateNewSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateNewSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneAck::IsInitialized() const {
  return true;
}

void CreateNewSceneAck::Swap(CreateNewSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneAck::InternalSwap(CreateNewSceneAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(copytype_, other->copytype_);
  std::swap(createparam_, other->createparam_);
  std::swap(copyid_, other->copyid_);
  std::swap(serverid_, other->serverid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewSceneAck

// uint32 RetCode = 1;
void CreateNewSceneAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 CreateNewSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.RetCode)
  return retcode_;
}
void CreateNewSceneAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.RetCode)
}

// uint32 CopyType = 2;
void CreateNewSceneAck::clear_copytype() {
  copytype_ = 0u;
}
::google::protobuf::uint32 CreateNewSceneAck::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyType)
  return copytype_;
}
void CreateNewSceneAck::set_copytype(::google::protobuf::uint32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyType)
}

// uint32 CopyID = 3;
void CreateNewSceneAck::clear_copyid() {
  copyid_ = 0u;
}
::google::protobuf::uint32 CreateNewSceneAck::copyid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyID)
  return copyid_;
}
void CreateNewSceneAck::set_copyid(::google::protobuf::uint32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyID)
}

// uint64 CreateParam = 4;
void CreateNewSceneAck::clear_createparam() {
  createparam_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CreateNewSceneAck::createparam() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CreateParam)
  return createparam_;
}
void CreateNewSceneAck::set_createparam(::google::protobuf::uint64 value) {
  
  createparam_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CreateParam)
}

// uint32 ServerID = 5;
void CreateNewSceneAck::clear_serverid() {
  serverid_ = 0u;
}
::google::protobuf::uint32 CreateNewSceneAck::serverid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.ServerID)
  return serverid_;
}
void CreateNewSceneAck::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneReq::EnterSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterSceneReq)
}
EnterSceneReq::EnterSceneReq(const EnterSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:EnterSceneReq)
}

void EnterSceneReq::SharedCtor() {
  roleid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

EnterSceneReq::~EnterSceneReq() {
  // @@protoc_insertion_point(destructor:EnterSceneReq)
  SharedDtor();
}

void EnterSceneReq::SharedDtor() {
}

void EnterSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneReq& EnterSceneReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterSceneReq* EnterSceneReq::New(::google::protobuf::Arena* arena) const {
  EnterSceneReq* n = new EnterSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterSceneReq)
  roleid_ = GOOGLE_ULONGLONG(0);
}

bool EnterSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterSceneReq)
  return false;
#undef DO_
}

void EnterSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:EnterSceneReq)
}

::google::protobuf::uint8* EnterSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:EnterSceneReq)
  return target;
}

size_t EnterSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterSceneReq)
  size_t total_size = 0;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterSceneReq)
    MergeFrom(*source);
  }
}

void EnterSceneReq::MergeFrom(const EnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void EnterSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneReq::CopyFrom(const EnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneReq::IsInitialized() const {
  return true;
}

void EnterSceneReq::Swap(EnterSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneReq::InternalSwap(EnterSceneReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneReq

// uint64 RoleID = 1;
void EnterSceneReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EnterSceneReq::roleid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.RoleID)
  return roleid_;
}
void EnterSceneReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneAck::kRetCodeFieldNumber;
const int EnterSceneAck::kCopyTypeFieldNumber;
const int EnterSceneAck::kCopyIDFieldNumber;
const int EnterSceneAck::kRoleIDFieldNumber;
const int EnterSceneAck::kRoleNameFieldNumber;
const int EnterSceneAck::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneAck::EnterSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterSceneAck)
}
EnterSceneAck::EnterSceneAck(const EnterSceneAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rolename().size() > 0) {
    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(roletype_));
  // @@protoc_insertion_point(copy_constructor:EnterSceneAck)
}

void EnterSceneAck::SharedCtor() {
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(roletype_));
  _cached_size_ = 0;
}

EnterSceneAck::~EnterSceneAck() {
  // @@protoc_insertion_point(destructor:EnterSceneAck)
  SharedDtor();
}

void EnterSceneAck::SharedDtor() {
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnterSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneAck& EnterSceneAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterSceneAck* EnterSceneAck::New(::google::protobuf::Arena* arena) const {
  EnterSceneAck* n = new EnterSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterSceneAck)
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(roletype_));
}

bool EnterSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoleName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "EnterSceneAck.RoleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RoleType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterSceneAck)
  return false;
#undef DO_
}

void EnterSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->copytype(), output);
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->copyid(), output);
  }

  // uint64 RoleID = 4;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roleid(), output);
  }

  // string RoleName = 5;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnterSceneAck.RoleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->rolename(), output);
  }

  // uint32 RoleType = 6;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->roletype(), output);
  }

  // @@protoc_insertion_point(serialize_end:EnterSceneAck)
}

::google::protobuf::uint8* EnterSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnterSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->copytype(), target);
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->copyid(), target);
  }

  // uint64 RoleID = 4;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roleid(), target);
  }

  // string RoleName = 5;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnterSceneAck.RoleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->rolename(), target);
  }

  // uint32 RoleType = 6;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->roletype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:EnterSceneAck)
  return target;
}

size_t EnterSceneAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterSceneAck)
  size_t total_size = 0;

  // string RoleName = 5;
  if (this->rolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rolename());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // uint32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copytype());
  }

  // uint64 RoleID = 4;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyid());
  }

  // uint32 RoleType = 6;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterSceneAck)
    MergeFrom(*source);
  }
}

void EnterSceneAck::MergeFrom(const EnterSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rolename().size() > 0) {

    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
}

void EnterSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneAck::CopyFrom(const EnterSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneAck::IsInitialized() const {
  return true;
}

void EnterSceneAck::Swap(EnterSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneAck::InternalSwap(EnterSceneAck* other) {
  rolename_.Swap(&other->rolename_);
  std::swap(retcode_, other->retcode_);
  std::swap(copytype_, other->copytype_);
  std::swap(roleid_, other->roleid_);
  std::swap(copyid_, other->copyid_);
  std::swap(roletype_, other->roletype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneAck

// uint32 RetCode = 1;
void EnterSceneAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 EnterSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RetCode)
  return retcode_;
}
void EnterSceneAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.RetCode)
}

// uint32 CopyType = 2;
void EnterSceneAck::clear_copytype() {
  copytype_ = 0u;
}
::google::protobuf::uint32 EnterSceneAck::copytype() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.CopyType)
  return copytype_;
}
void EnterSceneAck::set_copytype(::google::protobuf::uint32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.CopyType)
}

// uint32 CopyID = 3;
void EnterSceneAck::clear_copyid() {
  copyid_ = 0u;
}
::google::protobuf::uint32 EnterSceneAck::copyid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.CopyID)
  return copyid_;
}
void EnterSceneAck::set_copyid(::google::protobuf::uint32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.CopyID)
}

// uint64 RoleID = 4;
void EnterSceneAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EnterSceneAck::roleid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RoleID)
  return roleid_;
}
void EnterSceneAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.RoleID)
}

// string RoleName = 5;
void EnterSceneAck::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnterSceneAck::rolename() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RoleName)
  return rolename_.GetNoArena();
}
void EnterSceneAck::set_rolename(const ::std::string& value) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.RoleName)
}
#if LANG_CXX11
void EnterSceneAck::set_rolename(::std::string&& value) {
  
  rolename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EnterSceneAck.RoleName)
}
#endif
void EnterSceneAck::set_rolename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EnterSceneAck.RoleName)
}
void EnterSceneAck::set_rolename(const char* value, size_t size) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EnterSceneAck.RoleName)
}
::std::string* EnterSceneAck::mutable_rolename() {
  
  // @@protoc_insertion_point(field_mutable:EnterSceneAck.RoleName)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnterSceneAck::release_rolename() {
  // @@protoc_insertion_point(field_release:EnterSceneAck.RoleName)
  
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnterSceneAck::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    
  } else {
    
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:EnterSceneAck.RoleName)
}

// uint32 RoleType = 6;
void EnterSceneAck::clear_roletype() {
  roletype_ = 0u;
}
::google::protobuf::uint32 EnterSceneAck::roletype() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RoleType)
  return roletype_;
}
void EnterSceneAck::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.RoleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveSceneReq::kRoleIDFieldNumber;
const int LeaveSceneReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSceneReq::LeaveSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LeaveSceneReq)
}
LeaveSceneReq::LeaveSceneReq(const LeaveSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:LeaveSceneReq)
}

void LeaveSceneReq::SharedCtor() {
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(reason_));
  _cached_size_ = 0;
}

LeaveSceneReq::~LeaveSceneReq() {
  // @@protoc_insertion_point(destructor:LeaveSceneReq)
  SharedDtor();
}

void LeaveSceneReq::SharedDtor() {
}

void LeaveSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveSceneReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveSceneReq& LeaveSceneReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

LeaveSceneReq* LeaveSceneReq::New(::google::protobuf::Arena* arena) const {
  LeaveSceneReq* n = new LeaveSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LeaveSceneReq)
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(reason_));
}

bool LeaveSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LeaveSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LeaveSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LeaveSceneReq)
  return false;
#undef DO_
}

void LeaveSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LeaveSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:LeaveSceneReq)
}

::google::protobuf::uint8* LeaveSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LeaveSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LeaveSceneReq)
  return target;
}

size_t LeaveSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LeaveSceneReq)
  size_t total_size = 0;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 Reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LeaveSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LeaveSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LeaveSceneReq)
    MergeFrom(*source);
  }
}

void LeaveSceneReq::MergeFrom(const LeaveSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LeaveSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void LeaveSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LeaveSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSceneReq::CopyFrom(const LeaveSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LeaveSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSceneReq::IsInitialized() const {
  return true;
}

void LeaveSceneReq::Swap(LeaveSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSceneReq::InternalSwap(LeaveSceneReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(reason_, other->reason_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveSceneReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveSceneReq

// uint64 RoleID = 1;
void LeaveSceneReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 LeaveSceneReq::roleid() const {
  // @@protoc_insertion_point(field_get:LeaveSceneReq.RoleID)
  return roleid_;
}
void LeaveSceneReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:LeaveSceneReq.RoleID)
}

// int32 Reason = 2;
void LeaveSceneReq::clear_reason() {
  reason_ = 0;
}
::google::protobuf::int32 LeaveSceneReq::reason() const {
  // @@protoc_insertion_point(field_get:LeaveSceneReq.Reason)
  return reason_;
}
void LeaveSceneReq::set_reason(::google::protobuf::int32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:LeaveSceneReq.Reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveSceneAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSceneAck::LeaveSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LeaveSceneAck)
}
LeaveSceneAck::LeaveSceneAck(const LeaveSceneAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:LeaveSceneAck)
}

void LeaveSceneAck::SharedCtor() {
  retcode_ = 0u;
  _cached_size_ = 0;
}

LeaveSceneAck::~LeaveSceneAck() {
  // @@protoc_insertion_point(destructor:LeaveSceneAck)
  SharedDtor();
}

void LeaveSceneAck::SharedDtor() {
}

void LeaveSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveSceneAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveSceneAck& LeaveSceneAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

LeaveSceneAck* LeaveSceneAck::New(::google::protobuf::Arena* arena) const {
  LeaveSceneAck* n = new LeaveSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:LeaveSceneAck)
  retcode_ = 0u;
}

bool LeaveSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LeaveSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LeaveSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LeaveSceneAck)
  return false;
#undef DO_
}

void LeaveSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LeaveSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:LeaveSceneAck)
}

::google::protobuf::uint8* LeaveSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LeaveSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LeaveSceneAck)
  return target;
}

size_t LeaveSceneAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LeaveSceneAck)
  size_t total_size = 0;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LeaveSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveSceneAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LeaveSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LeaveSceneAck)
    MergeFrom(*source);
  }
}

void LeaveSceneAck::MergeFrom(const LeaveSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LeaveSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void LeaveSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LeaveSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSceneAck::CopyFrom(const LeaveSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LeaveSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSceneAck::IsInitialized() const {
  return true;
}

void LeaveSceneAck::Swap(LeaveSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSceneAck::InternalSwap(LeaveSceneAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveSceneAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveSceneAck

// uint32 RetCode = 1;
void LeaveSceneAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 LeaveSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:LeaveSceneAck.RetCode)
  return retcode_;
}
void LeaveSceneAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:LeaveSceneAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransRoleDataReq::kRoleIDFieldNumber;
const int TransRoleDataReq::kRoleNameFieldNumber;
const int TransRoleDataReq::kRoleTypeFieldNumber;
const int TransRoleDataReq::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransRoleDataReq::TransRoleDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransRoleDataReq)
}
TransRoleDataReq::TransRoleDataReq(const TransRoleDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rolename().size() > 0) {
    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:TransRoleDataReq)
}

void TransRoleDataReq::SharedCtor() {
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
  _cached_size_ = 0;
}

TransRoleDataReq::~TransRoleDataReq() {
  // @@protoc_insertion_point(destructor:TransRoleDataReq)
  SharedDtor();
}

void TransRoleDataReq::SharedDtor() {
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransRoleDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransRoleDataReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransRoleDataReq& TransRoleDataReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransRoleDataReq* TransRoleDataReq::New(::google::protobuf::Arena* arena) const {
  TransRoleDataReq* n = new TransRoleDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransRoleDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TransRoleDataReq)
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
}

bool TransRoleDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransRoleDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoleName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TransRoleDataReq.RoleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RoleType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransRoleDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransRoleDataReq)
  return false;
#undef DO_
}

void TransRoleDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransRoleDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransRoleDataReq.RoleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rolename(), output);
  }

  // uint32 RoleType = 3;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roletype(), output);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // @@protoc_insertion_point(serialize_end:TransRoleDataReq)
}

::google::protobuf::uint8* TransRoleDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TransRoleDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransRoleDataReq.RoleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rolename(), target);
  }

  // uint32 RoleType = 3;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roletype(), target);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransRoleDataReq)
  return target;
}

size_t TransRoleDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransRoleDataReq)
  size_t total_size = 0;

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rolename());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RoleType = 3;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransRoleDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransRoleDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TransRoleDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransRoleDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransRoleDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransRoleDataReq)
    MergeFrom(*source);
  }
}

void TransRoleDataReq::MergeFrom(const TransRoleDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransRoleDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rolename().size() > 0) {

    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void TransRoleDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransRoleDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransRoleDataReq::CopyFrom(const TransRoleDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransRoleDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransRoleDataReq::IsInitialized() const {
  return true;
}

void TransRoleDataReq::Swap(TransRoleDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransRoleDataReq::InternalSwap(TransRoleDataReq* other) {
  rolename_.Swap(&other->rolename_);
  std::swap(roleid_, other->roleid_);
  std::swap(roletype_, other->roletype_);
  std::swap(level_, other->level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransRoleDataReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransRoleDataReq

// uint64 RoleID = 1;
void TransRoleDataReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TransRoleDataReq::roleid() const {
  // @@protoc_insertion_point(field_get:TransRoleDataReq.RoleID)
  return roleid_;
}
void TransRoleDataReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataReq.RoleID)
}

// string RoleName = 2;
void TransRoleDataReq::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransRoleDataReq::rolename() const {
  // @@protoc_insertion_point(field_get:TransRoleDataReq.RoleName)
  return rolename_.GetNoArena();
}
void TransRoleDataReq::set_rolename(const ::std::string& value) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransRoleDataReq.RoleName)
}
#if LANG_CXX11
void TransRoleDataReq::set_rolename(::std::string&& value) {
  
  rolename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TransRoleDataReq.RoleName)
}
#endif
void TransRoleDataReq::set_rolename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransRoleDataReq.RoleName)
}
void TransRoleDataReq::set_rolename(const char* value, size_t size) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransRoleDataReq.RoleName)
}
::std::string* TransRoleDataReq::mutable_rolename() {
  
  // @@protoc_insertion_point(field_mutable:TransRoleDataReq.RoleName)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransRoleDataReq::release_rolename() {
  // @@protoc_insertion_point(field_release:TransRoleDataReq.RoleName)
  
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransRoleDataReq::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    
  } else {
    
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:TransRoleDataReq.RoleName)
}

// uint32 RoleType = 3;
void TransRoleDataReq::clear_roletype() {
  roletype_ = 0u;
}
::google::protobuf::uint32 TransRoleDataReq::roletype() const {
  // @@protoc_insertion_point(field_get:TransRoleDataReq.RoleType)
  return roletype_;
}
void TransRoleDataReq::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataReq.RoleType)
}

// int32 Level = 4;
void TransRoleDataReq::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 TransRoleDataReq::level() const {
  // @@protoc_insertion_point(field_get:TransRoleDataReq.Level)
  return level_;
}
void TransRoleDataReq::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataReq.Level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransRoleDataAck::kRetCodeFieldNumber;
const int TransRoleDataAck::kRoleIDFieldNumber;
const int TransRoleDataAck::kCopyTypeFieldNumber;
const int TransRoleDataAck::kCopyIDFieldNumber;
const int TransRoleDataAck::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransRoleDataAck::TransRoleDataAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransRoleDataAck)
}
TransRoleDataAck::TransRoleDataAck(const TransRoleDataAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:TransRoleDataAck)
}

void TransRoleDataAck::SharedCtor() {
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(serverid_));
  _cached_size_ = 0;
}

TransRoleDataAck::~TransRoleDataAck() {
  // @@protoc_insertion_point(destructor:TransRoleDataAck)
  SharedDtor();
}

void TransRoleDataAck::SharedDtor() {
}

void TransRoleDataAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransRoleDataAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransRoleDataAck& TransRoleDataAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransRoleDataAck* TransRoleDataAck::New(::google::protobuf::Arena* arena) const {
  TransRoleDataAck* n = new TransRoleDataAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransRoleDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:TransRoleDataAck)
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(serverid_));
}

bool TransRoleDataAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransRoleDataAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ServerID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransRoleDataAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransRoleDataAck)
  return false;
#undef DO_
}

void TransRoleDataAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransRoleDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // uint32 CopyType = 3;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->copytype(), output);
  }

  // uint32 CopyID = 4;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->copyid(), output);
  }

  // uint32 ServerID = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:TransRoleDataAck)
}

::google::protobuf::uint8* TransRoleDataAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TransRoleDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // uint32 CopyType = 3;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->copytype(), target);
  }

  // uint32 CopyID = 4;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->copyid(), target);
  }

  // uint32 ServerID = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransRoleDataAck)
  return target;
}

size_t TransRoleDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransRoleDataAck)
  size_t total_size = 0;

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // uint32 CopyType = 3;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copytype());
  }

  // uint32 CopyID = 4;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyid());
  }

  // uint32 ServerID = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransRoleDataAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransRoleDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  const TransRoleDataAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransRoleDataAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransRoleDataAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransRoleDataAck)
    MergeFrom(*source);
  }
}

void TransRoleDataAck::MergeFrom(const TransRoleDataAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransRoleDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void TransRoleDataAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransRoleDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransRoleDataAck::CopyFrom(const TransRoleDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransRoleDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransRoleDataAck::IsInitialized() const {
  return true;
}

void TransRoleDataAck::Swap(TransRoleDataAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransRoleDataAck::InternalSwap(TransRoleDataAck* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(retcode_, other->retcode_);
  std::swap(copytype_, other->copytype_);
  std::swap(copyid_, other->copyid_);
  std::swap(serverid_, other->serverid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransRoleDataAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransRoleDataAck

// uint32 RetCode = 1;
void TransRoleDataAck::clear_retcode() {
  retcode_ = 0u;
}
::google::protobuf::uint32 TransRoleDataAck::retcode() const {
  // @@protoc_insertion_point(field_get:TransRoleDataAck.RetCode)
  return retcode_;
}
void TransRoleDataAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataAck.RetCode)
}

// uint64 RoleID = 2;
void TransRoleDataAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TransRoleDataAck::roleid() const {
  // @@protoc_insertion_point(field_get:TransRoleDataAck.RoleID)
  return roleid_;
}
void TransRoleDataAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataAck.RoleID)
}

// uint32 CopyType = 3;
void TransRoleDataAck::clear_copytype() {
  copytype_ = 0u;
}
::google::protobuf::uint32 TransRoleDataAck::copytype() const {
  // @@protoc_insertion_point(field_get:TransRoleDataAck.CopyType)
  return copytype_;
}
void TransRoleDataAck::set_copytype(::google::protobuf::uint32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataAck.CopyType)
}

// uint32 CopyID = 4;
void TransRoleDataAck::clear_copyid() {
  copyid_ = 0u;
}
::google::protobuf::uint32 TransRoleDataAck::copyid() const {
  // @@protoc_insertion_point(field_get:TransRoleDataAck.CopyID)
  return copyid_;
}
void TransRoleDataAck::set_copyid(::google::protobuf::uint32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataAck.CopyID)
}

// uint32 ServerID = 5;
void TransRoleDataAck::clear_serverid() {
  serverid_ = 0u;
}
::google::protobuf::uint32 TransRoleDataAck::serverid() const {
  // @@protoc_insertion_point(field_get:TransRoleDataAck.ServerID)
  return serverid_;
}
void TransRoleDataAck::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataAck.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyIntoScene::kRoleIDFieldNumber;
const int NotifyIntoScene::kCopyTypeFieldNumber;
const int NotifyIntoScene::kCopyIDFieldNumber;
const int NotifyIntoScene::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyIntoScene::NotifyIntoScene()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NotifyIntoScene)
}
NotifyIntoScene::NotifyIntoScene(const NotifyIntoScene& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:NotifyIntoScene)
}

void NotifyIntoScene::SharedCtor() {
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(serverid_));
  _cached_size_ = 0;
}

NotifyIntoScene::~NotifyIntoScene() {
  // @@protoc_insertion_point(destructor:NotifyIntoScene)
  SharedDtor();
}

void NotifyIntoScene::SharedDtor() {
}

void NotifyIntoScene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyIntoScene::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyIntoScene& NotifyIntoScene::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

NotifyIntoScene* NotifyIntoScene::New(::google::protobuf::Arena* arena) const {
  NotifyIntoScene* n = new NotifyIntoScene;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyIntoScene::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyIntoScene)
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(serverid_));
}

bool NotifyIntoScene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NotifyIntoScene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CopyID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NotifyIntoScene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NotifyIntoScene)
  return false;
#undef DO_
}

void NotifyIntoScene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NotifyIntoScene)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copytype(), output);
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->copyid(), output);
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NotifyIntoScene)
}

::google::protobuf::uint8* NotifyIntoScene::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NotifyIntoScene)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copytype(), target);
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->copyid(), target);
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NotifyIntoScene)
  return target;
}

size_t NotifyIntoScene::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyIntoScene)
  size_t total_size = 0;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // uint32 CopyID = 3;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyid());
  }

  // int32 ServerID = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyIntoScene::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NotifyIntoScene)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyIntoScene* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyIntoScene>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NotifyIntoScene)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NotifyIntoScene)
    MergeFrom(*source);
  }
}

void NotifyIntoScene::MergeFrom(const NotifyIntoScene& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyIntoScene)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void NotifyIntoScene::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NotifyIntoScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyIntoScene::CopyFrom(const NotifyIntoScene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyIntoScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyIntoScene::IsInitialized() const {
  return true;
}

void NotifyIntoScene::Swap(NotifyIntoScene* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyIntoScene::InternalSwap(NotifyIntoScene* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(copytype_, other->copytype_);
  std::swap(copyid_, other->copyid_);
  std::swap(serverid_, other->serverid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyIntoScene::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyIntoScene

// uint64 RoleID = 1;
void NotifyIntoScene::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 NotifyIntoScene::roleid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.RoleID)
  return roleid_;
}
void NotifyIntoScene::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:NotifyIntoScene.RoleID)
}

// int32 CopyType = 2;
void NotifyIntoScene::clear_copytype() {
  copytype_ = 0;
}
::google::protobuf::int32 NotifyIntoScene::copytype() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.CopyType)
  return copytype_;
}
void NotifyIntoScene::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:NotifyIntoScene.CopyType)
}

// uint32 CopyID = 3;
void NotifyIntoScene::clear_copyid() {
  copyid_ = 0u;
}
::google::protobuf::uint32 NotifyIntoScene::copyid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.CopyID)
  return copyid_;
}
void NotifyIntoScene::set_copyid(::google::protobuf::uint32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:NotifyIntoScene.CopyID)
}

// int32 ServerID = 4;
void NotifyIntoScene::clear_serverid() {
  serverid_ = 0;
}
::google::protobuf::int32 NotifyIntoScene::serverid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.ServerID)
  return serverid_;
}
void NotifyIntoScene::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:NotifyIntoScene.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NearByRoleItem::kRoleIDFieldNumber;
const int NearByRoleItem::kRoleTypeFieldNumber;
const int NearByRoleItem::kLevelFieldNumber;
const int NearByRoleItem::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NearByRoleItem::NearByRoleItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NearByRoleItem)
}
NearByRoleItem::NearByRoleItem(const NearByRoleItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:NearByRoleItem)
}

void NearByRoleItem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
  _cached_size_ = 0;
}

NearByRoleItem::~NearByRoleItem() {
  // @@protoc_insertion_point(destructor:NearByRoleItem)
  SharedDtor();
}

void NearByRoleItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NearByRoleItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NearByRoleItem::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NearByRoleItem& NearByRoleItem::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

NearByRoleItem* NearByRoleItem::New(::google::protobuf::Arena* arena) const {
  NearByRoleItem* n = new NearByRoleItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NearByRoleItem::Clear() {
// @@protoc_insertion_point(message_clear_start:NearByRoleItem)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
}

bool NearByRoleItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NearByRoleItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RoleType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NearByRoleItem.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NearByRoleItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NearByRoleItem)
  return false;
#undef DO_
}

void NearByRoleItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NearByRoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint32 RoleType = 2;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roletype(), output);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NearByRoleItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:NearByRoleItem)
}

::google::protobuf::uint8* NearByRoleItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NearByRoleItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint32 RoleType = 2;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roletype(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NearByRoleItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NearByRoleItem)
  return target;
}

size_t NearByRoleItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NearByRoleItem)
  size_t total_size = 0;

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RoleType = 2;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NearByRoleItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NearByRoleItem)
  GOOGLE_DCHECK_NE(&from, this);
  const NearByRoleItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NearByRoleItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NearByRoleItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NearByRoleItem)
    MergeFrom(*source);
  }
}

void NearByRoleItem::MergeFrom(const NearByRoleItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NearByRoleItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void NearByRoleItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NearByRoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NearByRoleItem::CopyFrom(const NearByRoleItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NearByRoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NearByRoleItem::IsInitialized() const {
  return true;
}

void NearByRoleItem::Swap(NearByRoleItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NearByRoleItem::InternalSwap(NearByRoleItem* other) {
  name_.Swap(&other->name_);
  std::swap(roleid_, other->roleid_);
  std::swap(roletype_, other->roletype_);
  std::swap(level_, other->level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NearByRoleItem::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NearByRoleItem

// uint64 RoleID = 1;
void NearByRoleItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 NearByRoleItem::roleid() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.RoleID)
  return roleid_;
}
void NearByRoleItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:NearByRoleItem.RoleID)
}

// uint32 RoleType = 2;
void NearByRoleItem::clear_roletype() {
  roletype_ = 0u;
}
::google::protobuf::uint32 NearByRoleItem::roletype() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.RoleType)
  return roletype_;
}
void NearByRoleItem::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:NearByRoleItem.RoleType)
}

// int32 Level = 3;
void NearByRoleItem::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 NearByRoleItem::level() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.Level)
  return level_;
}
void NearByRoleItem::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NearByRoleItem.Level)
}

// string Name = 4;
void NearByRoleItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NearByRoleItem::name() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.Name)
  return name_.GetNoArena();
}
void NearByRoleItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NearByRoleItem.Name)
}
#if LANG_CXX11
void NearByRoleItem::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NearByRoleItem.Name)
}
#endif
void NearByRoleItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NearByRoleItem.Name)
}
void NearByRoleItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NearByRoleItem.Name)
}
::std::string* NearByRoleItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NearByRoleItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NearByRoleItem::release_name() {
  // @@protoc_insertion_point(field_release:NearByRoleItem.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NearByRoleItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NearByRoleItem.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NearByAddNty::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NearByAddNty::NearByAddNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NearByAddNty)
}
NearByAddNty::NearByAddNty(const NearByAddNty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rolelist_(from.rolelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NearByAddNty)
}

void NearByAddNty::SharedCtor() {
  _cached_size_ = 0;
}

NearByAddNty::~NearByAddNty() {
  // @@protoc_insertion_point(destructor:NearByAddNty)
  SharedDtor();
}

void NearByAddNty::SharedDtor() {
}

void NearByAddNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NearByAddNty::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NearByAddNty& NearByAddNty::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

NearByAddNty* NearByAddNty::New(::google::protobuf::Arena* arena) const {
  NearByAddNty* n = new NearByAddNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NearByAddNty::Clear() {
// @@protoc_insertion_point(message_clear_start:NearByAddNty)
  rolelist_.Clear();
}

bool NearByAddNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NearByAddNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NearByRoleItem RoleList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rolelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NearByAddNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NearByAddNty)
  return false;
#undef DO_
}

void NearByAddNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NearByAddNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NearByRoleItem RoleList = 1;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rolelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NearByAddNty)
}

::google::protobuf::uint8* NearByAddNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NearByAddNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NearByRoleItem RoleList = 1;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->rolelist(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NearByAddNty)
  return target;
}

size_t NearByAddNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NearByAddNty)
  size_t total_size = 0;

  // repeated .NearByRoleItem RoleList = 1;
  {
    unsigned int count = this->rolelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rolelist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NearByAddNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NearByAddNty)
  GOOGLE_DCHECK_NE(&from, this);
  const NearByAddNty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NearByAddNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NearByAddNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NearByAddNty)
    MergeFrom(*source);
  }
}

void NearByAddNty::MergeFrom(const NearByAddNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NearByAddNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rolelist_.MergeFrom(from.rolelist_);
}

void NearByAddNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NearByAddNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NearByAddNty::CopyFrom(const NearByAddNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NearByAddNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NearByAddNty::IsInitialized() const {
  return true;
}

void NearByAddNty::Swap(NearByAddNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NearByAddNty::InternalSwap(NearByAddNty* other) {
  rolelist_.InternalSwap(&other->rolelist_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NearByAddNty::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NearByAddNty

// repeated .NearByRoleItem RoleList = 1;
int NearByAddNty::rolelist_size() const {
  return rolelist_.size();
}
void NearByAddNty::clear_rolelist() {
  rolelist_.Clear();
}
const ::NearByRoleItem& NearByAddNty::rolelist(int index) const {
  // @@protoc_insertion_point(field_get:NearByAddNty.RoleList)
  return rolelist_.Get(index);
}
::NearByRoleItem* NearByAddNty::mutable_rolelist(int index) {
  // @@protoc_insertion_point(field_mutable:NearByAddNty.RoleList)
  return rolelist_.Mutable(index);
}
::NearByRoleItem* NearByAddNty::add_rolelist() {
  // @@protoc_insertion_point(field_add:NearByAddNty.RoleList)
  return rolelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::NearByRoleItem >*
NearByAddNty::mutable_rolelist() {
  // @@protoc_insertion_point(field_mutable_list:NearByAddNty.RoleList)
  return &rolelist_;
}
const ::google::protobuf::RepeatedPtrField< ::NearByRoleItem >&
NearByAddNty::rolelist() const {
  // @@protoc_insertion_point(field_list:NearByAddNty.RoleList)
  return rolelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NearByDelNty::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NearByDelNty::NearByDelNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NearByDelNty)
}
NearByDelNty::NearByDelNty(const NearByDelNty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rolelist_(from.rolelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NearByDelNty)
}

void NearByDelNty::SharedCtor() {
  _cached_size_ = 0;
}

NearByDelNty::~NearByDelNty() {
  // @@protoc_insertion_point(destructor:NearByDelNty)
  SharedDtor();
}

void NearByDelNty::SharedDtor() {
}

void NearByDelNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NearByDelNty::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NearByDelNty& NearByDelNty::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

NearByDelNty* NearByDelNty::New(::google::protobuf::Arena* arena) const {
  NearByDelNty* n = new NearByDelNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NearByDelNty::Clear() {
// @@protoc_insertion_point(message_clear_start:NearByDelNty)
  rolelist_.Clear();
}

bool NearByDelNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NearByDelNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 RoleList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_rolelist())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_rolelist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NearByDelNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NearByDelNty)
  return false;
#undef DO_
}

void NearByDelNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NearByDelNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 RoleList = 1;
  if (this->rolelist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rolelist_cached_byte_size_);
  }
  for (int i = 0, n = this->rolelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->rolelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NearByDelNty)
}

::google::protobuf::uint8* NearByDelNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NearByDelNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 RoleList = 1;
  if (this->rolelist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rolelist_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->rolelist_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NearByDelNty)
  return target;
}

size_t NearByDelNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NearByDelNty)
  size_t total_size = 0;

  // repeated uint64 RoleList = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->rolelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rolelist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NearByDelNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NearByDelNty)
  GOOGLE_DCHECK_NE(&from, this);
  const NearByDelNty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NearByDelNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NearByDelNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NearByDelNty)
    MergeFrom(*source);
  }
}

void NearByDelNty::MergeFrom(const NearByDelNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NearByDelNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rolelist_.MergeFrom(from.rolelist_);
}

void NearByDelNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NearByDelNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NearByDelNty::CopyFrom(const NearByDelNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NearByDelNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NearByDelNty::IsInitialized() const {
  return true;
}

void NearByDelNty::Swap(NearByDelNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NearByDelNty::InternalSwap(NearByDelNty* other) {
  rolelist_.InternalSwap(&other->rolelist_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NearByDelNty::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NearByDelNty

// repeated uint64 RoleList = 1;
int NearByDelNty::rolelist_size() const {
  return rolelist_.size();
}
void NearByDelNty::clear_rolelist() {
  rolelist_.Clear();
}
::google::protobuf::uint64 NearByDelNty::rolelist(int index) const {
  // @@protoc_insertion_point(field_get:NearByDelNty.RoleList)
  return rolelist_.Get(index);
}
void NearByDelNty::set_rolelist(int index, ::google::protobuf::uint64 value) {
  rolelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NearByDelNty.RoleList)
}
void NearByDelNty::add_rolelist(::google::protobuf::uint64 value) {
  rolelist_.Add(value);
  // @@protoc_insertion_point(field_add:NearByDelNty.RoleList)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
NearByDelNty::rolelist() const {
  // @@protoc_insertion_point(field_list:NearByDelNty.RoleList)
  return rolelist_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
NearByDelNty::mutable_rolelist() {
  // @@protoc_insertion_point(field_mutable_list:NearByDelNty.RoleList)
  return &rolelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NearByUpdateNty::kRoleIDFieldNumber;
const int NearByUpdateNty::kRoleTypeFieldNumber;
const int NearByUpdateNty::kLevelFieldNumber;
const int NearByUpdateNty::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NearByUpdateNty::NearByUpdateNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NearByUpdateNty)
}
NearByUpdateNty::NearByUpdateNty(const NearByUpdateNty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&roleid_, &from.roleid_,
    reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:NearByUpdateNty)
}

void NearByUpdateNty::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
  _cached_size_ = 0;
}

NearByUpdateNty::~NearByUpdateNty() {
  // @@protoc_insertion_point(destructor:NearByUpdateNty)
  SharedDtor();
}

void NearByUpdateNty::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NearByUpdateNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NearByUpdateNty::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NearByUpdateNty& NearByUpdateNty::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

NearByUpdateNty* NearByUpdateNty::New(::google::protobuf::Arena* arena) const {
  NearByUpdateNty* n = new NearByUpdateNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NearByUpdateNty::Clear() {
// @@protoc_insertion_point(message_clear_start:NearByUpdateNty)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(level_));
}

bool NearByUpdateNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NearByUpdateNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RoleType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NearByUpdateNty.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NearByUpdateNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NearByUpdateNty)
  return false;
#undef DO_
}

void NearByUpdateNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NearByUpdateNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // uint32 RoleType = 2;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roletype(), output);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NearByUpdateNty.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:NearByUpdateNty)
}

::google::protobuf::uint8* NearByUpdateNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NearByUpdateNty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // uint32 RoleType = 2;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roletype(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NearByUpdateNty.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NearByUpdateNty)
  return target;
}

size_t NearByUpdateNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NearByUpdateNty)
  size_t total_size = 0;

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RoleType = 2;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NearByUpdateNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NearByUpdateNty)
  GOOGLE_DCHECK_NE(&from, this);
  const NearByUpdateNty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NearByUpdateNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NearByUpdateNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NearByUpdateNty)
    MergeFrom(*source);
  }
}

void NearByUpdateNty::MergeFrom(const NearByUpdateNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NearByUpdateNty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void NearByUpdateNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NearByUpdateNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NearByUpdateNty::CopyFrom(const NearByUpdateNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NearByUpdateNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NearByUpdateNty::IsInitialized() const {
  return true;
}

void NearByUpdateNty::Swap(NearByUpdateNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NearByUpdateNty::InternalSwap(NearByUpdateNty* other) {
  name_.Swap(&other->name_);
  std::swap(roleid_, other->roleid_);
  std::swap(roletype_, other->roletype_);
  std::swap(level_, other->level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NearByUpdateNty::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NearByUpdateNty

// uint64 RoleID = 1;
void NearByUpdateNty::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 NearByUpdateNty::roleid() const {
  // @@protoc_insertion_point(field_get:NearByUpdateNty.RoleID)
  return roleid_;
}
void NearByUpdateNty::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:NearByUpdateNty.RoleID)
}

// uint32 RoleType = 2;
void NearByUpdateNty::clear_roletype() {
  roletype_ = 0u;
}
::google::protobuf::uint32 NearByUpdateNty::roletype() const {
  // @@protoc_insertion_point(field_get:NearByUpdateNty.RoleType)
  return roletype_;
}
void NearByUpdateNty::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:NearByUpdateNty.RoleType)
}

// int32 Level = 3;
void NearByUpdateNty::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 NearByUpdateNty::level() const {
  // @@protoc_insertion_point(field_get:NearByUpdateNty.Level)
  return level_;
}
void NearByUpdateNty::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NearByUpdateNty.Level)
}

// string Name = 4;
void NearByUpdateNty::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NearByUpdateNty::name() const {
  // @@protoc_insertion_point(field_get:NearByUpdateNty.Name)
  return name_.GetNoArena();
}
void NearByUpdateNty::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NearByUpdateNty.Name)
}
#if LANG_CXX11
void NearByUpdateNty::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NearByUpdateNty.Name)
}
#endif
void NearByUpdateNty::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NearByUpdateNty.Name)
}
void NearByUpdateNty::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NearByUpdateNty.Name)
}
::std::string* NearByUpdateNty::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NearByUpdateNty.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NearByUpdateNty::release_name() {
  // @@protoc_insertion_point(field_release:NearByUpdateNty.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NearByUpdateNty::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NearByUpdateNty.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
