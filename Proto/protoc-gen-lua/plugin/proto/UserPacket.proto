//创建角色（非渠道）
//http://host/rest/user/create
message CreateUserReq {
	required string account = 1;
	required string password = 2;
}

//http return
message CreateUserResp {
	required int32 result = 1; //创建结果，0 成功，其他参考ErrorCode
}

//登入（非渠道）
//http://host/rest/user/login
message LoginReq {
	required string account = 1;
	optional string password = 2;
	optional string OS = 3;
	optional string gameVersion = 4;
	optional string platformId = 5;	//用于区分同一platform下不同包类型的字段
	optional string packageId = 6;	
	optional string debugServer = 7;	//用于调试的字段
}

//登入（渠道）
//http://host/rest/user/loginPlatform
message LoginPlatformReq {
	required string token = 1;
	optional string par1 = 2;
	optional string OS = 3;
	optional string gameVersion = 4;
	optional string platformId = 5;	//用于区分同一platform下不同包类型的字段
	optional string packageId = 6;
}

//http return
message LoginResp {
	required int32 result = 1;     //登录结果，0 成功，其他参考ErrorCode
	optional string authToken = 2; //鉴权码
	optional ServerInfo gameServer = 3;    //分配的游戏服务器
	optional int32 platformErrorCode = 4; //验证时候，渠道发来的错误码
	optional string par1 = 5;
	optional string par2 = 6;
}

//游戏服务器列表
message ServerInfo {
	required string address = 1; //服务器地址
	optional string serverId = 2; //服务器id
}

//登入验证
//http://host/rest/user/check
message IPCAuthReq {
	required string token = 1;
	optional string serverId = 2;
}

//http return
message IPCAuthResp {
	required int32 result = 1;  //0 成功
	required string playerId = 2;
	repeated int32 rechargeType = 3; //资源返还类型
}

message ACAwardProto {
	required int32 type = 1;  //类
	required int32 id = 2;    //id
	required int32 count = 3; //数量
}

//兑换码检测
//http://host/rest/user/activationCodeCheck
message ActivationCodeCheckPostData {
	required string code = 1; //兑换码
	required string playerId = 2; //玩家id
	required string serverUId = 3; //服务器id
}

//http return
message ActivationCodeCheckResult {
	required int32 result = 1;
	repeated ACAwardProto awards = 2; //奖励
}

message NoticeInfoProto {
	required string title = 1;
	required string headLine = 2;
	required string date = 3;
	required string text = 4;
}

//获取公告
//http://host/rest/user/notice
message NoticePostData {
	optional int32 serverId = 1; //服务器index，可以不填
	optional string platformId = 2; //平台id，同上
	optional string serverUId = 3; //服务器id
}

//http return
message NoticeResult {
	repeated NoticeInfoProto info = 1; //公告内容
}

//充值验证
//http://host/rest/recharge/check
message RechargeCheckPostData {
	required string orderId = 1; //平台订单号
	required string requestId = 2; //开发者订单号
	required string platformId = 3; //平台id
	optional string serverId = 4; //服务器id
	optional string userId = 5; //玩家id
}

//http return
message RechargeCheckResult {
	required int32 result = 1;
	required int32 rechargeType = 2;
}

//充值订单请求
//http://host/rest/recharge/order
message RechargeOrderPostData {
	required string platformId = 1; //平台id
	required int32 type = 2; //充值类型
}

//http return
message RechargeOrderResult {
	required int32 result = 1;
	optional int32 platformErrorCode = 2; //渠道错误码
	required string jsonPar = 3; //结果
}

//充值sign请求
//http://host/rest/recharge/sign
message RechargeSignPostData {
	required string platformId = 1; //平台id
	required string jsonPar = 2; //需要生成签名的字符串
}

//http return
message RechargeSignResult {
	required string signature = 1; //签名
	optional string requestId = 2; //cp订单号
	optional string privateKey = 3; //私钥
}

//获取相关服务器信息
message ServerInfoPostData {	
}

message AddressInfo {
	required string key = 1; //地址名字
	required string address = 2; //地址
}

//http return
message ServerInfoResult {
	optional string loginUrl = 1;  //非登录地址
	optional string loginPlatformUrl = 2; //平台登录地址
	optional string createUrl = 3;  //创建用户地址
	optional string rechargeSignUrl = 4; //获取充值签名抵制
	optional string rechargeOrderUrl = 5; //充值地址订单号地址
	optional string announcementUrl = 6; //获取公告地址
	optional string checkVersionUrl = 7; //版本检测地址
	optional bool mustCheckVersion = 8;	//版本检查不可跳过(网络连接错误情况下), true 必须检查, false 可跳过
	optional string rechargeUrl = 9; //直接充值地址
	optional string queryBalanceUrl = 10; //查询账户余额地址
	optional string sendTo3PartyUrl = 11; //充值传输给第三方信息地址
	repeated AddressInfo addressList = 12; 
}







