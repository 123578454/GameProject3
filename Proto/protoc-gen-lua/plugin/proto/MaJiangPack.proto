import "GamePacket.proto";

//碰牌set
message PengSetProto {
    repeated int32 paiSet = 1;
    required string fromPlayer = 2;
}

//杠牌set
message GangSetProto {
    repeated int32 paiSet = 1;
    optional string fromPlayer = 2;
    required int32 gangType = 3;
}

//手牌
message InHandSetProto {
    repeated int32 cardList = 1;    //麻将牌列表
    repeated int32 lackList = 2;    //被选为缺的牌列表，显示在尾部
}

//面板结构
message BoardProto {
    repeated PengSetProto pengs = 1;    //碰牌列表
    repeated GangSetProto gangs = 2;    //杠牌列表
}

//和牌列表中的一张牌
message HuProto {
    required int32 cardId = 1;      
    required bool solide = 2;   //true 实牌， false 虚牌
}
message MJPlayerProto {
    optional PlayerBriefProto playerInfo = 1;
    optional int32 seat = 2;
    optional InHandSetProto inHand = 3;     //手牌
    optional int32 lackChoice = 4;      //缺
    optional BoardProto board = 5;      //面板
    repeated HuProto hupaiList = 6;       //和牌列表(血流成河)
    optional HepaiPileProto HepaiPile = 7;  //玩家出过的河牌
}

//(一堆)河牌，某个玩家前面的一堆河牌
message HepaiPileProto {
    repeated int32 paiSet = 1;      //河牌列表
    required string fromPlayer = 2; 
}

// (一堆)山牌
message SanpaiPileProto {
    required int32 tailCount = 1;  //尾牌数量
    required int32 cardCount = 2;  //山牌数量
    required int32 seat = 3;        //山牌所在的座位
}

message MaJiangRoomProto {
    repeated int32 gamePaiSet= 1;   //游戏需要的全部牌
    required int32 ring = 2;        //当前第几轮
    required int32 maxRing = 3;     //总共几轮
    required int32 ringPhase = 4;   //当前局中的阶段(洗牌，发牌，换牌，选缺，开局， 掉线重入的玩家根据当前阶段进行场景信息构建)
    optional string bankerPlayerId = 5;     //庄家的playerId
    // repeated HepaiPileProto hepaiList = 5;   //4人面前的河牌
    repeated SanpaiPileProto sanpaiList = 6;    //4个座位前的山牌
    repeated MJPlayerProto players = 7; //玩家
}

//换牌提示
message TipExchangeProto {
    repeated int32 recommand = 1;   //  推荐三张换牌
    required int32 tipCdMS = 2; //换牌时间倒数，毫秒
}

//选缺提示
message TipLackChoiceProto {
    optional int32 recommand = 1;   //选缺推荐花色
    required int32 tipCdMS = 2; //换牌时间倒数，毫秒
}

//碰牌提示
message TipPengProto {
    required int32 tipId = 1;   //提示id，用户确认碰时，将对应id用作输入
    required int32 matchCard = 2;   //配牌
    repeated int32 handCard = 3;    //对应的手牌
    optional string playerId = 4;   //提示碰的玩家(碰的玩家)
    optional string fromPlayerId = 5;
    optional int32 tipCdMS = 6;        //倒计时
}

//杠牌提示
message TipGangProto {
    required int32 tipId = 1;
    required int32 matchCard = 2;   //配牌
    required int32 gangType = 3;    //杠牌类型
    repeated int32 handCard = 4;    //对应的手牌，或者面板牌
    optional string playerId = 5;   //提示杠的玩家(杠的玩家)
    optional string fromPlayerId = 6;
    optional int32 tipCdMS = 7;        //倒计时
}

//出牌提示
message TipDiscard {
    required string playerId = 1;   //需要出牌的玩家
    optional int32 tipCdMS = 2;     //输入等待时间
}

//牌型(对、豹子、顺子)
message ModelProto {
    repeated int32 cards = 1;   //组成牌型的牌
    required int32 model = 2;   //牌型
}

//牌型组
message ModelGroupProto {
    optional int32 groupId = 1;     //用于输入选择的id
    repeated ModelProto models = 2;
}

//听牌提示
message TipTingProto {
    required int32 tipId = 1;
}

//和牌提示
message TipHuProto {
    required int32 tipId = 1;
    repeated ModelGroupProto modelGroupList = 2;    //和牌拆分
    optional string playerId = 3;   //提示和的玩家
    optional string fromPlayerId = 4;   //和的牌是哪个玩家出的
    optional int32 cardFromOther = 5;    //别人出的牌(如果是因为别人出牌造成的和)
    optional int32 tipCdMS = 6;        //倒计时
}

//一个人发到的牌
message DisPatchProto {
    required string playerId = 1;
    repeated int32 dispatchCard = 2;
}

//骰子结果
message ActDice {
    required int32 dice1 = 1;               //骰子1点数;
    required int32 dice2 = 2;               //骰子2点数;
    optional int32 phaseCdMS = 3;           //留给客户端渲染的时间，下一步为发牌
}
//发牌
message ActDispatch {
    repeated DisPatchProto dispatch = 1;
    repeated SanpaiPileProto refresh = 2;   //山牌刷新
}

//换牌
message ActExchange {
    repeated int32 removedCards = 1;
    repeated int32 getCards = 2;
    required string fromPlayer = 3;
    required InHandSetProto inHand = 4;     //刷新手牌
}

//手牌、面板等 刷新，暂时只定义手牌(用于选缺后，手牌的排序改变)
message ActRefreshCard {
    optional InHandSetProto inHand = 1;
}

//出牌 (服务器下发)
message ActDiscard {
    required string playerId = 1;
    required int32 cardId = 2;
    optional HepaiPileProto refresh = 3; // 河牌刷新
}

//碰 (服务器下发)
message ActPeng {
    required string playerId = 1;
}

//杠 (服务器下发)
message ActGang {
    required string playerId = 1;
}

//胡 (服务器下发)
message ActHu {
    required string playerId = 1;
}

//摸牌 (服务器下发)
message ActDraw {
    required string playerId = 1;
    optional SanpaiPileProto refresh = 2;   //山牌刷新,下发哪一堆
}

message PrimExchangeChoice {
    repeated int32 cardChoice = 1;
}

message PrimLackChoice {
    required int32 huaseChoice = 1;
}

//出牌 (客户端操作)
message PrimDiscard {
    required int32 cardId = 1;
}

//碰 (客户端操作)
message PrimPeng {
    required int32 tipId = 1;
}

//杠 (客户端操作)
message PrimGang {
    required int32 tipId = 1;
}

//胡 (客户端操作)
message PrimHu {
    
}

//-----------------------
//同步 玩家加入
message SyncPlayerJoin {
    required MJPlayerProto joinPlayer = 1;
}

//同步 一轮开始
message SyncRingBegin {
    required int32 ringNum = 1;
    required int32 maxRing = 2;
    required string bankerPlayerId = 3;     //本局庄家
    repeated SanpaiPileProto sanpaiList = 4;    //4个座位前的山牌
}