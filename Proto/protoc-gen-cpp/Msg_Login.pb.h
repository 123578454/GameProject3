// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Login.proto

#ifndef PROTOBUF_Msg_5fLogin_2eproto__INCLUDED
#define PROTOBUF_Msg_5fLogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class AccountLoginAck;
class AccountLoginAckDefaultTypeInternal;
extern AccountLoginAckDefaultTypeInternal _AccountLoginAck_default_instance_;
class AccountLoginReq;
class AccountLoginReqDefaultTypeInternal;
extern AccountLoginReqDefaultTypeInternal _AccountLoginReq_default_instance_;
class AccountRegAck;
class AccountRegAckDefaultTypeInternal;
extern AccountRegAckDefaultTypeInternal _AccountRegAck_default_instance_;
class AccountRegReq;
class AccountRegReqDefaultTypeInternal;
extern AccountRegReqDefaultTypeInternal _AccountRegReq_default_instance_;
class CheckVersionAck;
class CheckVersionAckDefaultTypeInternal;
extern CheckVersionAckDefaultTypeInternal _CheckVersionAck_default_instance_;
class CheckVersionReq;
class CheckVersionReqDefaultTypeInternal;
extern CheckVersionReqDefaultTypeInternal _CheckVersionReq_default_instance_;
class ClientServerListAck;
class ClientServerListAckDefaultTypeInternal;
extern ClientServerListAckDefaultTypeInternal _ClientServerListAck_default_instance_;
class ClientServerListReq;
class ClientServerListReqDefaultTypeInternal;
extern ClientServerListReqDefaultTypeInternal _ClientServerListReq_default_instance_;
class ClientServerNode;
class ClientServerNodeDefaultTypeInternal;
extern ClientServerNodeDefaultTypeInternal _ClientServerNode_default_instance_;
class CreateNewSceneAck;
class CreateNewSceneAckDefaultTypeInternal;
extern CreateNewSceneAckDefaultTypeInternal _CreateNewSceneAck_default_instance_;
class CreateNewSceneReq;
class CreateNewSceneReqDefaultTypeInternal;
extern CreateNewSceneReqDefaultTypeInternal _CreateNewSceneReq_default_instance_;
class EnterRoleDataAck;
class EnterRoleDataAckDefaultTypeInternal;
extern EnterRoleDataAckDefaultTypeInternal _EnterRoleDataAck_default_instance_;
class EnterRoleDataReq;
class EnterRoleDataReqDefaultTypeInternal;
extern EnterRoleDataReqDefaultTypeInternal _EnterRoleDataReq_default_instance_;
class RegToLoginSvrAck;
class RegToLoginSvrAckDefaultTypeInternal;
extern RegToLoginSvrAckDefaultTypeInternal _RegToLoginSvrAck_default_instance_;
class RegToLoginSvrReq;
class RegToLoginSvrReqDefaultTypeInternal;
extern RegToLoginSvrReqDefaultTypeInternal _RegToLoginSvrReq_default_instance_;
class RoleCreateAck;
class RoleCreateAckDefaultTypeInternal;
extern RoleCreateAckDefaultTypeInternal _RoleCreateAck_default_instance_;
class RoleCreateReq;
class RoleCreateReqDefaultTypeInternal;
extern RoleCreateReqDefaultTypeInternal _RoleCreateReq_default_instance_;
class RoleDeleteAck;
class RoleDeleteAckDefaultTypeInternal;
extern RoleDeleteAckDefaultTypeInternal _RoleDeleteAck_default_instance_;
class RoleDeleteReq;
class RoleDeleteReqDefaultTypeInternal;
extern RoleDeleteReqDefaultTypeInternal _RoleDeleteReq_default_instance_;
class RoleDisconnectAck;
class RoleDisconnectAckDefaultTypeInternal;
extern RoleDisconnectAckDefaultTypeInternal _RoleDisconnectAck_default_instance_;
class RoleDisconnectReq;
class RoleDisconnectReqDefaultTypeInternal;
extern RoleDisconnectReqDefaultTypeInternal _RoleDisconnectReq_default_instance_;
class RoleListAck;
class RoleListAckDefaultTypeInternal;
extern RoleListAckDefaultTypeInternal _RoleListAck_default_instance_;
class RoleListNode;
class RoleListNodeDefaultTypeInternal;
extern RoleListNodeDefaultTypeInternal _RoleListNode_default_instance_;
class RoleListReq;
class RoleListReqDefaultTypeInternal;
extern RoleListReqDefaultTypeInternal _RoleListReq_default_instance_;
class RoleLoginAck;
class RoleLoginAckDefaultTypeInternal;
extern RoleLoginAckDefaultTypeInternal _RoleLoginAck_default_instance_;
class RoleLoginReq;
class RoleLoginReqDefaultTypeInternal;
extern RoleLoginReqDefaultTypeInternal _RoleLoginReq_default_instance_;
class RoleLogoutAck;
class RoleLogoutAckDefaultTypeInternal;
extern RoleLogoutAckDefaultTypeInternal _RoleLogoutAck_default_instance_;
class RoleLogoutReq;
class RoleLogoutReqDefaultTypeInternal;
extern RoleLogoutReqDefaultTypeInternal _RoleLogoutReq_default_instance_;
class SelectServerAck;
class SelectServerAckDefaultTypeInternal;
extern SelectServerAckDefaultTypeInternal _SelectServerAck_default_instance_;
class SelectServerReq;
class SelectServerReqDefaultTypeInternal;
extern SelectServerReqDefaultTypeInternal _SelectServerReq_default_instance_;
class TransRoleDataAck;
class TransRoleDataAckDefaultTypeInternal;
extern TransRoleDataAckDefaultTypeInternal _TransRoleDataAck_default_instance_;
class TransRoleDataReq;
class TransRoleDataReqDefaultTypeInternal;
extern TransRoleDataReqDefaultTypeInternal _TransRoleDataReq_default_instance_;

namespace protobuf_Msg_5fLogin_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Msg_5fLogin_2eproto

// ===================================================================

class CheckVersionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CheckVersionReq) */ {
 public:
  CheckVersionReq();
  virtual ~CheckVersionReq();

  CheckVersionReq(const CheckVersionReq& from);

  inline CheckVersionReq& operator=(const CheckVersionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckVersionReq& default_instance();

  static inline const CheckVersionReq* internal_default_instance() {
    return reinterpret_cast<const CheckVersionReq*>(
               &_CheckVersionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CheckVersionReq* other);

  // implements Message ----------------------------------------------

  inline CheckVersionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckVersionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckVersionReq& from);
  void MergeFrom(const CheckVersionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckVersionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string PackageName = 2;
  void clear_packagename();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& packagename() const;
  void set_packagename(const ::std::string& value);
  #if LANG_CXX11
  void set_packagename(::std::string&& value);
  #endif
  void set_packagename(const char* value);
  void set_packagename(const char* value, size_t size);
  ::std::string* mutable_packagename();
  ::std::string* release_packagename();
  void set_allocated_packagename(::std::string* packagename);

  // string Channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  const ::std::string& channel() const;
  void set_channel(const ::std::string& value);
  #if LANG_CXX11
  void set_channel(::std::string&& value);
  #endif
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  ::std::string* mutable_channel();
  ::std::string* release_channel();
  void set_allocated_channel(::std::string* channel);

  // int32 ClientVerion = 1;
  void clear_clientverion();
  static const int kClientVerionFieldNumber = 1;
  ::google::protobuf::int32 clientverion() const;
  void set_clientverion(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CheckVersionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr packagename_;
  ::google::protobuf::internal::ArenaStringPtr channel_;
  ::google::protobuf::int32 clientverion_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckVersionAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CheckVersionAck) */ {
 public:
  CheckVersionAck();
  virtual ~CheckVersionAck();

  CheckVersionAck(const CheckVersionAck& from);

  inline CheckVersionAck& operator=(const CheckVersionAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckVersionAck& default_instance();

  static inline const CheckVersionAck* internal_default_instance() {
    return reinterpret_cast<const CheckVersionAck*>(
               &_CheckVersionAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CheckVersionAck* other);

  // implements Message ----------------------------------------------

  inline CheckVersionAck* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckVersionAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckVersionAck& from);
  void MergeFrom(const CheckVersionAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckVersionAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string PackageName = 3;
  void clear_packagename();
  static const int kPackageNameFieldNumber = 3;
  const ::std::string& packagename() const;
  void set_packagename(const ::std::string& value);
  #if LANG_CXX11
  void set_packagename(::std::string&& value);
  #endif
  void set_packagename(const char* value);
  void set_packagename(const char* value, size_t size);
  ::std::string* mutable_packagename();
  ::std::string* release_packagename();
  void set_allocated_packagename(::std::string* packagename);

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // int32 ClientVerion = 2;
  void clear_clientverion();
  static const int kClientVerionFieldNumber = 2;
  ::google::protobuf::int32 clientverion() const;
  void set_clientverion(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CheckVersionAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr packagename_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 clientverion_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountRegReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountRegReq) */ {
 public:
  AccountRegReq();
  virtual ~AccountRegReq();

  AccountRegReq(const AccountRegReq& from);

  inline AccountRegReq& operator=(const AccountRegReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountRegReq& default_instance();

  static inline const AccountRegReq* internal_default_instance() {
    return reinterpret_cast<const AccountRegReq*>(
               &_AccountRegReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AccountRegReq* other);

  // implements Message ----------------------------------------------

  inline AccountRegReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountRegReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountRegReq& from);
  void MergeFrom(const AccountRegReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountRegReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 1;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // string Password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string Channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  const ::std::string& channel() const;
  void set_channel(const ::std::string& value);
  #if LANG_CXX11
  void set_channel(::std::string&& value);
  #endif
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  ::std::string* mutable_channel();
  ::std::string* release_channel();
  void set_allocated_channel(::std::string* channel);

  // @@protoc_insertion_point(class_scope:AccountRegReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr channel_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountRegAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountRegAck) */ {
 public:
  AccountRegAck();
  virtual ~AccountRegAck();

  AccountRegAck(const AccountRegAck& from);

  inline AccountRegAck& operator=(const AccountRegAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountRegAck& default_instance();

  static inline const AccountRegAck* internal_default_instance() {
    return reinterpret_cast<const AccountRegAck*>(
               &_AccountRegAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AccountRegAck* other);

  // implements Message ----------------------------------------------

  inline AccountRegAck* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountRegAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountRegAck& from);
  void MergeFrom(const AccountRegAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountRegAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 AccountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AccountRegAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountLoginReq) */ {
 public:
  AccountLoginReq();
  virtual ~AccountLoginReq();

  AccountLoginReq(const AccountLoginReq& from);

  inline AccountLoginReq& operator=(const AccountLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountLoginReq& default_instance();

  static inline const AccountLoginReq* internal_default_instance() {
    return reinterpret_cast<const AccountLoginReq*>(
               &_AccountLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AccountLoginReq* other);

  // implements Message ----------------------------------------------

  inline AccountLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountLoginReq& from);
  void MergeFrom(const AccountLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 1;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // string Password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:AccountLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountLoginAck) */ {
 public:
  AccountLoginAck();
  virtual ~AccountLoginAck();

  AccountLoginAck(const AccountLoginAck& from);

  inline AccountLoginAck& operator=(const AccountLoginAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountLoginAck& default_instance();

  static inline const AccountLoginAck* internal_default_instance() {
    return reinterpret_cast<const AccountLoginAck*>(
               &_AccountLoginAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AccountLoginAck* other);

  // implements Message ----------------------------------------------

  inline AccountLoginAck* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountLoginAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountLoginAck& from);
  void MergeFrom(const AccountLoginAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 AccountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // int32 LastSvrID = 3;
  void clear_lastsvrid();
  static const int kLastSvrIDFieldNumber = 3;
  ::google::protobuf::int32 lastsvrid() const;
  void set_lastsvrid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AccountLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 lastsvrid_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientServerListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientServerListReq) */ {
 public:
  ClientServerListReq();
  virtual ~ClientServerListReq();

  ClientServerListReq(const ClientServerListReq& from);

  inline ClientServerListReq& operator=(const ClientServerListReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientServerListReq& default_instance();

  static inline const ClientServerListReq* internal_default_instance() {
    return reinterpret_cast<const ClientServerListReq*>(
               &_ClientServerListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ClientServerListReq* other);

  // implements Message ----------------------------------------------

  inline ClientServerListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientServerListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientServerListReq& from);
  void MergeFrom(const ClientServerListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientServerListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Channel = 2;
  void clear_channel();
  static const int kChannelFieldNumber = 2;
  const ::std::string& channel() const;
  void set_channel(const ::std::string& value);
  #if LANG_CXX11
  void set_channel(::std::string&& value);
  #endif
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  ::std::string* mutable_channel();
  ::std::string* release_channel();
  void set_allocated_channel(::std::string* channel);

  // string PackName = 3;
  void clear_packname();
  static const int kPackNameFieldNumber = 3;
  const ::std::string& packname() const;
  void set_packname(const ::std::string& value);
  #if LANG_CXX11
  void set_packname(::std::string&& value);
  #endif
  void set_packname(const char* value);
  void set_packname(const char* value, size_t size);
  ::std::string* mutable_packname();
  ::std::string* release_packname();
  void set_allocated_packname(::std::string* packname);

  // int64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int32 ClientVersion = 4;
  void clear_clientversion();
  static const int kClientVersionFieldNumber = 4;
  ::google::protobuf::int32 clientversion() const;
  void set_clientversion(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientServerListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr channel_;
  ::google::protobuf::internal::ArenaStringPtr packname_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 clientversion_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientServerNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientServerNode) */ {
 public:
  ClientServerNode();
  virtual ~ClientServerNode();

  ClientServerNode(const ClientServerNode& from);

  inline ClientServerNode& operator=(const ClientServerNode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientServerNode& default_instance();

  static inline const ClientServerNode* internal_default_instance() {
    return reinterpret_cast<const ClientServerNode*>(
               &_ClientServerNode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ClientServerNode* other);

  // implements Message ----------------------------------------------

  inline ClientServerNode* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientServerNode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientServerNode& from);
  void MergeFrom(const ClientServerNode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientServerNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SvrName = 2;
  void clear_svrname();
  static const int kSvrNameFieldNumber = 2;
  const ::std::string& svrname() const;
  void set_svrname(const ::std::string& value);
  #if LANG_CXX11
  void set_svrname(::std::string&& value);
  #endif
  void set_svrname(const char* value);
  void set_svrname(const char* value, size_t size);
  ::std::string* mutable_svrname();
  ::std::string* release_svrname();
  void set_allocated_svrname(::std::string* svrname);

  // int32 SvrID = 1;
  void clear_svrid();
  static const int kSvrIDFieldNumber = 1;
  ::google::protobuf::int32 svrid() const;
  void set_svrid(::google::protobuf::int32 value);

  // uint32 SvrState = 3;
  void clear_svrstate();
  static const int kSvrStateFieldNumber = 3;
  ::google::protobuf::uint32 svrstate() const;
  void set_svrstate(::google::protobuf::uint32 value);

  // uint32 SvrDefault = 4;
  void clear_svrdefault();
  static const int kSvrDefaultFieldNumber = 4;
  ::google::protobuf::uint32 svrdefault() const;
  void set_svrdefault(::google::protobuf::uint32 value);

  // int32 SvrOpenTime = 5;
  void clear_svropentime();
  static const int kSvrOpenTimeFieldNumber = 5;
  ::google::protobuf::int32 svropentime() const;
  void set_svropentime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientServerNode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr svrname_;
  ::google::protobuf::int32 svrid_;
  ::google::protobuf::uint32 svrstate_;
  ::google::protobuf::uint32 svrdefault_;
  ::google::protobuf::int32 svropentime_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientServerListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientServerListAck) */ {
 public:
  ClientServerListAck();
  virtual ~ClientServerListAck();

  ClientServerListAck(const ClientServerListAck& from);

  inline ClientServerListAck& operator=(const ClientServerListAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientServerListAck& default_instance();

  static inline const ClientServerListAck* internal_default_instance() {
    return reinterpret_cast<const ClientServerListAck*>(
               &_ClientServerListAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ClientServerListAck* other);

  // implements Message ----------------------------------------------

  inline ClientServerListAck* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientServerListAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientServerListAck& from);
  void MergeFrom(const ClientServerListAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientServerListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ClientServerNode SvrNode = 2;
  int svrnode_size() const;
  void clear_svrnode();
  static const int kSvrNodeFieldNumber = 2;
  const ::ClientServerNode& svrnode(int index) const;
  ::ClientServerNode* mutable_svrnode(int index);
  ::ClientServerNode* add_svrnode();
  ::google::protobuf::RepeatedPtrField< ::ClientServerNode >*
      mutable_svrnode();
  const ::google::protobuf::RepeatedPtrField< ::ClientServerNode >&
      svrnode() const;

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientServerListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ClientServerNode > svrnode_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegToLoginSvrReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RegToLoginSvrReq) */ {
 public:
  RegToLoginSvrReq();
  virtual ~RegToLoginSvrReq();

  RegToLoginSvrReq(const RegToLoginSvrReq& from);

  inline RegToLoginSvrReq& operator=(const RegToLoginSvrReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegToLoginSvrReq& default_instance();

  static inline const RegToLoginSvrReq* internal_default_instance() {
    return reinterpret_cast<const RegToLoginSvrReq*>(
               &_RegToLoginSvrReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(RegToLoginSvrReq* other);

  // implements Message ----------------------------------------------

  inline RegToLoginSvrReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RegToLoginSvrReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegToLoginSvrReq& from);
  void MergeFrom(const RegToLoginSvrReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegToLoginSvrReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ServerName = 2;
  void clear_servername();
  static const int kServerNameFieldNumber = 2;
  const ::std::string& servername() const;
  void set_servername(const ::std::string& value);
  #if LANG_CXX11
  void set_servername(::std::string&& value);
  #endif
  void set_servername(const char* value);
  void set_servername(const char* value, size_t size);
  ::std::string* mutable_servername();
  ::std::string* release_servername();
  void set_allocated_servername(::std::string* servername);

  // int32 ServerID = 1;
  void clear_serverid();
  static const int kServerIDFieldNumber = 1;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RegToLoginSvrReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr servername_;
  ::google::protobuf::int32 serverid_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegToLoginSvrAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RegToLoginSvrAck) */ {
 public:
  RegToLoginSvrAck();
  virtual ~RegToLoginSvrAck();

  RegToLoginSvrAck(const RegToLoginSvrAck& from);

  inline RegToLoginSvrAck& operator=(const RegToLoginSvrAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegToLoginSvrAck& default_instance();

  static inline const RegToLoginSvrAck* internal_default_instance() {
    return reinterpret_cast<const RegToLoginSvrAck*>(
               &_RegToLoginSvrAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(RegToLoginSvrAck* other);

  // implements Message ----------------------------------------------

  inline RegToLoginSvrAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RegToLoginSvrAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegToLoginSvrAck& from);
  void MergeFrom(const RegToLoginSvrAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegToLoginSvrAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RegToLoginSvrAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectServerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SelectServerReq) */ {
 public:
  SelectServerReq();
  virtual ~SelectServerReq();

  SelectServerReq(const SelectServerReq& from);

  inline SelectServerReq& operator=(const SelectServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectServerReq& default_instance();

  static inline const SelectServerReq* internal_default_instance() {
    return reinterpret_cast<const SelectServerReq*>(
               &_SelectServerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SelectServerReq* other);

  // implements Message ----------------------------------------------

  inline SelectServerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectServerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectServerReq& from);
  void MergeFrom(const SelectServerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectServerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ServerID = 1;
  void clear_serverid();
  static const int kServerIDFieldNumber = 1;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SelectServerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 serverid_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectServerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SelectServerAck) */ {
 public:
  SelectServerAck();
  virtual ~SelectServerAck();

  SelectServerAck(const SelectServerAck& from);

  inline SelectServerAck& operator=(const SelectServerAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectServerAck& default_instance();

  static inline const SelectServerAck* internal_default_instance() {
    return reinterpret_cast<const SelectServerAck*>(
               &_SelectServerAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SelectServerAck* other);

  // implements Message ----------------------------------------------

  inline SelectServerAck* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectServerAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectServerAck& from);
  void MergeFrom(const SelectServerAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectServerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ServerAddr = 2;
  void clear_serveraddr();
  static const int kServerAddrFieldNumber = 2;
  const ::std::string& serveraddr() const;
  void set_serveraddr(const ::std::string& value);
  #if LANG_CXX11
  void set_serveraddr(::std::string&& value);
  #endif
  void set_serveraddr(const char* value);
  void set_serveraddr(const char* value, size_t size);
  ::std::string* mutable_serveraddr();
  ::std::string* release_serveraddr();
  void set_allocated_serveraddr(::std::string* serveraddr);

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // int32 ServerPort = 3;
  void clear_serverport();
  static const int kServerPortFieldNumber = 3;
  ::google::protobuf::int32 serverport() const;
  void set_serverport(::google::protobuf::int32 value);

  // int32 LoginCode = 4;
  void clear_logincode();
  static const int kLoginCodeFieldNumber = 4;
  ::google::protobuf::int32 logincode() const;
  void set_logincode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SelectServerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr serveraddr_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 serverport_;
  ::google::protobuf::int32 logincode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleListNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleListNode) */ {
 public:
  RoleListNode();
  virtual ~RoleListNode();

  RoleListNode(const RoleListNode& from);

  inline RoleListNode& operator=(const RoleListNode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListNode& default_instance();

  static inline const RoleListNode* internal_default_instance() {
    return reinterpret_cast<const RoleListNode*>(
               &_RoleListNode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(RoleListNode* other);

  // implements Message ----------------------------------------------

  inline RoleListNode* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleListNode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleListNode& from);
  void MergeFrom(const RoleListNode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleListNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SvrName = 2;
  void clear_svrname();
  static const int kSvrNameFieldNumber = 2;
  const ::std::string& svrname() const;
  void set_svrname(const ::std::string& value);
  #if LANG_CXX11
  void set_svrname(::std::string&& value);
  #endif
  void set_svrname(const char* value);
  void set_svrname(const char* value, size_t size);
  ::std::string* mutable_svrname();
  ::std::string* release_svrname();
  void set_allocated_svrname(::std::string* svrname);

  // int32 SvrID = 1;
  void clear_svrid();
  static const int kSvrIDFieldNumber = 1;
  ::google::protobuf::int32 svrid() const;
  void set_svrid(::google::protobuf::int32 value);

  // uint32 SvrState = 3;
  void clear_svrstate();
  static const int kSvrStateFieldNumber = 3;
  ::google::protobuf::uint32 svrstate() const;
  void set_svrstate(::google::protobuf::uint32 value);

  // uint32 SvrDefault = 4;
  void clear_svrdefault();
  static const int kSvrDefaultFieldNumber = 4;
  ::google::protobuf::uint32 svrdefault() const;
  void set_svrdefault(::google::protobuf::uint32 value);

  // int32 SvrOpenTime = 5;
  void clear_svropentime();
  static const int kSvrOpenTimeFieldNumber = 5;
  ::google::protobuf::int32 svropentime() const;
  void set_svropentime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleListNode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr svrname_;
  ::google::protobuf::int32 svrid_;
  ::google::protobuf::uint32 svrstate_;
  ::google::protobuf::uint32 svrdefault_;
  ::google::protobuf::int32 svropentime_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleListReq) */ {
 public:
  RoleListReq();
  virtual ~RoleListReq();

  RoleListReq(const RoleListReq& from);

  inline RoleListReq& operator=(const RoleListReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListReq& default_instance();

  static inline const RoleListReq* internal_default_instance() {
    return reinterpret_cast<const RoleListReq*>(
               &_RoleListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(RoleListReq* other);

  // implements Message ----------------------------------------------

  inline RoleListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleListReq& from);
  void MergeFrom(const RoleListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int32 LoginCode = 2;
  void clear_logincode();
  static const int kLoginCodeFieldNumber = 2;
  ::google::protobuf::int32 logincode() const;
  void set_logincode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 logincode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleListAck) */ {
 public:
  RoleListAck();
  virtual ~RoleListAck();

  RoleListAck(const RoleListAck& from);

  inline RoleListAck& operator=(const RoleListAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListAck& default_instance();

  static inline const RoleListAck* internal_default_instance() {
    return reinterpret_cast<const RoleListAck*>(
               &_RoleListAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(RoleListAck* other);

  // implements Message ----------------------------------------------

  inline RoleListAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleListAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleListAck& from);
  void MergeFrom(const RoleListAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RoleListNode RoleNode = 2;
  int rolenode_size() const;
  void clear_rolenode();
  static const int kRoleNodeFieldNumber = 2;
  const ::RoleListNode& rolenode(int index) const;
  ::RoleListNode* mutable_rolenode(int index);
  ::RoleListNode* add_rolenode();
  ::google::protobuf::RepeatedPtrField< ::RoleListNode >*
      mutable_rolenode();
  const ::google::protobuf::RepeatedPtrField< ::RoleListNode >&
      rolenode() const;

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::RoleListNode > rolenode_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleCreateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleCreateReq) */ {
 public:
  RoleCreateReq();
  virtual ~RoleCreateReq();

  RoleCreateReq(const RoleCreateReq& from);

  inline RoleCreateReq& operator=(const RoleCreateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCreateReq& default_instance();

  static inline const RoleCreateReq* internal_default_instance() {
    return reinterpret_cast<const RoleCreateReq*>(
               &_RoleCreateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(RoleCreateReq* other);

  // implements Message ----------------------------------------------

  inline RoleCreateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleCreateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleCreateReq& from);
  void MergeFrom(const RoleCreateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleCreateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int32 RoleType = 3;
  void clear_roletype();
  static const int kRoleTypeFieldNumber = 3;
  ::google::protobuf::int32 roletype() const;
  void set_roletype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleCreateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 roletype_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleCreateAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleCreateAck) */ {
 public:
  RoleCreateAck();
  virtual ~RoleCreateAck();

  RoleCreateAck(const RoleCreateAck& from);

  inline RoleCreateAck& operator=(const RoleCreateAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCreateAck& default_instance();

  static inline const RoleCreateAck* internal_default_instance() {
    return reinterpret_cast<const RoleCreateAck*>(
               &_RoleCreateAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(RoleCreateAck* other);

  // implements Message ----------------------------------------------

  inline RoleCreateAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleCreateAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleCreateAck& from);
  void MergeFrom(const RoleCreateAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleCreateAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleCreateAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleDeleteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleDeleteReq) */ {
 public:
  RoleDeleteReq();
  virtual ~RoleDeleteReq();

  RoleDeleteReq(const RoleDeleteReq& from);

  inline RoleDeleteReq& operator=(const RoleDeleteReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDeleteReq& default_instance();

  static inline const RoleDeleteReq* internal_default_instance() {
    return reinterpret_cast<const RoleDeleteReq*>(
               &_RoleDeleteReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(RoleDeleteReq* other);

  // implements Message ----------------------------------------------

  inline RoleDeleteReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleDeleteReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleDeleteReq& from);
  void MergeFrom(const RoleDeleteReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleDeleteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int64 RoleID = 2;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  ::google::protobuf::int64 roleid() const;
  void set_roleid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RoleDeleteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int64 roleid_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleDeleteAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleDeleteAck) */ {
 public:
  RoleDeleteAck();
  virtual ~RoleDeleteAck();

  RoleDeleteAck(const RoleDeleteAck& from);

  inline RoleDeleteAck& operator=(const RoleDeleteAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDeleteAck& default_instance();

  static inline const RoleDeleteAck* internal_default_instance() {
    return reinterpret_cast<const RoleDeleteAck*>(
               &_RoleDeleteAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(RoleDeleteAck* other);

  // implements Message ----------------------------------------------

  inline RoleDeleteAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleDeleteAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleDeleteAck& from);
  void MergeFrom(const RoleDeleteAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleDeleteAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleDeleteAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleLoginReq) */ {
 public:
  RoleLoginReq();
  virtual ~RoleLoginReq();

  RoleLoginReq(const RoleLoginReq& from);

  inline RoleLoginReq& operator=(const RoleLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLoginReq& default_instance();

  static inline const RoleLoginReq* internal_default_instance() {
    return reinterpret_cast<const RoleLoginReq*>(
               &_RoleLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(RoleLoginReq* other);

  // implements Message ----------------------------------------------

  inline RoleLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleLoginReq& from);
  void MergeFrom(const RoleLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int64 RoleID = 2;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  ::google::protobuf::int64 roleid() const;
  void set_roleid(::google::protobuf::int64 value);

  // int64 LoginCode = 3;
  void clear_logincode();
  static const int kLoginCodeFieldNumber = 3;
  ::google::protobuf::int64 logincode() const;
  void set_logincode(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RoleLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int64 logincode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleLoginAck) */ {
 public:
  RoleLoginAck();
  virtual ~RoleLoginAck();

  RoleLoginAck(const RoleLoginAck& from);

  inline RoleLoginAck& operator=(const RoleLoginAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLoginAck& default_instance();

  static inline const RoleLoginAck* internal_default_instance() {
    return reinterpret_cast<const RoleLoginAck*>(
               &_RoleLoginAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(RoleLoginAck* other);

  // implements Message ----------------------------------------------

  inline RoleLoginAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleLoginAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleLoginAck& from);
  void MergeFrom(const RoleLoginAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 AccountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleLogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleLogoutReq) */ {
 public:
  RoleLogoutReq();
  virtual ~RoleLogoutReq();

  RoleLogoutReq(const RoleLogoutReq& from);

  inline RoleLogoutReq& operator=(const RoleLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLogoutReq& default_instance();

  static inline const RoleLogoutReq* internal_default_instance() {
    return reinterpret_cast<const RoleLogoutReq*>(
               &_RoleLogoutReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(RoleLogoutReq* other);

  // implements Message ----------------------------------------------

  inline RoleLogoutReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleLogoutReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleLogoutReq& from);
  void MergeFrom(const RoleLogoutReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // int64 RoleID = 2;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  ::google::protobuf::int64 roleid() const;
  void set_roleid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RoleLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int64 roleid_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleLogoutAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleLogoutAck) */ {
 public:
  RoleLogoutAck();
  virtual ~RoleLogoutAck();

  RoleLogoutAck(const RoleLogoutAck& from);

  inline RoleLogoutAck& operator=(const RoleLogoutAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLogoutAck& default_instance();

  static inline const RoleLogoutAck* internal_default_instance() {
    return reinterpret_cast<const RoleLogoutAck*>(
               &_RoleLogoutAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(RoleLogoutAck* other);

  // implements Message ----------------------------------------------

  inline RoleLogoutAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleLogoutAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleLogoutAck& from);
  void MergeFrom(const RoleLogoutAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleLogoutAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleLogoutAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleDisconnectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleDisconnectReq) */ {
 public:
  RoleDisconnectReq();
  virtual ~RoleDisconnectReq();

  RoleDisconnectReq(const RoleDisconnectReq& from);

  inline RoleDisconnectReq& operator=(const RoleDisconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDisconnectReq& default_instance();

  static inline const RoleDisconnectReq* internal_default_instance() {
    return reinterpret_cast<const RoleDisconnectReq*>(
               &_RoleDisconnectReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(RoleDisconnectReq* other);

  // implements Message ----------------------------------------------

  inline RoleDisconnectReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleDisconnectReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleDisconnectReq& from);
  void MergeFrom(const RoleDisconnectReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleDisconnectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 RoleID = 2;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  ::google::protobuf::int64 roleid() const;
  void set_roleid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RoleDisconnectReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 roleid_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleDisconnectAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleDisconnectAck) */ {
 public:
  RoleDisconnectAck();
  virtual ~RoleDisconnectAck();

  RoleDisconnectAck(const RoleDisconnectAck& from);

  inline RoleDisconnectAck& operator=(const RoleDisconnectAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDisconnectAck& default_instance();

  static inline const RoleDisconnectAck* internal_default_instance() {
    return reinterpret_cast<const RoleDisconnectAck*>(
               &_RoleDisconnectAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(RoleDisconnectAck* other);

  // implements Message ----------------------------------------------

  inline RoleDisconnectAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleDisconnectAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleDisconnectAck& from);
  void MergeFrom(const RoleDisconnectAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleDisconnectAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleDisconnectAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterRoleDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterRoleDataReq) */ {
 public:
  EnterRoleDataReq();
  virtual ~EnterRoleDataReq();

  EnterRoleDataReq(const EnterRoleDataReq& from);

  inline EnterRoleDataReq& operator=(const EnterRoleDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoleDataReq& default_instance();

  static inline const EnterRoleDataReq* internal_default_instance() {
    return reinterpret_cast<const EnterRoleDataReq*>(
               &_EnterRoleDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(EnterRoleDataReq* other);

  // implements Message ----------------------------------------------

  inline EnterRoleDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterRoleDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterRoleDataReq& from);
  void MergeFrom(const EnterRoleDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterRoleDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string RoleName = 2;
  void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  const ::std::string& rolename() const;
  void set_rolename(const ::std::string& value);
  #if LANG_CXX11
  void set_rolename(::std::string&& value);
  #endif
  void set_rolename(const char* value);
  void set_rolename(const char* value, size_t size);
  ::std::string* mutable_rolename();
  ::std::string* release_rolename();
  void set_allocated_rolename(::std::string* rolename);

  // int64 RoleID = 1;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  ::google::protobuf::int64 roleid() const;
  void set_roleid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:EnterRoleDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rolename_;
  ::google::protobuf::int64 roleid_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterRoleDataAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterRoleDataAck) */ {
 public:
  EnterRoleDataAck();
  virtual ~EnterRoleDataAck();

  EnterRoleDataAck(const EnterRoleDataAck& from);

  inline EnterRoleDataAck& operator=(const EnterRoleDataAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoleDataAck& default_instance();

  static inline const EnterRoleDataAck* internal_default_instance() {
    return reinterpret_cast<const EnterRoleDataAck*>(
               &_EnterRoleDataAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(EnterRoleDataAck* other);

  // implements Message ----------------------------------------------

  inline EnterRoleDataAck* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterRoleDataAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterRoleDataAck& from);
  void MergeFrom(const EnterRoleDataAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterRoleDataAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EnterRoleDataAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateNewSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateNewSceneReq) */ {
 public:
  CreateNewSceneReq();
  virtual ~CreateNewSceneReq();

  CreateNewSceneReq(const CreateNewSceneReq& from);

  inline CreateNewSceneReq& operator=(const CreateNewSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateNewSceneReq& default_instance();

  static inline const CreateNewSceneReq* internal_default_instance() {
    return reinterpret_cast<const CreateNewSceneReq*>(
               &_CreateNewSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CreateNewSceneReq* other);

  // implements Message ----------------------------------------------

  inline CreateNewSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateNewSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateNewSceneReq& from);
  void MergeFrom(const CreateNewSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateNewSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 SceneType = 1;
  void clear_scenetype();
  static const int kSceneTypeFieldNumber = 1;
  ::google::protobuf::int32 scenetype() const;
  void set_scenetype(::google::protobuf::int32 value);

  // int32 CopyType = 2;
  void clear_copytype();
  static const int kCopyTypeFieldNumber = 2;
  ::google::protobuf::int32 copytype() const;
  void set_copytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreateNewSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 scenetype_;
  ::google::protobuf::int32 copytype_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateNewSceneAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateNewSceneAck) */ {
 public:
  CreateNewSceneAck();
  virtual ~CreateNewSceneAck();

  CreateNewSceneAck(const CreateNewSceneAck& from);

  inline CreateNewSceneAck& operator=(const CreateNewSceneAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateNewSceneAck& default_instance();

  static inline const CreateNewSceneAck* internal_default_instance() {
    return reinterpret_cast<const CreateNewSceneAck*>(
               &_CreateNewSceneAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CreateNewSceneAck* other);

  // implements Message ----------------------------------------------

  inline CreateNewSceneAck* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateNewSceneAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateNewSceneAck& from);
  void MergeFrom(const CreateNewSceneAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateNewSceneAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 SceneType = 1;
  void clear_scenetype();
  static const int kSceneTypeFieldNumber = 1;
  ::google::protobuf::int32 scenetype() const;
  void set_scenetype(::google::protobuf::int32 value);

  // int32 CopyType = 2;
  void clear_copytype();
  static const int kCopyTypeFieldNumber = 2;
  ::google::protobuf::int32 copytype() const;
  void set_copytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreateNewSceneAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 scenetype_;
  ::google::protobuf::int32 copytype_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransRoleDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransRoleDataReq) */ {
 public:
  TransRoleDataReq();
  virtual ~TransRoleDataReq();

  TransRoleDataReq(const TransRoleDataReq& from);

  inline TransRoleDataReq& operator=(const TransRoleDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransRoleDataReq& default_instance();

  static inline const TransRoleDataReq* internal_default_instance() {
    return reinterpret_cast<const TransRoleDataReq*>(
               &_TransRoleDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(TransRoleDataReq* other);

  // implements Message ----------------------------------------------

  inline TransRoleDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TransRoleDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransRoleDataReq& from);
  void MergeFrom(const TransRoleDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransRoleDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string RoleName = 2;
  void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  const ::std::string& rolename() const;
  void set_rolename(const ::std::string& value);
  #if LANG_CXX11
  void set_rolename(::std::string&& value);
  #endif
  void set_rolename(const char* value);
  void set_rolename(const char* value, size_t size);
  ::std::string* mutable_rolename();
  ::std::string* release_rolename();
  void set_allocated_rolename(::std::string* rolename);

  // int64 RoleID = 1;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  ::google::protobuf::int64 roleid() const;
  void set_roleid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TransRoleDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rolename_;
  ::google::protobuf::int64 roleid_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransRoleDataAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransRoleDataAck) */ {
 public:
  TransRoleDataAck();
  virtual ~TransRoleDataAck();

  TransRoleDataAck(const TransRoleDataAck& from);

  inline TransRoleDataAck& operator=(const TransRoleDataAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransRoleDataAck& default_instance();

  static inline const TransRoleDataAck* internal_default_instance() {
    return reinterpret_cast<const TransRoleDataAck*>(
               &_TransRoleDataAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(TransRoleDataAck* other);

  // implements Message ----------------------------------------------

  inline TransRoleDataAck* New() const PROTOBUF_FINAL { return New(NULL); }

  TransRoleDataAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransRoleDataAck& from);
  void MergeFrom(const TransRoleDataAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransRoleDataAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransRoleDataAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_Msg_5fLogin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckVersionReq

// int32 ClientVerion = 1;
inline void CheckVersionReq::clear_clientverion() {
  clientverion_ = 0;
}
inline ::google::protobuf::int32 CheckVersionReq::clientverion() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.ClientVerion)
  return clientverion_;
}
inline void CheckVersionReq::set_clientverion(::google::protobuf::int32 value) {
  
  clientverion_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionReq.ClientVerion)
}

// string PackageName = 2;
inline void CheckVersionReq::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckVersionReq::packagename() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.PackageName)
  return packagename_.GetNoArena();
}
inline void CheckVersionReq::set_packagename(const ::std::string& value) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionReq.PackageName)
}
#if LANG_CXX11
inline void CheckVersionReq::set_packagename(::std::string&& value) {
  
  packagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CheckVersionReq.PackageName)
}
#endif
inline void CheckVersionReq::set_packagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionReq.PackageName)
}
inline void CheckVersionReq::set_packagename(const char* value, size_t size) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionReq.PackageName)
}
inline ::std::string* CheckVersionReq::mutable_packagename() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionReq.PackageName)
  return packagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckVersionReq::release_packagename() {
  // @@protoc_insertion_point(field_release:CheckVersionReq.PackageName)
  
  return packagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckVersionReq::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    
  } else {
    
  }
  packagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionReq.PackageName)
}

// string Channel = 3;
inline void CheckVersionReq::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckVersionReq::channel() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.Channel)
  return channel_.GetNoArena();
}
inline void CheckVersionReq::set_channel(const ::std::string& value) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionReq.Channel)
}
#if LANG_CXX11
inline void CheckVersionReq::set_channel(::std::string&& value) {
  
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CheckVersionReq.Channel)
}
#endif
inline void CheckVersionReq::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionReq.Channel)
}
inline void CheckVersionReq::set_channel(const char* value, size_t size) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionReq.Channel)
}
inline ::std::string* CheckVersionReq::mutable_channel() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionReq.Channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckVersionReq::release_channel() {
  // @@protoc_insertion_point(field_release:CheckVersionReq.Channel)
  
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckVersionReq::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    
  } else {
    
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionReq.Channel)
}

// -------------------------------------------------------------------

// CheckVersionAck

// int32 RetCode = 1;
inline void CheckVersionAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CheckVersionAck::retcode() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.RetCode)
  return retcode_;
}
inline void CheckVersionAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionAck.RetCode)
}

// int32 ClientVerion = 2;
inline void CheckVersionAck::clear_clientverion() {
  clientverion_ = 0;
}
inline ::google::protobuf::int32 CheckVersionAck::clientverion() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.ClientVerion)
  return clientverion_;
}
inline void CheckVersionAck::set_clientverion(::google::protobuf::int32 value) {
  
  clientverion_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionAck.ClientVerion)
}

// string PackageName = 3;
inline void CheckVersionAck::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckVersionAck::packagename() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.PackageName)
  return packagename_.GetNoArena();
}
inline void CheckVersionAck::set_packagename(const ::std::string& value) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionAck.PackageName)
}
#if LANG_CXX11
inline void CheckVersionAck::set_packagename(::std::string&& value) {
  
  packagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CheckVersionAck.PackageName)
}
#endif
inline void CheckVersionAck::set_packagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionAck.PackageName)
}
inline void CheckVersionAck::set_packagename(const char* value, size_t size) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionAck.PackageName)
}
inline ::std::string* CheckVersionAck::mutable_packagename() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionAck.PackageName)
  return packagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckVersionAck::release_packagename() {
  // @@protoc_insertion_point(field_release:CheckVersionAck.PackageName)
  
  return packagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckVersionAck::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    
  } else {
    
  }
  packagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionAck.PackageName)
}

// -------------------------------------------------------------------

// AccountRegReq

// string AccountName = 1;
inline void AccountRegReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.AccountName)
  return accountname_.GetNoArena();
}
inline void AccountRegReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.AccountName)
}
#if LANG_CXX11
inline void AccountRegReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.AccountName)
}
#endif
inline void AccountRegReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.AccountName)
}
inline void AccountRegReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.AccountName)
}
inline ::std::string* AccountRegReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountRegReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.AccountName)
}

// string Password = 2;
inline void AccountRegReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegReq::password() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Password)
  return password_.GetNoArena();
}
inline void AccountRegReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.Password)
}
#if LANG_CXX11
inline void AccountRegReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.Password)
}
#endif
inline void AccountRegReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.Password)
}
inline void AccountRegReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.Password)
}
inline ::std::string* AccountRegReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountRegReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.Password)
}

// string Channel = 3;
inline void AccountRegReq::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegReq::channel() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Channel)
  return channel_.GetNoArena();
}
inline void AccountRegReq::set_channel(const ::std::string& value) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.Channel)
}
#if LANG_CXX11
inline void AccountRegReq::set_channel(::std::string&& value) {
  
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.Channel)
}
#endif
inline void AccountRegReq::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.Channel)
}
inline void AccountRegReq::set_channel(const char* value, size_t size) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.Channel)
}
inline ::std::string* AccountRegReq::mutable_channel() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.Channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegReq::release_channel() {
  // @@protoc_insertion_point(field_release:AccountRegReq.Channel)
  
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegReq::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    
  } else {
    
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.Channel)
}

// -------------------------------------------------------------------

// AccountRegAck

// int32 RetCode = 1;
inline void AccountRegAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AccountRegAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.RetCode)
  return retcode_;
}
inline void AccountRegAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.RetCode)
}

// int64 AccountID = 2;
inline void AccountRegAck::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AccountRegAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.AccountID)
  return accountid_;
}
inline void AccountRegAck::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.AccountID)
}

// -------------------------------------------------------------------

// AccountLoginReq

// string AccountName = 1;
inline void AccountLoginReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLoginReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.AccountName)
  return accountname_.GetNoArena();
}
inline void AccountLoginReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.AccountName)
}
#if LANG_CXX11
inline void AccountLoginReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.AccountName)
}
#endif
inline void AccountLoginReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.AccountName)
}
inline void AccountLoginReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.AccountName)
}
inline ::std::string* AccountLoginReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLoginReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLoginReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.AccountName)
}

// string Password = 2;
inline void AccountLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLoginReq::password() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.Password)
  return password_.GetNoArena();
}
inline void AccountLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.Password)
}
#if LANG_CXX11
inline void AccountLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.Password)
}
#endif
inline void AccountLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.Password)
}
inline void AccountLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.Password)
}
inline ::std::string* AccountLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.Password)
}

// -------------------------------------------------------------------

// AccountLoginAck

// int32 RetCode = 1;
inline void AccountLoginAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AccountLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.RetCode)
  return retcode_;
}
inline void AccountLoginAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.RetCode)
}

// int64 AccountID = 2;
inline void AccountLoginAck::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AccountLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.AccountID)
  return accountid_;
}
inline void AccountLoginAck::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.AccountID)
}

// int32 LastSvrID = 3;
inline void AccountLoginAck::clear_lastsvrid() {
  lastsvrid_ = 0;
}
inline ::google::protobuf::int32 AccountLoginAck::lastsvrid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.LastSvrID)
  return lastsvrid_;
}
inline void AccountLoginAck::set_lastsvrid(::google::protobuf::int32 value) {
  
  lastsvrid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.LastSvrID)
}

// -------------------------------------------------------------------

// ClientServerListReq

// int64 AccountID = 1;
inline void ClientServerListReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ClientServerListReq::accountid() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.AccountID)
  return accountid_;
}
inline void ClientServerListReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.AccountID)
}

// string Channel = 2;
inline void ClientServerListReq::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientServerListReq::channel() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.Channel)
  return channel_.GetNoArena();
}
inline void ClientServerListReq::set_channel(const ::std::string& value) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerListReq.Channel)
}
#if LANG_CXX11
inline void ClientServerListReq::set_channel(::std::string&& value) {
  
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientServerListReq.Channel)
}
#endif
inline void ClientServerListReq::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerListReq.Channel)
}
inline void ClientServerListReq::set_channel(const char* value, size_t size) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerListReq.Channel)
}
inline ::std::string* ClientServerListReq::mutable_channel() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerListReq.Channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientServerListReq::release_channel() {
  // @@protoc_insertion_point(field_release:ClientServerListReq.Channel)
  
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientServerListReq::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    
  } else {
    
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:ClientServerListReq.Channel)
}

// string PackName = 3;
inline void ClientServerListReq::clear_packname() {
  packname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientServerListReq::packname() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.PackName)
  return packname_.GetNoArena();
}
inline void ClientServerListReq::set_packname(const ::std::string& value) {
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerListReq.PackName)
}
#if LANG_CXX11
inline void ClientServerListReq::set_packname(::std::string&& value) {
  
  packname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientServerListReq.PackName)
}
#endif
inline void ClientServerListReq::set_packname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerListReq.PackName)
}
inline void ClientServerListReq::set_packname(const char* value, size_t size) {
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerListReq.PackName)
}
inline ::std::string* ClientServerListReq::mutable_packname() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerListReq.PackName)
  return packname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientServerListReq::release_packname() {
  // @@protoc_insertion_point(field_release:ClientServerListReq.PackName)
  
  return packname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientServerListReq::set_allocated_packname(::std::string* packname) {
  if (packname != NULL) {
    
  } else {
    
  }
  packname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packname);
  // @@protoc_insertion_point(field_set_allocated:ClientServerListReq.PackName)
}

// int32 ClientVersion = 4;
inline void ClientServerListReq::clear_clientversion() {
  clientversion_ = 0;
}
inline ::google::protobuf::int32 ClientServerListReq::clientversion() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.ClientVersion)
  return clientversion_;
}
inline void ClientServerListReq::set_clientversion(::google::protobuf::int32 value) {
  
  clientversion_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.ClientVersion)
}

// -------------------------------------------------------------------

// ClientServerNode

// int32 SvrID = 1;
inline void ClientServerNode::clear_svrid() {
  svrid_ = 0;
}
inline ::google::protobuf::int32 ClientServerNode::svrid() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrID)
  return svrid_;
}
inline void ClientServerNode::set_svrid(::google::protobuf::int32 value) {
  
  svrid_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrID)
}

// string SvrName = 2;
inline void ClientServerNode::clear_svrname() {
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientServerNode::svrname() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrName)
  return svrname_.GetNoArena();
}
inline void ClientServerNode::set_svrname(const ::std::string& value) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrName)
}
#if LANG_CXX11
inline void ClientServerNode::set_svrname(::std::string&& value) {
  
  svrname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientServerNode.SvrName)
}
#endif
inline void ClientServerNode::set_svrname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerNode.SvrName)
}
inline void ClientServerNode::set_svrname(const char* value, size_t size) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerNode.SvrName)
}
inline ::std::string* ClientServerNode::mutable_svrname() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerNode.SvrName)
  return svrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientServerNode::release_svrname() {
  // @@protoc_insertion_point(field_release:ClientServerNode.SvrName)
  
  return svrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientServerNode::set_allocated_svrname(::std::string* svrname) {
  if (svrname != NULL) {
    
  } else {
    
  }
  svrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svrname);
  // @@protoc_insertion_point(field_set_allocated:ClientServerNode.SvrName)
}

// uint32 SvrState = 3;
inline void ClientServerNode::clear_svrstate() {
  svrstate_ = 0u;
}
inline ::google::protobuf::uint32 ClientServerNode::svrstate() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrState)
  return svrstate_;
}
inline void ClientServerNode::set_svrstate(::google::protobuf::uint32 value) {
  
  svrstate_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrState)
}

// uint32 SvrDefault = 4;
inline void ClientServerNode::clear_svrdefault() {
  svrdefault_ = 0u;
}
inline ::google::protobuf::uint32 ClientServerNode::svrdefault() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrDefault)
  return svrdefault_;
}
inline void ClientServerNode::set_svrdefault(::google::protobuf::uint32 value) {
  
  svrdefault_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrDefault)
}

// int32 SvrOpenTime = 5;
inline void ClientServerNode::clear_svropentime() {
  svropentime_ = 0;
}
inline ::google::protobuf::int32 ClientServerNode::svropentime() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrOpenTime)
  return svropentime_;
}
inline void ClientServerNode::set_svropentime(::google::protobuf::int32 value) {
  
  svropentime_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrOpenTime)
}

// -------------------------------------------------------------------

// ClientServerListAck

// int32 RetCode = 1;
inline void ClientServerListAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ClientServerListAck::retcode() const {
  // @@protoc_insertion_point(field_get:ClientServerListAck.RetCode)
  return retcode_;
}
inline void ClientServerListAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListAck.RetCode)
}

// repeated .ClientServerNode SvrNode = 2;
inline int ClientServerListAck::svrnode_size() const {
  return svrnode_.size();
}
inline void ClientServerListAck::clear_svrnode() {
  svrnode_.Clear();
}
inline const ::ClientServerNode& ClientServerListAck::svrnode(int index) const {
  // @@protoc_insertion_point(field_get:ClientServerListAck.SvrNode)
  return svrnode_.Get(index);
}
inline ::ClientServerNode* ClientServerListAck::mutable_svrnode(int index) {
  // @@protoc_insertion_point(field_mutable:ClientServerListAck.SvrNode)
  return svrnode_.Mutable(index);
}
inline ::ClientServerNode* ClientServerListAck::add_svrnode() {
  // @@protoc_insertion_point(field_add:ClientServerListAck.SvrNode)
  return svrnode_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ClientServerNode >*
ClientServerListAck::mutable_svrnode() {
  // @@protoc_insertion_point(field_mutable_list:ClientServerListAck.SvrNode)
  return &svrnode_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ClientServerNode >&
ClientServerListAck::svrnode() const {
  // @@protoc_insertion_point(field_list:ClientServerListAck.SvrNode)
  return svrnode_;
}

// -------------------------------------------------------------------

// RegToLoginSvrReq

// int32 ServerID = 1;
inline void RegToLoginSvrReq::clear_serverid() {
  serverid_ = 0;
}
inline ::google::protobuf::int32 RegToLoginSvrReq::serverid() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrReq.ServerID)
  return serverid_;
}
inline void RegToLoginSvrReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:RegToLoginSvrReq.ServerID)
}

// string ServerName = 2;
inline void RegToLoginSvrReq::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegToLoginSvrReq::servername() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrReq.ServerName)
  return servername_.GetNoArena();
}
inline void RegToLoginSvrReq::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RegToLoginSvrReq.ServerName)
}
#if LANG_CXX11
inline void RegToLoginSvrReq::set_servername(::std::string&& value) {
  
  servername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RegToLoginSvrReq.ServerName)
}
#endif
inline void RegToLoginSvrReq::set_servername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RegToLoginSvrReq.ServerName)
}
inline void RegToLoginSvrReq::set_servername(const char* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RegToLoginSvrReq.ServerName)
}
inline ::std::string* RegToLoginSvrReq::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:RegToLoginSvrReq.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegToLoginSvrReq::release_servername() {
  // @@protoc_insertion_point(field_release:RegToLoginSvrReq.ServerName)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegToLoginSvrReq::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:RegToLoginSvrReq.ServerName)
}

// -------------------------------------------------------------------

// RegToLoginSvrAck

// int32 RetCode = 1;
inline void RegToLoginSvrAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RegToLoginSvrAck::retcode() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrAck.RetCode)
  return retcode_;
}
inline void RegToLoginSvrAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RegToLoginSvrAck.RetCode)
}

// -------------------------------------------------------------------

// SelectServerReq

// int32 ServerID = 1;
inline void SelectServerReq::clear_serverid() {
  serverid_ = 0;
}
inline ::google::protobuf::int32 SelectServerReq::serverid() const {
  // @@protoc_insertion_point(field_get:SelectServerReq.ServerID)
  return serverid_;
}
inline void SelectServerReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:SelectServerReq.ServerID)
}

// -------------------------------------------------------------------

// SelectServerAck

// int32 RetCode = 1;
inline void SelectServerAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SelectServerAck::retcode() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.RetCode)
  return retcode_;
}
inline void SelectServerAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.RetCode)
}

// string ServerAddr = 2;
inline void SelectServerAck::clear_serveraddr() {
  serveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SelectServerAck::serveraddr() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerAddr)
  return serveraddr_.GetNoArena();
}
inline void SelectServerAck::set_serveraddr(const ::std::string& value) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerAddr)
}
#if LANG_CXX11
inline void SelectServerAck::set_serveraddr(::std::string&& value) {
  
  serveraddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SelectServerAck.ServerAddr)
}
#endif
inline void SelectServerAck::set_serveraddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SelectServerAck.ServerAddr)
}
inline void SelectServerAck::set_serveraddr(const char* value, size_t size) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SelectServerAck.ServerAddr)
}
inline ::std::string* SelectServerAck::mutable_serveraddr() {
  
  // @@protoc_insertion_point(field_mutable:SelectServerAck.ServerAddr)
  return serveraddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectServerAck::release_serveraddr() {
  // @@protoc_insertion_point(field_release:SelectServerAck.ServerAddr)
  
  return serveraddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectServerAck::set_allocated_serveraddr(::std::string* serveraddr) {
  if (serveraddr != NULL) {
    
  } else {
    
  }
  serveraddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serveraddr);
  // @@protoc_insertion_point(field_set_allocated:SelectServerAck.ServerAddr)
}

// int32 ServerPort = 3;
inline void SelectServerAck::clear_serverport() {
  serverport_ = 0;
}
inline ::google::protobuf::int32 SelectServerAck::serverport() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerPort)
  return serverport_;
}
inline void SelectServerAck::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerPort)
}

// int32 LoginCode = 4;
inline void SelectServerAck::clear_logincode() {
  logincode_ = 0;
}
inline ::google::protobuf::int32 SelectServerAck::logincode() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.LoginCode)
  return logincode_;
}
inline void SelectServerAck::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.LoginCode)
}

// -------------------------------------------------------------------

// RoleListNode

// int32 SvrID = 1;
inline void RoleListNode::clear_svrid() {
  svrid_ = 0;
}
inline ::google::protobuf::int32 RoleListNode::svrid() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrID)
  return svrid_;
}
inline void RoleListNode::set_svrid(::google::protobuf::int32 value) {
  
  svrid_ = value;
  // @@protoc_insertion_point(field_set:RoleListNode.SvrID)
}

// string SvrName = 2;
inline void RoleListNode::clear_svrname() {
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoleListNode::svrname() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrName)
  return svrname_.GetNoArena();
}
inline void RoleListNode::set_svrname(const ::std::string& value) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleListNode.SvrName)
}
#if LANG_CXX11
inline void RoleListNode::set_svrname(::std::string&& value) {
  
  svrname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleListNode.SvrName)
}
#endif
inline void RoleListNode::set_svrname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleListNode.SvrName)
}
inline void RoleListNode::set_svrname(const char* value, size_t size) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleListNode.SvrName)
}
inline ::std::string* RoleListNode::mutable_svrname() {
  
  // @@protoc_insertion_point(field_mutable:RoleListNode.SvrName)
  return svrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleListNode::release_svrname() {
  // @@protoc_insertion_point(field_release:RoleListNode.SvrName)
  
  return svrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleListNode::set_allocated_svrname(::std::string* svrname) {
  if (svrname != NULL) {
    
  } else {
    
  }
  svrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svrname);
  // @@protoc_insertion_point(field_set_allocated:RoleListNode.SvrName)
}

// uint32 SvrState = 3;
inline void RoleListNode::clear_svrstate() {
  svrstate_ = 0u;
}
inline ::google::protobuf::uint32 RoleListNode::svrstate() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrState)
  return svrstate_;
}
inline void RoleListNode::set_svrstate(::google::protobuf::uint32 value) {
  
  svrstate_ = value;
  // @@protoc_insertion_point(field_set:RoleListNode.SvrState)
}

// uint32 SvrDefault = 4;
inline void RoleListNode::clear_svrdefault() {
  svrdefault_ = 0u;
}
inline ::google::protobuf::uint32 RoleListNode::svrdefault() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrDefault)
  return svrdefault_;
}
inline void RoleListNode::set_svrdefault(::google::protobuf::uint32 value) {
  
  svrdefault_ = value;
  // @@protoc_insertion_point(field_set:RoleListNode.SvrDefault)
}

// int32 SvrOpenTime = 5;
inline void RoleListNode::clear_svropentime() {
  svropentime_ = 0;
}
inline ::google::protobuf::int32 RoleListNode::svropentime() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrOpenTime)
  return svropentime_;
}
inline void RoleListNode::set_svropentime(::google::protobuf::int32 value) {
  
  svropentime_ = value;
  // @@protoc_insertion_point(field_set:RoleListNode.SvrOpenTime)
}

// -------------------------------------------------------------------

// RoleListReq

// int64 AccountID = 1;
inline void RoleListReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleListReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleListReq.AccountID)
  return accountid_;
}
inline void RoleListReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.AccountID)
}

// int32 LoginCode = 2;
inline void RoleListReq::clear_logincode() {
  logincode_ = 0;
}
inline ::google::protobuf::int32 RoleListReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleListReq.LoginCode)
  return logincode_;
}
inline void RoleListReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.LoginCode)
}

// -------------------------------------------------------------------

// RoleListAck

// int32 RetCode = 1;
inline void RoleListAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RoleListAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleListAck.RetCode)
  return retcode_;
}
inline void RoleListAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleListAck.RetCode)
}

// repeated .RoleListNode RoleNode = 2;
inline int RoleListAck::rolenode_size() const {
  return rolenode_.size();
}
inline void RoleListAck::clear_rolenode() {
  rolenode_.Clear();
}
inline const ::RoleListNode& RoleListAck::rolenode(int index) const {
  // @@protoc_insertion_point(field_get:RoleListAck.RoleNode)
  return rolenode_.Get(index);
}
inline ::RoleListNode* RoleListAck::mutable_rolenode(int index) {
  // @@protoc_insertion_point(field_mutable:RoleListAck.RoleNode)
  return rolenode_.Mutable(index);
}
inline ::RoleListNode* RoleListAck::add_rolenode() {
  // @@protoc_insertion_point(field_add:RoleListAck.RoleNode)
  return rolenode_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RoleListNode >*
RoleListAck::mutable_rolenode() {
  // @@protoc_insertion_point(field_mutable_list:RoleListAck.RoleNode)
  return &rolenode_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleListNode >&
RoleListAck::rolenode() const {
  // @@protoc_insertion_point(field_list:RoleListAck.RoleNode)
  return rolenode_;
}

// -------------------------------------------------------------------

// RoleCreateReq

// int64 AccountID = 1;
inline void RoleCreateReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleCreateReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.AccountID)
  return accountid_;
}
inline void RoleCreateReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.AccountID)
}

// string Name = 2;
inline void RoleCreateReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoleCreateReq::name() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Name)
  return name_.GetNoArena();
}
inline void RoleCreateReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleCreateReq.Name)
}
#if LANG_CXX11
inline void RoleCreateReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleCreateReq.Name)
}
#endif
inline void RoleCreateReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleCreateReq.Name)
}
inline void RoleCreateReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleCreateReq.Name)
}
inline ::std::string* RoleCreateReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleCreateReq.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleCreateReq::release_name() {
  // @@protoc_insertion_point(field_release:RoleCreateReq.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleCreateReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleCreateReq.Name)
}

// int32 RoleType = 3;
inline void RoleCreateReq::clear_roletype() {
  roletype_ = 0;
}
inline ::google::protobuf::int32 RoleCreateReq::roletype() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.RoleType)
  return roletype_;
}
inline void RoleCreateReq::set_roletype(::google::protobuf::int32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.RoleType)
}

// -------------------------------------------------------------------

// RoleCreateAck

// int32 RetCode = 1;
inline void RoleCreateAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RoleCreateAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RetCode)
  return retcode_;
}
inline void RoleCreateAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RetCode)
}

// -------------------------------------------------------------------

// RoleDeleteReq

// int64 AccountID = 1;
inline void RoleDeleteReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleDeleteReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.AccountID)
  return accountid_;
}
inline void RoleDeleteReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.AccountID)
}

// int64 RoleID = 2;
inline void RoleDeleteReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleDeleteReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.RoleID)
  return roleid_;
}
inline void RoleDeleteReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.RoleID)
}

// -------------------------------------------------------------------

// RoleDeleteAck

// int32 RetCode = 1;
inline void RoleDeleteAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RoleDeleteAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDeleteAck.RetCode)
  return retcode_;
}
inline void RoleDeleteAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteAck.RetCode)
}

// -------------------------------------------------------------------

// RoleLoginReq

// int64 AccountID = 1;
inline void RoleLoginReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.AccountID)
  return accountid_;
}
inline void RoleLoginReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.AccountID)
}

// int64 RoleID = 2;
inline void RoleLoginReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleLoginReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.RoleID)
  return roleid_;
}
inline void RoleLoginReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.RoleID)
}

// int64 LoginCode = 3;
inline void RoleLoginReq::clear_logincode() {
  logincode_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleLoginReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.LoginCode)
  return logincode_;
}
inline void RoleLoginReq::set_logincode(::google::protobuf::int64 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.LoginCode)
}

// -------------------------------------------------------------------

// RoleLoginAck

// int32 RetCode = 1;
inline void RoleLoginAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RoleLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.RetCode)
  return retcode_;
}
inline void RoleLoginAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.RetCode)
}

// int64 AccountID = 2;
inline void RoleLoginAck::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.AccountID)
  return accountid_;
}
inline void RoleLoginAck::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.AccountID)
}

// -------------------------------------------------------------------

// RoleLogoutReq

// int64 AccountID = 1;
inline void RoleLogoutReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleLogoutReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLogoutReq.AccountID)
  return accountid_;
}
inline void RoleLogoutReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutReq.AccountID)
}

// int64 RoleID = 2;
inline void RoleLogoutReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleLogoutReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLogoutReq.RoleID)
  return roleid_;
}
inline void RoleLogoutReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutReq.RoleID)
}

// -------------------------------------------------------------------

// RoleLogoutAck

// int32 RetCode = 1;
inline void RoleLogoutAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RoleLogoutAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleLogoutAck.RetCode)
  return retcode_;
}
inline void RoleLogoutAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutAck.RetCode)
}

// -------------------------------------------------------------------

// RoleDisconnectReq

// int64 RoleID = 2;
inline void RoleDisconnectReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoleDisconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.RoleID)
  return roleid_;
}
inline void RoleDisconnectReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.RoleID)
}

// -------------------------------------------------------------------

// RoleDisconnectAck

// int32 RetCode = 1;
inline void RoleDisconnectAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RoleDisconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectAck.RetCode)
  return retcode_;
}
inline void RoleDisconnectAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectAck.RetCode)
}

// -------------------------------------------------------------------

// EnterRoleDataReq

// int64 RoleID = 1;
inline void EnterRoleDataReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EnterRoleDataReq::roleid() const {
  // @@protoc_insertion_point(field_get:EnterRoleDataReq.RoleID)
  return roleid_;
}
inline void EnterRoleDataReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:EnterRoleDataReq.RoleID)
}

// string RoleName = 2;
inline void EnterRoleDataReq::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnterRoleDataReq::rolename() const {
  // @@protoc_insertion_point(field_get:EnterRoleDataReq.RoleName)
  return rolename_.GetNoArena();
}
inline void EnterRoleDataReq::set_rolename(const ::std::string& value) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EnterRoleDataReq.RoleName)
}
#if LANG_CXX11
inline void EnterRoleDataReq::set_rolename(::std::string&& value) {
  
  rolename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EnterRoleDataReq.RoleName)
}
#endif
inline void EnterRoleDataReq::set_rolename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EnterRoleDataReq.RoleName)
}
inline void EnterRoleDataReq::set_rolename(const char* value, size_t size) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EnterRoleDataReq.RoleName)
}
inline ::std::string* EnterRoleDataReq::mutable_rolename() {
  
  // @@protoc_insertion_point(field_mutable:EnterRoleDataReq.RoleName)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterRoleDataReq::release_rolename() {
  // @@protoc_insertion_point(field_release:EnterRoleDataReq.RoleName)
  
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterRoleDataReq::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    
  } else {
    
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:EnterRoleDataReq.RoleName)
}

// -------------------------------------------------------------------

// EnterRoleDataAck

// int32 RetCode = 1;
inline void EnterRoleDataAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EnterRoleDataAck::retcode() const {
  // @@protoc_insertion_point(field_get:EnterRoleDataAck.RetCode)
  return retcode_;
}
inline void EnterRoleDataAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:EnterRoleDataAck.RetCode)
}

// -------------------------------------------------------------------

// CreateNewSceneReq

// int32 SceneType = 1;
inline void CreateNewSceneReq::clear_scenetype() {
  scenetype_ = 0;
}
inline ::google::protobuf::int32 CreateNewSceneReq::scenetype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.SceneType)
  return scenetype_;
}
inline void CreateNewSceneReq::set_scenetype(::google::protobuf::int32 value) {
  
  scenetype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.SceneType)
}

// int32 CopyType = 2;
inline void CreateNewSceneReq::clear_copytype() {
  copytype_ = 0;
}
inline ::google::protobuf::int32 CreateNewSceneReq::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CopyType)
  return copytype_;
}
inline void CreateNewSceneReq::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CopyType)
}

// -------------------------------------------------------------------

// CreateNewSceneAck

// int32 SceneType = 1;
inline void CreateNewSceneAck::clear_scenetype() {
  scenetype_ = 0;
}
inline ::google::protobuf::int32 CreateNewSceneAck::scenetype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.SceneType)
  return scenetype_;
}
inline void CreateNewSceneAck::set_scenetype(::google::protobuf::int32 value) {
  
  scenetype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.SceneType)
}

// int32 CopyType = 2;
inline void CreateNewSceneAck::clear_copytype() {
  copytype_ = 0;
}
inline ::google::protobuf::int32 CreateNewSceneAck::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyType)
  return copytype_;
}
inline void CreateNewSceneAck::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyType)
}

// -------------------------------------------------------------------

// TransRoleDataReq

// int64 RoleID = 1;
inline void TransRoleDataReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TransRoleDataReq::roleid() const {
  // @@protoc_insertion_point(field_get:TransRoleDataReq.RoleID)
  return roleid_;
}
inline void TransRoleDataReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataReq.RoleID)
}

// string RoleName = 2;
inline void TransRoleDataReq::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransRoleDataReq::rolename() const {
  // @@protoc_insertion_point(field_get:TransRoleDataReq.RoleName)
  return rolename_.GetNoArena();
}
inline void TransRoleDataReq::set_rolename(const ::std::string& value) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransRoleDataReq.RoleName)
}
#if LANG_CXX11
inline void TransRoleDataReq::set_rolename(::std::string&& value) {
  
  rolename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TransRoleDataReq.RoleName)
}
#endif
inline void TransRoleDataReq::set_rolename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransRoleDataReq.RoleName)
}
inline void TransRoleDataReq::set_rolename(const char* value, size_t size) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransRoleDataReq.RoleName)
}
inline ::std::string* TransRoleDataReq::mutable_rolename() {
  
  // @@protoc_insertion_point(field_mutable:TransRoleDataReq.RoleName)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransRoleDataReq::release_rolename() {
  // @@protoc_insertion_point(field_release:TransRoleDataReq.RoleName)
  
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransRoleDataReq::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    
  } else {
    
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:TransRoleDataReq.RoleName)
}

// -------------------------------------------------------------------

// TransRoleDataAck

// int32 RetCode = 1;
inline void TransRoleDataAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TransRoleDataAck::retcode() const {
  // @@protoc_insertion_point(field_get:TransRoleDataAck.RetCode)
  return retcode_;
}
inline void TransRoleDataAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataAck.RetCode)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Msg_5fLogin_2eproto__INCLUDED
