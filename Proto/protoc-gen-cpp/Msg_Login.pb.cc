// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Msg_Login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CheckVersionReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckVersionReq> {
} _CheckVersionReq_default_instance_;
class CheckVersionAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckVersionAck> {
} _CheckVersionAck_default_instance_;
class AccountRegReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountRegReq> {
} _AccountRegReq_default_instance_;
class AccountRegAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountRegAck> {
} _AccountRegAck_default_instance_;
class AccountLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginReq> {
} _AccountLoginReq_default_instance_;
class AccountLoginAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginAck> {
} _AccountLoginAck_default_instance_;
class ClientServerListReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientServerListReq> {
} _ClientServerListReq_default_instance_;
class ClientServerNodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientServerNode> {
} _ClientServerNode_default_instance_;
class ClientServerListAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientServerListAck> {
} _ClientServerListAck_default_instance_;
class RegToLoginSvrReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegToLoginSvrReq> {
} _RegToLoginSvrReq_default_instance_;
class RegToLoginSvrAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegToLoginSvrAck> {
} _RegToLoginSvrAck_default_instance_;
class SelectServerReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SelectServerReq> {
} _SelectServerReq_default_instance_;
class SelectServerAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SelectServerAck> {
} _SelectServerAck_default_instance_;
class RoleListNodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleListNode> {
} _RoleListNode_default_instance_;
class RoleListReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleListReq> {
} _RoleListReq_default_instance_;
class RoleListAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleListAck> {
} _RoleListAck_default_instance_;
class RoleCreateReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleCreateReq> {
} _RoleCreateReq_default_instance_;
class RoleCreateAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleCreateAck> {
} _RoleCreateAck_default_instance_;
class RoleDeleteReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleDeleteReq> {
} _RoleDeleteReq_default_instance_;
class RoleDeleteAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleDeleteAck> {
} _RoleDeleteAck_default_instance_;
class RoleLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLoginReq> {
} _RoleLoginReq_default_instance_;
class RoleLoginAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLoginAck> {
} _RoleLoginAck_default_instance_;
class RoleLogoutReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLogoutReq> {
} _RoleLogoutReq_default_instance_;
class RoleLogoutAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLogoutAck> {
} _RoleLogoutAck_default_instance_;
class RoleDisconnectReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleDisconnectReq> {
} _RoleDisconnectReq_default_instance_;
class RoleDisconnectAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleDisconnectAck> {
} _RoleDisconnectAck_default_instance_;
class EnterRoleDataReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterRoleDataReq> {
} _EnterRoleDataReq_default_instance_;
class EnterRoleDataAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterRoleDataAck> {
} _EnterRoleDataAck_default_instance_;
class CreateNewSceneReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateNewSceneReq> {
} _CreateNewSceneReq_default_instance_;
class CreateNewSceneAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateNewSceneAck> {
} _CreateNewSceneAck_default_instance_;
class TransRoleDataReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TransRoleDataReq> {
} _TransRoleDataReq_default_instance_;
class TransRoleDataAckDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TransRoleDataAck> {
} _TransRoleDataAck_default_instance_;

namespace protobuf_Msg_5fLogin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[32];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, clientverion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, packagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, clientverion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, packagename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, lastsvrid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, packname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, clientversion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrdefault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svropentime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, svrnode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrReq, servername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegToLoginSvrAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, serveraddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, serverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListNode, svrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListNode, svrname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListNode, svrstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListNode, svrdefault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListNode, svropentime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, rolenode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, roletype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, logincode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginAck, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoleDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoleDataReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoleDataReq, rolename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoleDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoleDataAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, scenetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, copytype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, scenetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, copytype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataReq, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataReq, rolename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleDataAck, retcode_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CheckVersionReq)},
  { 8, -1, sizeof(CheckVersionAck)},
  { 16, -1, sizeof(AccountRegReq)},
  { 24, -1, sizeof(AccountRegAck)},
  { 31, -1, sizeof(AccountLoginReq)},
  { 38, -1, sizeof(AccountLoginAck)},
  { 46, -1, sizeof(ClientServerListReq)},
  { 55, -1, sizeof(ClientServerNode)},
  { 65, -1, sizeof(ClientServerListAck)},
  { 72, -1, sizeof(RegToLoginSvrReq)},
  { 79, -1, sizeof(RegToLoginSvrAck)},
  { 85, -1, sizeof(SelectServerReq)},
  { 91, -1, sizeof(SelectServerAck)},
  { 100, -1, sizeof(RoleListNode)},
  { 110, -1, sizeof(RoleListReq)},
  { 117, -1, sizeof(RoleListAck)},
  { 124, -1, sizeof(RoleCreateReq)},
  { 132, -1, sizeof(RoleCreateAck)},
  { 138, -1, sizeof(RoleDeleteReq)},
  { 145, -1, sizeof(RoleDeleteAck)},
  { 151, -1, sizeof(RoleLoginReq)},
  { 159, -1, sizeof(RoleLoginAck)},
  { 166, -1, sizeof(RoleLogoutReq)},
  { 173, -1, sizeof(RoleLogoutAck)},
  { 179, -1, sizeof(RoleDisconnectReq)},
  { 185, -1, sizeof(RoleDisconnectAck)},
  { 191, -1, sizeof(EnterRoleDataReq)},
  { 198, -1, sizeof(EnterRoleDataAck)},
  { 204, -1, sizeof(CreateNewSceneReq)},
  { 211, -1, sizeof(CreateNewSceneAck)},
  { 218, -1, sizeof(TransRoleDataReq)},
  { 225, -1, sizeof(TransRoleDataAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckVersionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckVersionAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountRegReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountRegAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientServerListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientServerNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientServerListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegToLoginSvrReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegToLoginSvrAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectServerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleListNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleCreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleCreateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleDeleteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleDeleteAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLogoutAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleDisconnectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleDisconnectAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterRoleDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterRoleDataAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateNewSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateNewSceneAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransRoleDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransRoleDataAck_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Msg_Login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 32);
}

}  // namespace

void TableStruct::Shutdown() {
  _CheckVersionReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CheckVersionAck_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AccountRegReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AccountRegAck_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _AccountLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _AccountLoginAck_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ClientServerListReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ClientServerNode_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ClientServerListAck_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _RegToLoginSvrReq_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _RegToLoginSvrAck_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _SelectServerReq_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _SelectServerAck_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _RoleListNode_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _RoleListReq_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _RoleListAck_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _RoleCreateReq_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _RoleCreateAck_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _RoleDeleteReq_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _RoleDeleteAck_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _RoleLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _RoleLoginAck_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _RoleLogoutReq_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _RoleLogoutAck_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _RoleDisconnectReq_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _RoleDisconnectAck_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _EnterRoleDataReq_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _EnterRoleDataAck_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CreateNewSceneReq_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CreateNewSceneAck_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _TransRoleDataReq_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _TransRoleDataAck_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CheckVersionReq_default_instance_.DefaultConstruct();
  _CheckVersionAck_default_instance_.DefaultConstruct();
  _AccountRegReq_default_instance_.DefaultConstruct();
  _AccountRegAck_default_instance_.DefaultConstruct();
  _AccountLoginReq_default_instance_.DefaultConstruct();
  _AccountLoginAck_default_instance_.DefaultConstruct();
  _ClientServerListReq_default_instance_.DefaultConstruct();
  _ClientServerNode_default_instance_.DefaultConstruct();
  _ClientServerListAck_default_instance_.DefaultConstruct();
  _RegToLoginSvrReq_default_instance_.DefaultConstruct();
  _RegToLoginSvrAck_default_instance_.DefaultConstruct();
  _SelectServerReq_default_instance_.DefaultConstruct();
  _SelectServerAck_default_instance_.DefaultConstruct();
  _RoleListNode_default_instance_.DefaultConstruct();
  _RoleListReq_default_instance_.DefaultConstruct();
  _RoleListAck_default_instance_.DefaultConstruct();
  _RoleCreateReq_default_instance_.DefaultConstruct();
  _RoleCreateAck_default_instance_.DefaultConstruct();
  _RoleDeleteReq_default_instance_.DefaultConstruct();
  _RoleDeleteAck_default_instance_.DefaultConstruct();
  _RoleLoginReq_default_instance_.DefaultConstruct();
  _RoleLoginAck_default_instance_.DefaultConstruct();
  _RoleLogoutReq_default_instance_.DefaultConstruct();
  _RoleLogoutAck_default_instance_.DefaultConstruct();
  _RoleDisconnectReq_default_instance_.DefaultConstruct();
  _RoleDisconnectAck_default_instance_.DefaultConstruct();
  _EnterRoleDataReq_default_instance_.DefaultConstruct();
  _EnterRoleDataAck_default_instance_.DefaultConstruct();
  _CreateNewSceneReq_default_instance_.DefaultConstruct();
  _CreateNewSceneAck_default_instance_.DefaultConstruct();
  _TransRoleDataReq_default_instance_.DefaultConstruct();
  _TransRoleDataAck_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017Msg_Login.proto\"M\n\017CheckVersionReq\022\024\n\014"
      "ClientVerion\030\001 \001(\005\022\023\n\013PackageName\030\002 \001(\t\022"
      "\017\n\007Channel\030\003 \001(\005\"M\n\017CheckVersionAck\022\017\n\007R"
      "etCode\030\001 \001(\005\022\024\n\014ClientVerion\030\002 \001(\005\022\023\n\013Pa"
      "ckageName\030\003 \001(\t\"G\n\rAccountRegReq\022\023\n\013Acco"
      "untName\030\001 \001(\t\022\020\n\010Password\030\002 \001(\t\022\017\n\007Chann"
      "el\030\003 \001(\005\"3\n\rAccountRegAck\022\017\n\007RetCode\030\001 \001"
      "(\005\022\021\n\tAccountID\030\002 \001(\003\"8\n\017AccountLoginReq"
      "\022\023\n\013AccountName\030\001 \001(\t\022\020\n\010Password\030\002 \001(\t\""
      "H\n\017AccountLoginAck\022\017\n\007RetCode\030\001 \001(\005\022\021\n\tA"
      "ccountID\030\002 \001(\003\022\021\n\tLastSvrID\030\003 \001(\005\"b\n\023Cli"
      "entServerListReq\022\021\n\tAccountID\030\001 \001(\003\022\017\n\007C"
      "hannel\030\002 \001(\005\022\020\n\010PackName\030\003 \001(\t\022\025\n\rClient"
      "Version\030\004 \001(\005\"m\n\020ClientServerNode\022\r\n\005Svr"
      "ID\030\001 \001(\005\022\017\n\007SvrName\030\002 \001(\t\022\020\n\010SvrState\030\003 "
      "\001(\r\022\022\n\nSvrDefault\030\004 \001(\r\022\023\n\013SvrOpenTime\030\005"
      " \001(\005\"J\n\023ClientServerListAck\022\017\n\007RetCode\030\001"
      " \001(\005\022\"\n\007SvrNode\030\002 \003(\0132\021.ClientServerNode"
      "\"8\n\020RegToLoginSvrReq\022\020\n\010ServerID\030\001 \001(\005\022\022"
      "\n\nServerName\030\002 \001(\t\"#\n\020RegToLoginSvrAck\022\017"
      "\n\007RetCode\030\001 \001(\005\"#\n\017SelectServerReq\022\020\n\010Se"
      "rverID\030\001 \001(\005\"]\n\017SelectServerAck\022\017\n\007RetCo"
      "de\030\001 \001(\005\022\022\n\nServerAddr\030\002 \001(\t\022\022\n\nServerPo"
      "rt\030\003 \001(\005\022\021\n\tLoginCode\030\004 \001(\005\"i\n\014RoleListN"
      "ode\022\r\n\005SvrID\030\001 \001(\005\022\017\n\007SvrName\030\002 \001(\t\022\020\n\010S"
      "vrState\030\003 \001(\r\022\022\n\nSvrDefault\030\004 \001(\r\022\023\n\013Svr"
      "OpenTime\030\005 \001(\005\"3\n\013RoleListReq\022\021\n\tAccount"
      "ID\030\001 \001(\003\022\021\n\tLoginCode\030\002 \001(\005\"\?\n\013RoleListA"
      "ck\022\017\n\007RetCode\030\001 \001(\005\022\037\n\010RoleNode\030\002 \003(\0132\r."
      "RoleListNode\"B\n\rRoleCreateReq\022\021\n\tAccount"
      "ID\030\001 \001(\003\022\014\n\004Name\030\002 \001(\t\022\020\n\010RoleType\030\003 \001(\005"
      "\" \n\rRoleCreateAck\022\017\n\007RetCode\030\001 \001(\005\"2\n\rRo"
      "leDeleteReq\022\021\n\tAccountID\030\001 \001(\003\022\016\n\006RoleID"
      "\030\002 \001(\003\" \n\rRoleDeleteAck\022\017\n\007RetCode\030\001 \001(\005"
      "\"D\n\014RoleLoginReq\022\021\n\tAccountID\030\001 \001(\003\022\016\n\006R"
      "oleID\030\002 \001(\003\022\021\n\tLoginCode\030\003 \001(\003\"2\n\014RoleLo"
      "ginAck\022\017\n\007RetCode\030\001 \001(\005\022\021\n\tAccountID\030\002 \001"
      "(\003\"2\n\rRoleLogoutReq\022\021\n\tAccountID\030\001 \001(\003\022\016"
      "\n\006RoleID\030\002 \001(\003\" \n\rRoleLogoutAck\022\017\n\007RetCo"
      "de\030\001 \001(\005\"#\n\021RoleDisconnectReq\022\016\n\006RoleID\030"
      "\002 \001(\003\"$\n\021RoleDisconnectAck\022\017\n\007RetCode\030\001 "
      "\001(\005\"4\n\020EnterRoleDataReq\022\016\n\006RoleID\030\001 \001(\003\022"
      "\020\n\010RoleName\030\002 \001(\t\"#\n\020EnterRoleDataAck\022\017\n"
      "\007RetCode\030\001 \001(\005\"8\n\021CreateNewSceneReq\022\021\n\tS"
      "ceneType\030\001 \001(\005\022\020\n\010CopyType\030\002 \001(\005\"8\n\021Crea"
      "teNewSceneAck\022\021\n\tSceneType\030\001 \001(\005\022\020\n\010Copy"
      "Type\030\002 \001(\005\"4\n\020TransRoleDataReq\022\016\n\006RoleID"
      "\030\001 \001(\003\022\020\n\010RoleName\030\002 \001(\t\"#\n\020TransRoleDat"
      "aAck\022\017\n\007RetCode\030\001 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1949);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_Login.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Msg_5fLogin_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVersionReq::kClientVerionFieldNumber;
const int CheckVersionReq::kPackageNameFieldNumber;
const int CheckVersionReq::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVersionReq::CheckVersionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckVersionReq)
}
CheckVersionReq::CheckVersionReq(const CheckVersionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.packagename().size() > 0) {
    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  ::memcpy(&clientverion_, &from.clientverion_,
    reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&clientverion_) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:CheckVersionReq)
}

void CheckVersionReq::SharedCtor() {
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientverion_, 0, reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&clientverion_) + sizeof(channel_));
  _cached_size_ = 0;
}

CheckVersionReq::~CheckVersionReq() {
  // @@protoc_insertion_point(destructor:CheckVersionReq)
  SharedDtor();
}

void CheckVersionReq::SharedDtor() {
  packagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckVersionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckVersionReq& CheckVersionReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckVersionReq* CheckVersionReq::New(::google::protobuf::Arena* arena) const {
  CheckVersionReq* n = new CheckVersionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckVersionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckVersionReq)
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clientverion_, 0, reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&clientverion_) + sizeof(channel_));
}

bool CheckVersionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckVersionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ClientVerion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientverion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PackageName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CheckVersionReq.PackageName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckVersionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckVersionReq)
  return false;
#undef DO_
}

void CheckVersionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ClientVerion = 1;
  if (this->clientverion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clientverion(), output);
  }

  // string PackageName = 2;
  if (this->packagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionReq.PackageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->packagename(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // @@protoc_insertion_point(serialize_end:CheckVersionReq)
}

::google::protobuf::uint8* CheckVersionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CheckVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ClientVerion = 1;
  if (this->clientverion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clientverion(), target);
  }

  // string PackageName = 2;
  if (this->packagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionReq.PackageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->packagename(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CheckVersionReq)
  return target;
}

size_t CheckVersionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CheckVersionReq)
  size_t total_size = 0;

  // string PackageName = 2;
  if (this->packagename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packagename());
  }

  // int32 ClientVerion = 1;
  if (this->clientverion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientverion());
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckVersionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVersionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckVersionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckVersionReq)
    MergeFrom(*source);
  }
}

void CheckVersionReq::MergeFrom(const CheckVersionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.packagename().size() > 0) {

    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  if (from.clientverion() != 0) {
    set_clientverion(from.clientverion());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void CheckVersionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionReq::CopyFrom(const CheckVersionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionReq::IsInitialized() const {
  return true;
}

void CheckVersionReq::Swap(CheckVersionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVersionReq::InternalSwap(CheckVersionReq* other) {
  packagename_.Swap(&other->packagename_);
  std::swap(clientverion_, other->clientverion_);
  std::swap(channel_, other->channel_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckVersionReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckVersionReq

// int32 ClientVerion = 1;
void CheckVersionReq::clear_clientverion() {
  clientverion_ = 0;
}
::google::protobuf::int32 CheckVersionReq::clientverion() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.ClientVerion)
  return clientverion_;
}
void CheckVersionReq::set_clientverion(::google::protobuf::int32 value) {
  
  clientverion_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionReq.ClientVerion)
}

// string PackageName = 2;
void CheckVersionReq::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckVersionReq::packagename() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.PackageName)
  return packagename_.GetNoArena();
}
void CheckVersionReq::set_packagename(const ::std::string& value) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionReq.PackageName)
}
#if LANG_CXX11
void CheckVersionReq::set_packagename(::std::string&& value) {
  
  packagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CheckVersionReq.PackageName)
}
#endif
void CheckVersionReq::set_packagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionReq.PackageName)
}
void CheckVersionReq::set_packagename(const char* value, size_t size) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionReq.PackageName)
}
::std::string* CheckVersionReq::mutable_packagename() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionReq.PackageName)
  return packagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckVersionReq::release_packagename() {
  // @@protoc_insertion_point(field_release:CheckVersionReq.PackageName)
  
  return packagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckVersionReq::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    
  } else {
    
  }
  packagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionReq.PackageName)
}

// int32 Channel = 3;
void CheckVersionReq::clear_channel() {
  channel_ = 0;
}
::google::protobuf::int32 CheckVersionReq::channel() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.Channel)
  return channel_;
}
void CheckVersionReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionReq.Channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVersionAck::kRetCodeFieldNumber;
const int CheckVersionAck::kClientVerionFieldNumber;
const int CheckVersionAck::kPackageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVersionAck::CheckVersionAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckVersionAck)
}
CheckVersionAck::CheckVersionAck(const CheckVersionAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.packagename().size() > 0) {
    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    reinterpret_cast<char*>(&clientverion_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(clientverion_));
  // @@protoc_insertion_point(copy_constructor:CheckVersionAck)
}

void CheckVersionAck::SharedCtor() {
  packagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&clientverion_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(clientverion_));
  _cached_size_ = 0;
}

CheckVersionAck::~CheckVersionAck() {
  // @@protoc_insertion_point(destructor:CheckVersionAck)
  SharedDtor();
}

void CheckVersionAck::SharedDtor() {
  packagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckVersionAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckVersionAck& CheckVersionAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckVersionAck* CheckVersionAck::New(::google::protobuf::Arena* arena) const {
  CheckVersionAck* n = new CheckVersionAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckVersionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckVersionAck)
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&clientverion_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(clientverion_));
}

bool CheckVersionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckVersionAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ClientVerion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientverion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PackageName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packagename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->packagename().data(), this->packagename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CheckVersionAck.PackageName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckVersionAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckVersionAck)
  return false;
#undef DO_
}

void CheckVersionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckVersionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // int32 ClientVerion = 2;
  if (this->clientverion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clientverion(), output);
  }

  // string PackageName = 3;
  if (this->packagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionAck.PackageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->packagename(), output);
  }

  // @@protoc_insertion_point(serialize_end:CheckVersionAck)
}

::google::protobuf::uint8* CheckVersionAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CheckVersionAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // int32 ClientVerion = 2;
  if (this->clientverion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clientverion(), target);
  }

  // string PackageName = 3;
  if (this->packagename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packagename().data(), this->packagename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionAck.PackageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->packagename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CheckVersionAck)
  return target;
}

size_t CheckVersionAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CheckVersionAck)
  size_t total_size = 0;

  // string PackageName = 3;
  if (this->packagename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packagename());
  }

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // int32 ClientVerion = 2;
  if (this->clientverion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientverion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckVersionAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckVersionAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVersionAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckVersionAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckVersionAck)
    MergeFrom(*source);
  }
}

void CheckVersionAck::MergeFrom(const CheckVersionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckVersionAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.packagename().size() > 0) {

    packagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packagename_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.clientverion() != 0) {
    set_clientverion(from.clientverion());
  }
}

void CheckVersionAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckVersionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionAck::CopyFrom(const CheckVersionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckVersionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionAck::IsInitialized() const {
  return true;
}

void CheckVersionAck::Swap(CheckVersionAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVersionAck::InternalSwap(CheckVersionAck* other) {
  packagename_.Swap(&other->packagename_);
  std::swap(retcode_, other->retcode_);
  std::swap(clientverion_, other->clientverion_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckVersionAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckVersionAck

// int32 RetCode = 1;
void CheckVersionAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 CheckVersionAck::retcode() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.RetCode)
  return retcode_;
}
void CheckVersionAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionAck.RetCode)
}

// int32 ClientVerion = 2;
void CheckVersionAck::clear_clientverion() {
  clientverion_ = 0;
}
::google::protobuf::int32 CheckVersionAck::clientverion() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.ClientVerion)
  return clientverion_;
}
void CheckVersionAck::set_clientverion(::google::protobuf::int32 value) {
  
  clientverion_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionAck.ClientVerion)
}

// string PackageName = 3;
void CheckVersionAck::clear_packagename() {
  packagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckVersionAck::packagename() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.PackageName)
  return packagename_.GetNoArena();
}
void CheckVersionAck::set_packagename(const ::std::string& value) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionAck.PackageName)
}
#if LANG_CXX11
void CheckVersionAck::set_packagename(::std::string&& value) {
  
  packagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CheckVersionAck.PackageName)
}
#endif
void CheckVersionAck::set_packagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionAck.PackageName)
}
void CheckVersionAck::set_packagename(const char* value, size_t size) {
  
  packagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionAck.PackageName)
}
::std::string* CheckVersionAck::mutable_packagename() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionAck.PackageName)
  return packagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckVersionAck::release_packagename() {
  // @@protoc_insertion_point(field_release:CheckVersionAck.PackageName)
  
  return packagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckVersionAck::set_allocated_packagename(::std::string* packagename) {
  if (packagename != NULL) {
    
  } else {
    
  }
  packagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packagename);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionAck.PackageName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountRegReq::kAccountNameFieldNumber;
const int AccountRegReq::kPasswordFieldNumber;
const int AccountRegReq::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountRegReq::AccountRegReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountRegReq)
}
AccountRegReq::AccountRegReq(const AccountRegReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:AccountRegReq)
}

void AccountRegReq::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  _cached_size_ = 0;
}

AccountRegReq::~AccountRegReq() {
  // @@protoc_insertion_point(destructor:AccountRegReq)
  SharedDtor();
}

void AccountRegReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountRegReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountRegReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountRegReq& AccountRegReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountRegReq* AccountRegReq::New(::google::protobuf::Arena* arena) const {
  AccountRegReq* n = new AccountRegReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountRegReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountRegReq)
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
}

bool AccountRegReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountRegReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AccountName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountRegReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountRegReq.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountRegReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountRegReq)
  return false;
#undef DO_
}

void AccountRegReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountRegReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountRegReq)
}

::google::protobuf::uint8* AccountRegReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountRegReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountRegReq)
  return target;
}

size_t AccountRegReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountRegReq)
  size_t total_size = 0;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountRegReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountRegReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountRegReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountRegReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountRegReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountRegReq)
    MergeFrom(*source);
  }
}

void AccountRegReq::MergeFrom(const AccountRegReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountRegReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void AccountRegReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountRegReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountRegReq::CopyFrom(const AccountRegReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountRegReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountRegReq::IsInitialized() const {
  return true;
}

void AccountRegReq::Swap(AccountRegReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountRegReq::InternalSwap(AccountRegReq* other) {
  accountname_.Swap(&other->accountname_);
  password_.Swap(&other->password_);
  std::swap(channel_, other->channel_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountRegReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountRegReq

// string AccountName = 1;
void AccountRegReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountRegReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.AccountName)
  return accountname_.GetNoArena();
}
void AccountRegReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.AccountName)
}
#if LANG_CXX11
void AccountRegReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.AccountName)
}
#endif
void AccountRegReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.AccountName)
}
void AccountRegReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.AccountName)
}
::std::string* AccountRegReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountRegReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountRegReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountRegReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.AccountName)
}

// string Password = 2;
void AccountRegReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountRegReq::password() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Password)
  return password_.GetNoArena();
}
void AccountRegReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.Password)
}
#if LANG_CXX11
void AccountRegReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.Password)
}
#endif
void AccountRegReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.Password)
}
void AccountRegReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.Password)
}
::std::string* AccountRegReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountRegReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountRegReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountRegReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.Password)
}

// int32 Channel = 3;
void AccountRegReq::clear_channel() {
  channel_ = 0;
}
::google::protobuf::int32 AccountRegReq::channel() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Channel)
  return channel_;
}
void AccountRegReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AccountRegReq.Channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountRegAck::kRetCodeFieldNumber;
const int AccountRegAck::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountRegAck::AccountRegAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountRegAck)
}
AccountRegAck::AccountRegAck(const AccountRegAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:AccountRegAck)
}

void AccountRegAck::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
  _cached_size_ = 0;
}

AccountRegAck::~AccountRegAck() {
  // @@protoc_insertion_point(destructor:AccountRegAck)
  SharedDtor();
}

void AccountRegAck::SharedDtor() {
}

void AccountRegAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountRegAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountRegAck& AccountRegAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountRegAck* AccountRegAck::New(::google::protobuf::Arena* arena) const {
  AccountRegAck* n = new AccountRegAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountRegAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountRegAck)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
}

bool AccountRegAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountRegAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountRegAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountRegAck)
  return false;
#undef DO_
}

void AccountRegAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountRegAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->accountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountRegAck)
}

::google::protobuf::uint8* AccountRegAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountRegAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->accountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountRegAck)
  return target;
}

size_t AccountRegAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountRegAck)
  size_t total_size = 0;

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountRegAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountRegAck)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountRegAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountRegAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountRegAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountRegAck)
    MergeFrom(*source);
  }
}

void AccountRegAck::MergeFrom(const AccountRegAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountRegAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AccountRegAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountRegAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountRegAck::CopyFrom(const AccountRegAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountRegAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountRegAck::IsInitialized() const {
  return true;
}

void AccountRegAck::Swap(AccountRegAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountRegAck::InternalSwap(AccountRegAck* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountRegAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountRegAck

// int32 RetCode = 1;
void AccountRegAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AccountRegAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.RetCode)
  return retcode_;
}
void AccountRegAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.RetCode)
}

// int64 AccountID = 2;
void AccountRegAck::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AccountRegAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.AccountID)
  return accountid_;
}
void AccountRegAck::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.AccountID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginReq::kAccountNameFieldNumber;
const int AccountLoginReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginReq::AccountLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLoginReq)
}
AccountLoginReq::AccountLoginReq(const AccountLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:AccountLoginReq)
}

void AccountLoginReq::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AccountLoginReq::~AccountLoginReq() {
  // @@protoc_insertion_point(destructor:AccountLoginReq)
  SharedDtor();
}

void AccountLoginReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLoginReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginReq& AccountLoginReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountLoginReq* AccountLoginReq::New(::google::protobuf::Arena* arena) const {
  AccountLoginReq* n = new AccountLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLoginReq)
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AccountLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AccountName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginReq.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLoginReq)
  return false;
#undef DO_
}

void AccountLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountLoginReq)
}

::google::protobuf::uint8* AccountLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountLoginReq)
  return target;
}

size_t AccountLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLoginReq)
  size_t total_size = 0;

  // string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLoginReq)
    MergeFrom(*source);
  }
}

void AccountLoginReq::MergeFrom(const AccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void AccountLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginReq::CopyFrom(const AccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginReq::IsInitialized() const {
  return true;
}

void AccountLoginReq::Swap(AccountLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLoginReq::InternalSwap(AccountLoginReq* other) {
  accountname_.Swap(&other->accountname_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLoginReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountLoginReq

// string AccountName = 1;
void AccountLoginReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountLoginReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.AccountName)
  return accountname_.GetNoArena();
}
void AccountLoginReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.AccountName)
}
#if LANG_CXX11
void AccountLoginReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.AccountName)
}
#endif
void AccountLoginReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.AccountName)
}
void AccountLoginReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.AccountName)
}
::std::string* AccountLoginReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountLoginReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountLoginReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.AccountName)
}

// string Password = 2;
void AccountLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountLoginReq::password() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.Password)
  return password_.GetNoArena();
}
void AccountLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.Password)
}
#if LANG_CXX11
void AccountLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.Password)
}
#endif
void AccountLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.Password)
}
void AccountLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.Password)
}
::std::string* AccountLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.Password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginAck::kRetCodeFieldNumber;
const int AccountLoginAck::kAccountIDFieldNumber;
const int AccountLoginAck::kLastSvrIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginAck::AccountLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLoginAck)
}
AccountLoginAck::AccountLoginAck(const AccountLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&lastsvrid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(lastsvrid_));
  // @@protoc_insertion_point(copy_constructor:AccountLoginAck)
}

void AccountLoginAck::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&lastsvrid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(lastsvrid_));
  _cached_size_ = 0;
}

AccountLoginAck::~AccountLoginAck() {
  // @@protoc_insertion_point(destructor:AccountLoginAck)
  SharedDtor();
}

void AccountLoginAck::SharedDtor() {
}

void AccountLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLoginAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginAck& AccountLoginAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountLoginAck* AccountLoginAck::New(::google::protobuf::Arena* arena) const {
  AccountLoginAck* n = new AccountLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLoginAck)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&lastsvrid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(lastsvrid_));
}

bool AccountLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LastSvrID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastsvrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLoginAck)
  return false;
#undef DO_
}

void AccountLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->accountid(), output);
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lastsvrid(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountLoginAck)
}

::google::protobuf::uint8* AccountLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AccountLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->accountid(), target);
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lastsvrid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountLoginAck)
  return target;
}

size_t AccountLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLoginAck)
  size_t total_size = 0;

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lastsvrid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLoginAck)
    MergeFrom(*source);
  }
}

void AccountLoginAck::MergeFrom(const AccountLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.lastsvrid() != 0) {
    set_lastsvrid(from.lastsvrid());
  }
}

void AccountLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginAck::CopyFrom(const AccountLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginAck::IsInitialized() const {
  return true;
}

void AccountLoginAck::Swap(AccountLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLoginAck::InternalSwap(AccountLoginAck* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(retcode_, other->retcode_);
  std::swap(lastsvrid_, other->lastsvrid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLoginAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountLoginAck

// int32 RetCode = 1;
void AccountLoginAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AccountLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.RetCode)
  return retcode_;
}
void AccountLoginAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.RetCode)
}

// int64 AccountID = 2;
void AccountLoginAck::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AccountLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.AccountID)
  return accountid_;
}
void AccountLoginAck::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.AccountID)
}

// int32 LastSvrID = 3;
void AccountLoginAck::clear_lastsvrid() {
  lastsvrid_ = 0;
}
::google::protobuf::int32 AccountLoginAck::lastsvrid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.LastSvrID)
  return lastsvrid_;
}
void AccountLoginAck::set_lastsvrid(::google::protobuf::int32 value) {
  
  lastsvrid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.LastSvrID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerListReq::kAccountIDFieldNumber;
const int ClientServerListReq::kChannelFieldNumber;
const int ClientServerListReq::kPackNameFieldNumber;
const int ClientServerListReq::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerListReq::ClientServerListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerListReq)
}
ClientServerListReq::ClientServerListReq(const ClientServerListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  packname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.packname().size() > 0) {
    packname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packname_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&clientversion_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(clientversion_));
  // @@protoc_insertion_point(copy_constructor:ClientServerListReq)
}

void ClientServerListReq::SharedCtor() {
  packname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&clientversion_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(clientversion_));
  _cached_size_ = 0;
}

ClientServerListReq::~ClientServerListReq() {
  // @@protoc_insertion_point(destructor:ClientServerListReq)
  SharedDtor();
}

void ClientServerListReq::SharedDtor() {
  packname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientServerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerListReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerListReq& ClientServerListReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientServerListReq* ClientServerListReq::New(::google::protobuf::Arena* arena) const {
  ClientServerListReq* n = new ClientServerListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerListReq)
  packname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&clientversion_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(clientversion_));
}

bool ClientServerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PackName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->packname().data(), this->packname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientServerListReq.PackName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ClientVersion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerListReq)
  return false;
#undef DO_
}

void ClientServerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // string PackName = 3;
  if (this->packname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packname().data(), this->packname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerListReq.PackName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->packname(), output);
  }

  // int32 ClientVersion = 4;
  if (this->clientversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->clientversion(), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerListReq)
}

::google::protobuf::uint8* ClientServerListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // string PackName = 3;
  if (this->packname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->packname().data(), this->packname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerListReq.PackName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->packname(), target);
  }

  // int32 ClientVersion = 4;
  if (this->clientversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->clientversion(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerListReq)
  return target;
}

size_t ClientServerListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerListReq)
  size_t total_size = 0;

  // string PackName = 3;
  if (this->packname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packname());
  }

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int32 Channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // int32 ClientVersion = 4;
  if (this->clientversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerListReq)
    MergeFrom(*source);
  }
}

void ClientServerListReq::MergeFrom(const ClientServerListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.packname().size() > 0) {

    packname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packname_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.clientversion() != 0) {
    set_clientversion(from.clientversion());
  }
}

void ClientServerListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerListReq::CopyFrom(const ClientServerListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerListReq::IsInitialized() const {
  return true;
}

void ClientServerListReq::Swap(ClientServerListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerListReq::InternalSwap(ClientServerListReq* other) {
  packname_.Swap(&other->packname_);
  std::swap(accountid_, other->accountid_);
  std::swap(channel_, other->channel_);
  std::swap(clientversion_, other->clientversion_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerListReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerListReq

// int64 AccountID = 1;
void ClientServerListReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ClientServerListReq::accountid() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.AccountID)
  return accountid_;
}
void ClientServerListReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.AccountID)
}

// int32 Channel = 2;
void ClientServerListReq::clear_channel() {
  channel_ = 0;
}
::google::protobuf::int32 ClientServerListReq::channel() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.Channel)
  return channel_;
}
void ClientServerListReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.Channel)
}

// string PackName = 3;
void ClientServerListReq::clear_packname() {
  packname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientServerListReq::packname() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.PackName)
  return packname_.GetNoArena();
}
void ClientServerListReq::set_packname(const ::std::string& value) {
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerListReq.PackName)
}
#if LANG_CXX11
void ClientServerListReq::set_packname(::std::string&& value) {
  
  packname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientServerListReq.PackName)
}
#endif
void ClientServerListReq::set_packname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerListReq.PackName)
}
void ClientServerListReq::set_packname(const char* value, size_t size) {
  
  packname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerListReq.PackName)
}
::std::string* ClientServerListReq::mutable_packname() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerListReq.PackName)
  return packname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientServerListReq::release_packname() {
  // @@protoc_insertion_point(field_release:ClientServerListReq.PackName)
  
  return packname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientServerListReq::set_allocated_packname(::std::string* packname) {
  if (packname != NULL) {
    
  } else {
    
  }
  packname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packname);
  // @@protoc_insertion_point(field_set_allocated:ClientServerListReq.PackName)
}

// int32 ClientVersion = 4;
void ClientServerListReq::clear_clientversion() {
  clientversion_ = 0;
}
::google::protobuf::int32 ClientServerListReq::clientversion() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.ClientVersion)
  return clientversion_;
}
void ClientServerListReq::set_clientversion(::google::protobuf::int32 value) {
  
  clientversion_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.ClientVersion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerNode::kSvrIDFieldNumber;
const int ClientServerNode::kSvrNameFieldNumber;
const int ClientServerNode::kSvrStateFieldNumber;
const int ClientServerNode::kSvrDefaultFieldNumber;
const int ClientServerNode::kSvrOpenTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerNode::ClientServerNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerNode)
}
ClientServerNode::ClientServerNode(const ClientServerNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.svrname().size() > 0) {
    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  ::memcpy(&svrid_, &from.svrid_,
    reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
  // @@protoc_insertion_point(copy_constructor:ClientServerNode)
}

void ClientServerNode::SharedCtor() {
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&svrid_, 0, reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
  _cached_size_ = 0;
}

ClientServerNode::~ClientServerNode() {
  // @@protoc_insertion_point(destructor:ClientServerNode)
  SharedDtor();
}

void ClientServerNode::SharedDtor() {
  svrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientServerNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerNode::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerNode& ClientServerNode::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientServerNode* ClientServerNode::New(::google::protobuf::Arena* arena) const {
  ClientServerNode* n = new ClientServerNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerNode::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerNode)
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&svrid_, 0, reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
}

bool ClientServerNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 SvrID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SvrName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_svrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->svrname().data(), this->svrname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientServerNode.SvrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SvrState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SvrDefault = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrdefault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SvrOpenTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svropentime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerNode)
  return false;
#undef DO_
}

void ClientServerNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->svrid(), output);
  }

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), this->svrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerNode.SvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->svrname(), output);
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->svrstate(), output);
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->svrdefault(), output);
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->svropentime(), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerNode)
}

::google::protobuf::uint8* ClientServerNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->svrid(), target);
  }

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), this->svrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerNode.SvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->svrname(), target);
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->svrstate(), target);
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->svrdefault(), target);
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->svropentime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerNode)
  return target;
}

size_t ClientServerNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerNode)
  size_t total_size = 0;

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->svrname());
  }

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrid());
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrstate());
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrdefault());
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svropentime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerNode)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerNode)
    MergeFrom(*source);
  }
}

void ClientServerNode::MergeFrom(const ClientServerNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.svrname().size() > 0) {

    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  if (from.svrid() != 0) {
    set_svrid(from.svrid());
  }
  if (from.svrstate() != 0) {
    set_svrstate(from.svrstate());
  }
  if (from.svrdefault() != 0) {
    set_svrdefault(from.svrdefault());
  }
  if (from.svropentime() != 0) {
    set_svropentime(from.svropentime());
  }
}

void ClientServerNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerNode::CopyFrom(const ClientServerNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerNode::IsInitialized() const {
  return true;
}

void ClientServerNode::Swap(ClientServerNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerNode::InternalSwap(ClientServerNode* other) {
  svrname_.Swap(&other->svrname_);
  std::swap(svrid_, other->svrid_);
  std::swap(svrstate_, other->svrstate_);
  std::swap(svrdefault_, other->svrdefault_);
  std::swap(svropentime_, other->svropentime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerNode::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerNode

// int32 SvrID = 1;
void ClientServerNode::clear_svrid() {
  svrid_ = 0;
}
::google::protobuf::int32 ClientServerNode::svrid() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrID)
  return svrid_;
}
void ClientServerNode::set_svrid(::google::protobuf::int32 value) {
  
  svrid_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrID)
}

// string SvrName = 2;
void ClientServerNode::clear_svrname() {
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientServerNode::svrname() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrName)
  return svrname_.GetNoArena();
}
void ClientServerNode::set_svrname(const ::std::string& value) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrName)
}
#if LANG_CXX11
void ClientServerNode::set_svrname(::std::string&& value) {
  
  svrname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientServerNode.SvrName)
}
#endif
void ClientServerNode::set_svrname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerNode.SvrName)
}
void ClientServerNode::set_svrname(const char* value, size_t size) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerNode.SvrName)
}
::std::string* ClientServerNode::mutable_svrname() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerNode.SvrName)
  return svrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientServerNode::release_svrname() {
  // @@protoc_insertion_point(field_release:ClientServerNode.SvrName)
  
  return svrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientServerNode::set_allocated_svrname(::std::string* svrname) {
  if (svrname != NULL) {
    
  } else {
    
  }
  svrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svrname);
  // @@protoc_insertion_point(field_set_allocated:ClientServerNode.SvrName)
}

// uint32 SvrState = 3;
void ClientServerNode::clear_svrstate() {
  svrstate_ = 0u;
}
::google::protobuf::uint32 ClientServerNode::svrstate() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrState)
  return svrstate_;
}
void ClientServerNode::set_svrstate(::google::protobuf::uint32 value) {
  
  svrstate_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrState)
}

// uint32 SvrDefault = 4;
void ClientServerNode::clear_svrdefault() {
  svrdefault_ = 0u;
}
::google::protobuf::uint32 ClientServerNode::svrdefault() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrDefault)
  return svrdefault_;
}
void ClientServerNode::set_svrdefault(::google::protobuf::uint32 value) {
  
  svrdefault_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrDefault)
}

// int32 SvrOpenTime = 5;
void ClientServerNode::clear_svropentime() {
  svropentime_ = 0;
}
::google::protobuf::int32 ClientServerNode::svropentime() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrOpenTime)
  return svropentime_;
}
void ClientServerNode::set_svropentime(::google::protobuf::int32 value) {
  
  svropentime_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrOpenTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerListAck::kRetCodeFieldNumber;
const int ClientServerListAck::kSvrNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerListAck::ClientServerListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerListAck)
}
ClientServerListAck::ClientServerListAck(const ClientServerListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      svrnode_(from.svrnode_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:ClientServerListAck)
}

void ClientServerListAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ClientServerListAck::~ClientServerListAck() {
  // @@protoc_insertion_point(destructor:ClientServerListAck)
  SharedDtor();
}

void ClientServerListAck::SharedDtor() {
}

void ClientServerListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerListAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientServerListAck& ClientServerListAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientServerListAck* ClientServerListAck::New(::google::protobuf::Arena* arena) const {
  ClientServerListAck* n = new ClientServerListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerListAck)
  svrnode_.Clear();
  retcode_ = 0;
}

bool ClientServerListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ClientServerNode SvrNode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_svrnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerListAck)
  return false;
#undef DO_
}

void ClientServerListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .ClientServerNode SvrNode = 2;
  for (unsigned int i = 0, n = this->svrnode_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->svrnode(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerListAck)
}

::google::protobuf::uint8* ClientServerListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .ClientServerNode SvrNode = 2;
  for (unsigned int i = 0, n = this->svrnode_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->svrnode(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerListAck)
  return target;
}

size_t ClientServerListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerListAck)
  size_t total_size = 0;

  // repeated .ClientServerNode SvrNode = 2;
  {
    unsigned int count = this->svrnode_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->svrnode(i));
    }
  }

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientServerListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerListAck)
    MergeFrom(*source);
  }
}

void ClientServerListAck::MergeFrom(const ClientServerListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  svrnode_.MergeFrom(from.svrnode_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ClientServerListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerListAck::CopyFrom(const ClientServerListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerListAck::IsInitialized() const {
  return true;
}

void ClientServerListAck::Swap(ClientServerListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerListAck::InternalSwap(ClientServerListAck* other) {
  svrnode_.InternalSwap(&other->svrnode_);
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerListAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerListAck

// int32 RetCode = 1;
void ClientServerListAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ClientServerListAck::retcode() const {
  // @@protoc_insertion_point(field_get:ClientServerListAck.RetCode)
  return retcode_;
}
void ClientServerListAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListAck.RetCode)
}

// repeated .ClientServerNode SvrNode = 2;
int ClientServerListAck::svrnode_size() const {
  return svrnode_.size();
}
void ClientServerListAck::clear_svrnode() {
  svrnode_.Clear();
}
const ::ClientServerNode& ClientServerListAck::svrnode(int index) const {
  // @@protoc_insertion_point(field_get:ClientServerListAck.SvrNode)
  return svrnode_.Get(index);
}
::ClientServerNode* ClientServerListAck::mutable_svrnode(int index) {
  // @@protoc_insertion_point(field_mutable:ClientServerListAck.SvrNode)
  return svrnode_.Mutable(index);
}
::ClientServerNode* ClientServerListAck::add_svrnode() {
  // @@protoc_insertion_point(field_add:ClientServerListAck.SvrNode)
  return svrnode_.Add();
}
::google::protobuf::RepeatedPtrField< ::ClientServerNode >*
ClientServerListAck::mutable_svrnode() {
  // @@protoc_insertion_point(field_mutable_list:ClientServerListAck.SvrNode)
  return &svrnode_;
}
const ::google::protobuf::RepeatedPtrField< ::ClientServerNode >&
ClientServerListAck::svrnode() const {
  // @@protoc_insertion_point(field_list:ClientServerListAck.SvrNode)
  return svrnode_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegToLoginSvrReq::kServerIDFieldNumber;
const int RegToLoginSvrReq::kServerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegToLoginSvrReq::RegToLoginSvrReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegToLoginSvrReq)
}
RegToLoginSvrReq::RegToLoginSvrReq(const RegToLoginSvrReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servername().size() > 0) {
    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:RegToLoginSvrReq)
}

void RegToLoginSvrReq::SharedCtor() {
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = 0;
  _cached_size_ = 0;
}

RegToLoginSvrReq::~RegToLoginSvrReq() {
  // @@protoc_insertion_point(destructor:RegToLoginSvrReq)
  SharedDtor();
}

void RegToLoginSvrReq::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegToLoginSvrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegToLoginSvrReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegToLoginSvrReq& RegToLoginSvrReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegToLoginSvrReq* RegToLoginSvrReq::New(::google::protobuf::Arena* arena) const {
  RegToLoginSvrReq* n = new RegToLoginSvrReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegToLoginSvrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RegToLoginSvrReq)
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = 0;
}

bool RegToLoginSvrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RegToLoginSvrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), this->servername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RegToLoginSvrReq.ServerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RegToLoginSvrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RegToLoginSvrReq)
  return false;
#undef DO_
}

void RegToLoginSvrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RegToLoginSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegToLoginSvrReq.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // @@protoc_insertion_point(serialize_end:RegToLoginSvrReq)
}

::google::protobuf::uint8* RegToLoginSvrReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegToLoginSvrReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RegToLoginSvrReq.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RegToLoginSvrReq)
  return target;
}

size_t RegToLoginSvrReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegToLoginSvrReq)
  size_t total_size = 0;

  // string ServerName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegToLoginSvrReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegToLoginSvrReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RegToLoginSvrReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegToLoginSvrReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegToLoginSvrReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegToLoginSvrReq)
    MergeFrom(*source);
  }
}

void RegToLoginSvrReq::MergeFrom(const RegToLoginSvrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegToLoginSvrReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void RegToLoginSvrReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegToLoginSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegToLoginSvrReq::CopyFrom(const RegToLoginSvrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegToLoginSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegToLoginSvrReq::IsInitialized() const {
  return true;
}

void RegToLoginSvrReq::Swap(RegToLoginSvrReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegToLoginSvrReq::InternalSwap(RegToLoginSvrReq* other) {
  servername_.Swap(&other->servername_);
  std::swap(serverid_, other->serverid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegToLoginSvrReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegToLoginSvrReq

// int32 ServerID = 1;
void RegToLoginSvrReq::clear_serverid() {
  serverid_ = 0;
}
::google::protobuf::int32 RegToLoginSvrReq::serverid() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrReq.ServerID)
  return serverid_;
}
void RegToLoginSvrReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:RegToLoginSvrReq.ServerID)
}

// string ServerName = 2;
void RegToLoginSvrReq::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegToLoginSvrReq::servername() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrReq.ServerName)
  return servername_.GetNoArena();
}
void RegToLoginSvrReq::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RegToLoginSvrReq.ServerName)
}
#if LANG_CXX11
void RegToLoginSvrReq::set_servername(::std::string&& value) {
  
  servername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RegToLoginSvrReq.ServerName)
}
#endif
void RegToLoginSvrReq::set_servername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RegToLoginSvrReq.ServerName)
}
void RegToLoginSvrReq::set_servername(const char* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RegToLoginSvrReq.ServerName)
}
::std::string* RegToLoginSvrReq::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:RegToLoginSvrReq.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegToLoginSvrReq::release_servername() {
  // @@protoc_insertion_point(field_release:RegToLoginSvrReq.ServerName)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegToLoginSvrReq::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:RegToLoginSvrReq.ServerName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegToLoginSvrAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegToLoginSvrAck::RegToLoginSvrAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RegToLoginSvrAck)
}
RegToLoginSvrAck::RegToLoginSvrAck(const RegToLoginSvrAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RegToLoginSvrAck)
}

void RegToLoginSvrAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

RegToLoginSvrAck::~RegToLoginSvrAck() {
  // @@protoc_insertion_point(destructor:RegToLoginSvrAck)
  SharedDtor();
}

void RegToLoginSvrAck::SharedDtor() {
}

void RegToLoginSvrAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegToLoginSvrAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegToLoginSvrAck& RegToLoginSvrAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegToLoginSvrAck* RegToLoginSvrAck::New(::google::protobuf::Arena* arena) const {
  RegToLoginSvrAck* n = new RegToLoginSvrAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegToLoginSvrAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RegToLoginSvrAck)
  retcode_ = 0;
}

bool RegToLoginSvrAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RegToLoginSvrAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RegToLoginSvrAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RegToLoginSvrAck)
  return false;
#undef DO_
}

void RegToLoginSvrAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RegToLoginSvrAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RegToLoginSvrAck)
}

::google::protobuf::uint8* RegToLoginSvrAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RegToLoginSvrAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RegToLoginSvrAck)
  return target;
}

size_t RegToLoginSvrAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RegToLoginSvrAck)
  size_t total_size = 0;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegToLoginSvrAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RegToLoginSvrAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RegToLoginSvrAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegToLoginSvrAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RegToLoginSvrAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RegToLoginSvrAck)
    MergeFrom(*source);
  }
}

void RegToLoginSvrAck::MergeFrom(const RegToLoginSvrAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RegToLoginSvrAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RegToLoginSvrAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RegToLoginSvrAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegToLoginSvrAck::CopyFrom(const RegToLoginSvrAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RegToLoginSvrAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegToLoginSvrAck::IsInitialized() const {
  return true;
}

void RegToLoginSvrAck::Swap(RegToLoginSvrAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegToLoginSvrAck::InternalSwap(RegToLoginSvrAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegToLoginSvrAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegToLoginSvrAck

// int32 RetCode = 1;
void RegToLoginSvrAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RegToLoginSvrAck::retcode() const {
  // @@protoc_insertion_point(field_get:RegToLoginSvrAck.RetCode)
  return retcode_;
}
void RegToLoginSvrAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RegToLoginSvrAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectServerReq::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectServerReq::SelectServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SelectServerReq)
}
SelectServerReq::SelectServerReq(const SelectServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:SelectServerReq)
}

void SelectServerReq::SharedCtor() {
  serverid_ = 0;
  _cached_size_ = 0;
}

SelectServerReq::~SelectServerReq() {
  // @@protoc_insertion_point(destructor:SelectServerReq)
  SharedDtor();
}

void SelectServerReq::SharedDtor() {
}

void SelectServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectServerReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectServerReq& SelectServerReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectServerReq* SelectServerReq::New(::google::protobuf::Arena* arena) const {
  SelectServerReq* n = new SelectServerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SelectServerReq)
  serverid_ = 0;
}

bool SelectServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SelectServerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ServerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SelectServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SelectServerReq)
  return false;
#undef DO_
}

void SelectServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SelectServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:SelectServerReq)
}

::google::protobuf::uint8* SelectServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SelectServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SelectServerReq)
  return target;
}

size_t SelectServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SelectServerReq)
  size_t total_size = 0;

  // int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SelectServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SelectServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SelectServerReq)
    MergeFrom(*source);
  }
}

void SelectServerReq::MergeFrom(const SelectServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SelectServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void SelectServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SelectServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectServerReq::CopyFrom(const SelectServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SelectServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectServerReq::IsInitialized() const {
  return true;
}

void SelectServerReq::Swap(SelectServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectServerReq::InternalSwap(SelectServerReq* other) {
  std::swap(serverid_, other->serverid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectServerReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectServerReq

// int32 ServerID = 1;
void SelectServerReq::clear_serverid() {
  serverid_ = 0;
}
::google::protobuf::int32 SelectServerReq::serverid() const {
  // @@protoc_insertion_point(field_get:SelectServerReq.ServerID)
  return serverid_;
}
void SelectServerReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:SelectServerReq.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectServerAck::kRetCodeFieldNumber;
const int SelectServerAck::kServerAddrFieldNumber;
const int SelectServerAck::kServerPortFieldNumber;
const int SelectServerAck::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectServerAck::SelectServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SelectServerAck)
}
SelectServerAck::SelectServerAck(const SelectServerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serveraddr().size() > 0) {
    serveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddr_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:SelectServerAck)
}

void SelectServerAck::SharedCtor() {
  serveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(logincode_));
  _cached_size_ = 0;
}

SelectServerAck::~SelectServerAck() {
  // @@protoc_insertion_point(destructor:SelectServerAck)
  SharedDtor();
}

void SelectServerAck::SharedDtor() {
  serveraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectServerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectServerAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectServerAck& SelectServerAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectServerAck* SelectServerAck::New(::google::protobuf::Arena* arena) const {
  SelectServerAck* n = new SelectServerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SelectServerAck)
  serveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&retcode_) + sizeof(logincode_));
}

bool SelectServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SelectServerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ServerAddr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serveraddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serveraddr().data(), this->serveraddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SelectServerAck.ServerAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ServerPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SelectServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SelectServerAck)
  return false;
#undef DO_
}

void SelectServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SelectServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // string ServerAddr = 2;
  if (this->serveraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddr().data(), this->serveraddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SelectServerAck.ServerAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serveraddr(), output);
  }

  // int32 ServerPort = 3;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->serverport(), output);
  }

  // int32 LoginCode = 4;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:SelectServerAck)
}

::google::protobuf::uint8* SelectServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SelectServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // string ServerAddr = 2;
  if (this->serveraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddr().data(), this->serveraddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SelectServerAck.ServerAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serveraddr(), target);
  }

  // int32 ServerPort = 3;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->serverport(), target);
  }

  // int32 LoginCode = 4;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SelectServerAck)
  return target;
}

size_t SelectServerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SelectServerAck)
  size_t total_size = 0;

  // string ServerAddr = 2;
  if (this->serveraddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serveraddr());
  }

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // int32 ServerPort = 3;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // int32 LoginCode = 4;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SelectServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectServerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SelectServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SelectServerAck)
    MergeFrom(*source);
  }
}

void SelectServerAck::MergeFrom(const SelectServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SelectServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serveraddr().size() > 0) {

    serveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddr_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void SelectServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SelectServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectServerAck::CopyFrom(const SelectServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SelectServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectServerAck::IsInitialized() const {
  return true;
}

void SelectServerAck::Swap(SelectServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectServerAck::InternalSwap(SelectServerAck* other) {
  serveraddr_.Swap(&other->serveraddr_);
  std::swap(retcode_, other->retcode_);
  std::swap(serverport_, other->serverport_);
  std::swap(logincode_, other->logincode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectServerAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectServerAck

// int32 RetCode = 1;
void SelectServerAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SelectServerAck::retcode() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.RetCode)
  return retcode_;
}
void SelectServerAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.RetCode)
}

// string ServerAddr = 2;
void SelectServerAck::clear_serveraddr() {
  serveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SelectServerAck::serveraddr() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerAddr)
  return serveraddr_.GetNoArena();
}
void SelectServerAck::set_serveraddr(const ::std::string& value) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerAddr)
}
#if LANG_CXX11
void SelectServerAck::set_serveraddr(::std::string&& value) {
  
  serveraddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SelectServerAck.ServerAddr)
}
#endif
void SelectServerAck::set_serveraddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SelectServerAck.ServerAddr)
}
void SelectServerAck::set_serveraddr(const char* value, size_t size) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SelectServerAck.ServerAddr)
}
::std::string* SelectServerAck::mutable_serveraddr() {
  
  // @@protoc_insertion_point(field_mutable:SelectServerAck.ServerAddr)
  return serveraddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectServerAck::release_serveraddr() {
  // @@protoc_insertion_point(field_release:SelectServerAck.ServerAddr)
  
  return serveraddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectServerAck::set_allocated_serveraddr(::std::string* serveraddr) {
  if (serveraddr != NULL) {
    
  } else {
    
  }
  serveraddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serveraddr);
  // @@protoc_insertion_point(field_set_allocated:SelectServerAck.ServerAddr)
}

// int32 ServerPort = 3;
void SelectServerAck::clear_serverport() {
  serverport_ = 0;
}
::google::protobuf::int32 SelectServerAck::serverport() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerPort)
  return serverport_;
}
void SelectServerAck::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerPort)
}

// int32 LoginCode = 4;
void SelectServerAck::clear_logincode() {
  logincode_ = 0;
}
::google::protobuf::int32 SelectServerAck::logincode() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.LoginCode)
  return logincode_;
}
void SelectServerAck::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListNode::kSvrIDFieldNumber;
const int RoleListNode::kSvrNameFieldNumber;
const int RoleListNode::kSvrStateFieldNumber;
const int RoleListNode::kSvrDefaultFieldNumber;
const int RoleListNode::kSvrOpenTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListNode::RoleListNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListNode)
}
RoleListNode::RoleListNode(const RoleListNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.svrname().size() > 0) {
    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  ::memcpy(&svrid_, &from.svrid_,
    reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
  // @@protoc_insertion_point(copy_constructor:RoleListNode)
}

void RoleListNode::SharedCtor() {
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&svrid_, 0, reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
  _cached_size_ = 0;
}

RoleListNode::~RoleListNode() {
  // @@protoc_insertion_point(destructor:RoleListNode)
  SharedDtor();
}

void RoleListNode::SharedDtor() {
  svrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleListNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListNode::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleListNode& RoleListNode::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleListNode* RoleListNode::New(::google::protobuf::Arena* arena) const {
  RoleListNode* n = new RoleListNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListNode::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListNode)
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&svrid_, 0, reinterpret_cast<char*>(&svropentime_) -
    reinterpret_cast<char*>(&svrid_) + sizeof(svropentime_));
}

bool RoleListNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 SvrID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SvrName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_svrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->svrname().data(), this->svrname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleListNode.SvrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SvrState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SvrDefault = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrdefault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SvrOpenTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svropentime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListNode)
  return false;
#undef DO_
}

void RoleListNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->svrid(), output);
  }

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), this->svrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleListNode.SvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->svrname(), output);
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->svrstate(), output);
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->svrdefault(), output);
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->svropentime(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleListNode)
}

::google::protobuf::uint8* RoleListNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleListNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->svrid(), target);
  }

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), this->svrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleListNode.SvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->svrname(), target);
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->svrstate(), target);
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->svrdefault(), target);
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->svropentime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleListNode)
  return target;
}

size_t RoleListNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListNode)
  size_t total_size = 0;

  // string SvrName = 2;
  if (this->svrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->svrname());
  }

  // int32 SvrID = 1;
  if (this->svrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrid());
  }

  // uint32 SvrState = 3;
  if (this->svrstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrstate());
  }

  // uint32 SvrDefault = 4;
  if (this->svrdefault() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrdefault());
  }

  // int32 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svropentime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListNode)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleListNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListNode)
    MergeFrom(*source);
  }
}

void RoleListNode::MergeFrom(const RoleListNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.svrname().size() > 0) {

    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  if (from.svrid() != 0) {
    set_svrid(from.svrid());
  }
  if (from.svrstate() != 0) {
    set_svrstate(from.svrstate());
  }
  if (from.svrdefault() != 0) {
    set_svrdefault(from.svrdefault());
  }
  if (from.svropentime() != 0) {
    set_svropentime(from.svropentime());
  }
}

void RoleListNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListNode::CopyFrom(const RoleListNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListNode::IsInitialized() const {
  return true;
}

void RoleListNode::Swap(RoleListNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListNode::InternalSwap(RoleListNode* other) {
  svrname_.Swap(&other->svrname_);
  std::swap(svrid_, other->svrid_);
  std::swap(svrstate_, other->svrstate_);
  std::swap(svrdefault_, other->svrdefault_);
  std::swap(svropentime_, other->svropentime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListNode::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListNode

// int32 SvrID = 1;
void RoleListNode::clear_svrid() {
  svrid_ = 0;
}
::google::protobuf::int32 RoleListNode::svrid() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrID)
  return svrid_;
}
void RoleListNode::set_svrid(::google::protobuf::int32 value) {
  
  svrid_ = value;
  // @@protoc_insertion_point(field_set:RoleListNode.SvrID)
}

// string SvrName = 2;
void RoleListNode::clear_svrname() {
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleListNode::svrname() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrName)
  return svrname_.GetNoArena();
}
void RoleListNode::set_svrname(const ::std::string& value) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleListNode.SvrName)
}
#if LANG_CXX11
void RoleListNode::set_svrname(::std::string&& value) {
  
  svrname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleListNode.SvrName)
}
#endif
void RoleListNode::set_svrname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleListNode.SvrName)
}
void RoleListNode::set_svrname(const char* value, size_t size) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleListNode.SvrName)
}
::std::string* RoleListNode::mutable_svrname() {
  
  // @@protoc_insertion_point(field_mutable:RoleListNode.SvrName)
  return svrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleListNode::release_svrname() {
  // @@protoc_insertion_point(field_release:RoleListNode.SvrName)
  
  return svrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleListNode::set_allocated_svrname(::std::string* svrname) {
  if (svrname != NULL) {
    
  } else {
    
  }
  svrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svrname);
  // @@protoc_insertion_point(field_set_allocated:RoleListNode.SvrName)
}

// uint32 SvrState = 3;
void RoleListNode::clear_svrstate() {
  svrstate_ = 0u;
}
::google::protobuf::uint32 RoleListNode::svrstate() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrState)
  return svrstate_;
}
void RoleListNode::set_svrstate(::google::protobuf::uint32 value) {
  
  svrstate_ = value;
  // @@protoc_insertion_point(field_set:RoleListNode.SvrState)
}

// uint32 SvrDefault = 4;
void RoleListNode::clear_svrdefault() {
  svrdefault_ = 0u;
}
::google::protobuf::uint32 RoleListNode::svrdefault() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrDefault)
  return svrdefault_;
}
void RoleListNode::set_svrdefault(::google::protobuf::uint32 value) {
  
  svrdefault_ = value;
  // @@protoc_insertion_point(field_set:RoleListNode.SvrDefault)
}

// int32 SvrOpenTime = 5;
void RoleListNode::clear_svropentime() {
  svropentime_ = 0;
}
::google::protobuf::int32 RoleListNode::svropentime() const {
  // @@protoc_insertion_point(field_get:RoleListNode.SvrOpenTime)
  return svropentime_;
}
void RoleListNode::set_svropentime(::google::protobuf::int32 value) {
  
  svropentime_ = value;
  // @@protoc_insertion_point(field_set:RoleListNode.SvrOpenTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListReq::kAccountIDFieldNumber;
const int RoleListReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListReq::RoleListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListReq)
}
RoleListReq::RoleListReq(const RoleListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:RoleListReq)
}

void RoleListReq::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
  _cached_size_ = 0;
}

RoleListReq::~RoleListReq() {
  // @@protoc_insertion_point(destructor:RoleListReq)
  SharedDtor();
}

void RoleListReq::SharedDtor() {
}

void RoleListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleListReq& RoleListReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleListReq* RoleListReq::New(::google::protobuf::Arena* arena) const {
  RoleListReq* n = new RoleListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListReq)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
}

bool RoleListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LoginCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListReq)
  return false;
#undef DO_
}

void RoleListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleListReq)
}

::google::protobuf::uint8* RoleListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleListReq)
  return target;
}

size_t RoleListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListReq)
  size_t total_size = 0;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int32 LoginCode = 2;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListReq)
    MergeFrom(*source);
  }
}

void RoleListReq::MergeFrom(const RoleListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListReq::CopyFrom(const RoleListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListReq::IsInitialized() const {
  return true;
}

void RoleListReq::Swap(RoleListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListReq::InternalSwap(RoleListReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(logincode_, other->logincode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListReq

// int64 AccountID = 1;
void RoleListReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleListReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleListReq.AccountID)
  return accountid_;
}
void RoleListReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.AccountID)
}

// int32 LoginCode = 2;
void RoleListReq::clear_logincode() {
  logincode_ = 0;
}
::google::protobuf::int32 RoleListReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleListReq.LoginCode)
  return logincode_;
}
void RoleListReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListAck::kRetCodeFieldNumber;
const int RoleListAck::kRoleNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListAck::RoleListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListAck)
}
RoleListAck::RoleListAck(const RoleListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rolenode_(from.rolenode_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleListAck)
}

void RoleListAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

RoleListAck::~RoleListAck() {
  // @@protoc_insertion_point(destructor:RoleListAck)
  SharedDtor();
}

void RoleListAck::SharedDtor() {
}

void RoleListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleListAck& RoleListAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleListAck* RoleListAck::New(::google::protobuf::Arena* arena) const {
  RoleListAck* n = new RoleListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListAck)
  rolenode_.Clear();
  retcode_ = 0;
}

bool RoleListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RoleListNode RoleNode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rolenode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListAck)
  return false;
#undef DO_
}

void RoleListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .RoleListNode RoleNode = 2;
  for (unsigned int i = 0, n = this->rolenode_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rolenode(i), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleListAck)
}

::google::protobuf::uint8* RoleListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .RoleListNode RoleNode = 2;
  for (unsigned int i = 0, n = this->rolenode_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->rolenode(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleListAck)
  return target;
}

size_t RoleListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListAck)
  size_t total_size = 0;

  // repeated .RoleListNode RoleNode = 2;
  {
    unsigned int count = this->rolenode_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rolenode(i));
    }
  }

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListAck)
    MergeFrom(*source);
  }
}

void RoleListAck::MergeFrom(const RoleListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rolenode_.MergeFrom(from.rolenode_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListAck::CopyFrom(const RoleListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListAck::IsInitialized() const {
  return true;
}

void RoleListAck::Swap(RoleListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListAck::InternalSwap(RoleListAck* other) {
  rolenode_.InternalSwap(&other->rolenode_);
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListAck

// int32 RetCode = 1;
void RoleListAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RoleListAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleListAck.RetCode)
  return retcode_;
}
void RoleListAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleListAck.RetCode)
}

// repeated .RoleListNode RoleNode = 2;
int RoleListAck::rolenode_size() const {
  return rolenode_.size();
}
void RoleListAck::clear_rolenode() {
  rolenode_.Clear();
}
const ::RoleListNode& RoleListAck::rolenode(int index) const {
  // @@protoc_insertion_point(field_get:RoleListAck.RoleNode)
  return rolenode_.Get(index);
}
::RoleListNode* RoleListAck::mutable_rolenode(int index) {
  // @@protoc_insertion_point(field_mutable:RoleListAck.RoleNode)
  return rolenode_.Mutable(index);
}
::RoleListNode* RoleListAck::add_rolenode() {
  // @@protoc_insertion_point(field_add:RoleListAck.RoleNode)
  return rolenode_.Add();
}
::google::protobuf::RepeatedPtrField< ::RoleListNode >*
RoleListAck::mutable_rolenode() {
  // @@protoc_insertion_point(field_mutable_list:RoleListAck.RoleNode)
  return &rolenode_;
}
const ::google::protobuf::RepeatedPtrField< ::RoleListNode >&
RoleListAck::rolenode() const {
  // @@protoc_insertion_point(field_list:RoleListAck.RoleNode)
  return rolenode_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleCreateReq::kAccountIDFieldNumber;
const int RoleCreateReq::kNameFieldNumber;
const int RoleCreateReq::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleCreateReq::RoleCreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleCreateReq)
}
RoleCreateReq::RoleCreateReq(const RoleCreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
  // @@protoc_insertion_point(copy_constructor:RoleCreateReq)
}

void RoleCreateReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
  _cached_size_ = 0;
}

RoleCreateReq::~RoleCreateReq() {
  // @@protoc_insertion_point(destructor:RoleCreateReq)
  SharedDtor();
}

void RoleCreateReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleCreateReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleCreateReq& RoleCreateReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleCreateReq* RoleCreateReq::New(::google::protobuf::Arena* arena) const {
  RoleCreateReq* n = new RoleCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleCreateReq)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roletype_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roletype_));
}

bool RoleCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleCreateReq.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RoleType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleCreateReq)
  return false;
#undef DO_
}

void RoleCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateReq.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 RoleType = 3;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roletype(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleCreateReq)
}

::google::protobuf::uint8* RoleCreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateReq.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 RoleType = 3;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roletype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleCreateReq)
  return target;
}

size_t RoleCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleCreateReq)
  size_t total_size = 0;

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int32 RoleType = 3;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roletype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleCreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleCreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleCreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleCreateReq)
    MergeFrom(*source);
  }
}

void RoleCreateReq::MergeFrom(const RoleCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
}

void RoleCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleCreateReq::CopyFrom(const RoleCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCreateReq::IsInitialized() const {
  return true;
}

void RoleCreateReq::Swap(RoleCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleCreateReq::InternalSwap(RoleCreateReq* other) {
  name_.Swap(&other->name_);
  std::swap(accountid_, other->accountid_);
  std::swap(roletype_, other->roletype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleCreateReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleCreateReq

// int64 AccountID = 1;
void RoleCreateReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleCreateReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.AccountID)
  return accountid_;
}
void RoleCreateReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.AccountID)
}

// string Name = 2;
void RoleCreateReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleCreateReq::name() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Name)
  return name_.GetNoArena();
}
void RoleCreateReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleCreateReq.Name)
}
#if LANG_CXX11
void RoleCreateReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleCreateReq.Name)
}
#endif
void RoleCreateReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleCreateReq.Name)
}
void RoleCreateReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleCreateReq.Name)
}
::std::string* RoleCreateReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleCreateReq.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleCreateReq::release_name() {
  // @@protoc_insertion_point(field_release:RoleCreateReq.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleCreateReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleCreateReq.Name)
}

// int32 RoleType = 3;
void RoleCreateReq::clear_roletype() {
  roletype_ = 0;
}
::google::protobuf::int32 RoleCreateReq::roletype() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.RoleType)
  return roletype_;
}
void RoleCreateReq::set_roletype(::google::protobuf::int32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.RoleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleCreateAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleCreateAck::RoleCreateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleCreateAck)
}
RoleCreateAck::RoleCreateAck(const RoleCreateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleCreateAck)
}

void RoleCreateAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

RoleCreateAck::~RoleCreateAck() {
  // @@protoc_insertion_point(destructor:RoleCreateAck)
  SharedDtor();
}

void RoleCreateAck::SharedDtor() {
}

void RoleCreateAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleCreateAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleCreateAck& RoleCreateAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleCreateAck* RoleCreateAck::New(::google::protobuf::Arena* arena) const {
  RoleCreateAck* n = new RoleCreateAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleCreateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleCreateAck)
  retcode_ = 0;
}

bool RoleCreateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleCreateAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleCreateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleCreateAck)
  return false;
#undef DO_
}

void RoleCreateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleCreateAck)
}

::google::protobuf::uint8* RoleCreateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleCreateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleCreateAck)
  return target;
}

size_t RoleCreateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleCreateAck)
  size_t total_size = 0;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleCreateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleCreateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleCreateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleCreateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleCreateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleCreateAck)
    MergeFrom(*source);
  }
}

void RoleCreateAck::MergeFrom(const RoleCreateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleCreateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleCreateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleCreateAck::CopyFrom(const RoleCreateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCreateAck::IsInitialized() const {
  return true;
}

void RoleCreateAck::Swap(RoleCreateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleCreateAck::InternalSwap(RoleCreateAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleCreateAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleCreateAck

// int32 RetCode = 1;
void RoleCreateAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RoleCreateAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RetCode)
  return retcode_;
}
void RoleCreateAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDeleteReq::kAccountIDFieldNumber;
const int RoleDeleteReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDeleteReq::RoleDeleteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDeleteReq)
}
RoleDeleteReq::RoleDeleteReq(const RoleDeleteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:RoleDeleteReq)
}

void RoleDeleteReq::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
  _cached_size_ = 0;
}

RoleDeleteReq::~RoleDeleteReq() {
  // @@protoc_insertion_point(destructor:RoleDeleteReq)
  SharedDtor();
}

void RoleDeleteReq::SharedDtor() {
}

void RoleDeleteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDeleteReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDeleteReq& RoleDeleteReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleDeleteReq* RoleDeleteReq::New(::google::protobuf::Arena* arena) const {
  RoleDeleteReq* n = new RoleDeleteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDeleteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDeleteReq)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
}

bool RoleDeleteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDeleteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDeleteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDeleteReq)
  return false;
#undef DO_
}

void RoleDeleteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDeleteReq)
}

::google::protobuf::uint8* RoleDeleteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDeleteReq)
  return target;
}

size_t RoleDeleteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDeleteReq)
  size_t total_size = 0;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDeleteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDeleteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDeleteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDeleteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDeleteReq)
    MergeFrom(*source);
  }
}

void RoleDeleteReq::MergeFrom(const RoleDeleteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleDeleteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDeleteReq::CopyFrom(const RoleDeleteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDeleteReq::IsInitialized() const {
  return true;
}

void RoleDeleteReq::Swap(RoleDeleteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDeleteReq::InternalSwap(RoleDeleteReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDeleteReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDeleteReq

// int64 AccountID = 1;
void RoleDeleteReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleDeleteReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.AccountID)
  return accountid_;
}
void RoleDeleteReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.AccountID)
}

// int64 RoleID = 2;
void RoleDeleteReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleDeleteReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.RoleID)
  return roleid_;
}
void RoleDeleteReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDeleteAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDeleteAck::RoleDeleteAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDeleteAck)
}
RoleDeleteAck::RoleDeleteAck(const RoleDeleteAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleDeleteAck)
}

void RoleDeleteAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

RoleDeleteAck::~RoleDeleteAck() {
  // @@protoc_insertion_point(destructor:RoleDeleteAck)
  SharedDtor();
}

void RoleDeleteAck::SharedDtor() {
}

void RoleDeleteAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDeleteAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDeleteAck& RoleDeleteAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleDeleteAck* RoleDeleteAck::New(::google::protobuf::Arena* arena) const {
  RoleDeleteAck* n = new RoleDeleteAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDeleteAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDeleteAck)
  retcode_ = 0;
}

bool RoleDeleteAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDeleteAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDeleteAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDeleteAck)
  return false;
#undef DO_
}

void RoleDeleteAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDeleteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDeleteAck)
}

::google::protobuf::uint8* RoleDeleteAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleDeleteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDeleteAck)
  return target;
}

size_t RoleDeleteAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDeleteAck)
  size_t total_size = 0;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDeleteAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDeleteAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDeleteAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDeleteAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDeleteAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDeleteAck)
    MergeFrom(*source);
  }
}

void RoleDeleteAck::MergeFrom(const RoleDeleteAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDeleteAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleDeleteAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDeleteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDeleteAck::CopyFrom(const RoleDeleteAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDeleteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDeleteAck::IsInitialized() const {
  return true;
}

void RoleDeleteAck::Swap(RoleDeleteAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDeleteAck::InternalSwap(RoleDeleteAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDeleteAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDeleteAck

// int32 RetCode = 1;
void RoleDeleteAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RoleDeleteAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDeleteAck.RetCode)
  return retcode_;
}
void RoleDeleteAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLoginReq::kAccountIDFieldNumber;
const int RoleLoginReq::kRoleIDFieldNumber;
const int RoleLoginReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLoginReq::RoleLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLoginReq)
}
RoleLoginReq::RoleLoginReq(const RoleLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
  // @@protoc_insertion_point(copy_constructor:RoleLoginReq)
}

void RoleLoginReq::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
  _cached_size_ = 0;
}

RoleLoginReq::~RoleLoginReq() {
  // @@protoc_insertion_point(destructor:RoleLoginReq)
  SharedDtor();
}

void RoleLoginReq::SharedDtor() {
}

void RoleLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLoginReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLoginReq& RoleLoginReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLoginReq* RoleLoginReq::New(::google::protobuf::Arena* arena) const {
  RoleLoginReq* n = new RoleLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLoginReq)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&logincode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(logincode_));
}

bool RoleLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 LoginCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &logincode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLoginReq)
  return false;
#undef DO_
}

void RoleLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  // int64 LoginCode = 3;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLoginReq)
}

::google::protobuf::uint8* RoleLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  // int64 LoginCode = 3;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLoginReq)
  return target;
}

size_t RoleLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLoginReq)
  size_t total_size = 0;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  // int64 LoginCode = 3;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->logincode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLoginReq)
    MergeFrom(*source);
  }
}

void RoleLoginReq::MergeFrom(const RoleLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLoginReq::CopyFrom(const RoleLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginReq::IsInitialized() const {
  return true;
}

void RoleLoginReq::Swap(RoleLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLoginReq::InternalSwap(RoleLoginReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(logincode_, other->logincode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLoginReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLoginReq

// int64 AccountID = 1;
void RoleLoginReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.AccountID)
  return accountid_;
}
void RoleLoginReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.AccountID)
}

// int64 RoleID = 2;
void RoleLoginReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleLoginReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.RoleID)
  return roleid_;
}
void RoleLoginReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.RoleID)
}

// int64 LoginCode = 3;
void RoleLoginReq::clear_logincode() {
  logincode_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleLoginReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.LoginCode)
  return logincode_;
}
void RoleLoginReq::set_logincode(::google::protobuf::int64 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLoginAck::kRetCodeFieldNumber;
const int RoleLoginAck::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLoginAck::RoleLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLoginAck)
}
RoleLoginAck::RoleLoginAck(const RoleLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:RoleLoginAck)
}

void RoleLoginAck::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
  _cached_size_ = 0;
}

RoleLoginAck::~RoleLoginAck() {
  // @@protoc_insertion_point(destructor:RoleLoginAck)
  SharedDtor();
}

void RoleLoginAck::SharedDtor() {
}

void RoleLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLoginAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLoginAck& RoleLoginAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLoginAck* RoleLoginAck::New(::google::protobuf::Arena* arena) const {
  RoleLoginAck* n = new RoleLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLoginAck)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(retcode_));
}

bool RoleLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 AccountID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLoginAck)
  return false;
#undef DO_
}

void RoleLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->accountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLoginAck)
}

::google::protobuf::uint8* RoleLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->accountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLoginAck)
  return target;
}

size_t RoleLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLoginAck)
  size_t total_size = 0;

  // int64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLoginAck)
    MergeFrom(*source);
  }
}

void RoleLoginAck::MergeFrom(const RoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLoginAck::CopyFrom(const RoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginAck::IsInitialized() const {
  return true;
}

void RoleLoginAck::Swap(RoleLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLoginAck::InternalSwap(RoleLoginAck* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLoginAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLoginAck

// int32 RetCode = 1;
void RoleLoginAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RoleLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.RetCode)
  return retcode_;
}
void RoleLoginAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.RetCode)
}

// int64 AccountID = 2;
void RoleLoginAck::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLoginAck.AccountID)
  return accountid_;
}
void RoleLoginAck::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginAck.AccountID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLogoutReq::kAccountIDFieldNumber;
const int RoleLogoutReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLogoutReq::RoleLogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLogoutReq)
}
RoleLogoutReq::RoleLogoutReq(const RoleLogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:RoleLogoutReq)
}

void RoleLogoutReq::SharedCtor() {
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
  _cached_size_ = 0;
}

RoleLogoutReq::~RoleLogoutReq() {
  // @@protoc_insertion_point(destructor:RoleLogoutReq)
  SharedDtor();
}

void RoleLogoutReq::SharedDtor() {
}

void RoleLogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLogoutReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLogoutReq& RoleLogoutReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLogoutReq* RoleLogoutReq::New(::google::protobuf::Arena* arena) const {
  RoleLogoutReq* n = new RoleLogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLogoutReq)
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(roleid_));
}

bool RoleLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLogoutReq)
  return false;
#undef DO_
}

void RoleLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLogoutReq)
}

::google::protobuf::uint8* RoleLogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleLogoutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLogoutReq)
  return target;
}

size_t RoleLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLogoutReq)
  size_t total_size = 0;

  // int64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLogoutReq)
    MergeFrom(*source);
  }
}

void RoleLogoutReq::MergeFrom(const RoleLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleLogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLogoutReq::CopyFrom(const RoleLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLogoutReq::IsInitialized() const {
  return true;
}

void RoleLogoutReq::Swap(RoleLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLogoutReq::InternalSwap(RoleLogoutReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLogoutReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLogoutReq

// int64 AccountID = 1;
void RoleLogoutReq::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleLogoutReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLogoutReq.AccountID)
  return accountid_;
}
void RoleLogoutReq::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutReq.AccountID)
}

// int64 RoleID = 2;
void RoleLogoutReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleLogoutReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLogoutReq.RoleID)
  return roleid_;
}
void RoleLogoutReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLogoutAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLogoutAck::RoleLogoutAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLogoutAck)
}
RoleLogoutAck::RoleLogoutAck(const RoleLogoutAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleLogoutAck)
}

void RoleLogoutAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

RoleLogoutAck::~RoleLogoutAck() {
  // @@protoc_insertion_point(destructor:RoleLogoutAck)
  SharedDtor();
}

void RoleLogoutAck::SharedDtor() {
}

void RoleLogoutAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLogoutAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLogoutAck& RoleLogoutAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLogoutAck* RoleLogoutAck::New(::google::protobuf::Arena* arena) const {
  RoleLogoutAck* n = new RoleLogoutAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLogoutAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLogoutAck)
  retcode_ = 0;
}

bool RoleLogoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLogoutAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLogoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLogoutAck)
  return false;
#undef DO_
}

void RoleLogoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLogoutAck)
}

::google::protobuf::uint8* RoleLogoutAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleLogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLogoutAck)
  return target;
}

size_t RoleLogoutAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLogoutAck)
  size_t total_size = 0;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLogoutAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLogoutAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLogoutAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLogoutAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLogoutAck)
    MergeFrom(*source);
  }
}

void RoleLogoutAck::MergeFrom(const RoleLogoutAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleLogoutAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLogoutAck::CopyFrom(const RoleLogoutAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLogoutAck::IsInitialized() const {
  return true;
}

void RoleLogoutAck::Swap(RoleLogoutAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLogoutAck::InternalSwap(RoleLogoutAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLogoutAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLogoutAck

// int32 RetCode = 1;
void RoleLogoutAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RoleLogoutAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleLogoutAck.RetCode)
  return retcode_;
}
void RoleLogoutAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDisconnectReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDisconnectReq::RoleDisconnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDisconnectReq)
}
RoleDisconnectReq::RoleDisconnectReq(const RoleDisconnectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:RoleDisconnectReq)
}

void RoleDisconnectReq::SharedCtor() {
  roleid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

RoleDisconnectReq::~RoleDisconnectReq() {
  // @@protoc_insertion_point(destructor:RoleDisconnectReq)
  SharedDtor();
}

void RoleDisconnectReq::SharedDtor() {
}

void RoleDisconnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDisconnectReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDisconnectReq& RoleDisconnectReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleDisconnectReq* RoleDisconnectReq::New(::google::protobuf::Arena* arena) const {
  RoleDisconnectReq* n = new RoleDisconnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDisconnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDisconnectReq)
  roleid_ = GOOGLE_LONGLONG(0);
}

bool RoleDisconnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDisconnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDisconnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDisconnectReq)
  return false;
#undef DO_
}

void RoleDisconnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDisconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDisconnectReq)
}

::google::protobuf::uint8* RoleDisconnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleDisconnectReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDisconnectReq)
  return target;
}

size_t RoleDisconnectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDisconnectReq)
  size_t total_size = 0;

  // int64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDisconnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDisconnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDisconnectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDisconnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDisconnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDisconnectReq)
    MergeFrom(*source);
  }
}

void RoleDisconnectReq::MergeFrom(const RoleDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDisconnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleDisconnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDisconnectReq::CopyFrom(const RoleDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDisconnectReq::IsInitialized() const {
  return true;
}

void RoleDisconnectReq::Swap(RoleDisconnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDisconnectReq::InternalSwap(RoleDisconnectReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDisconnectReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDisconnectReq

// int64 RoleID = 2;
void RoleDisconnectReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RoleDisconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.RoleID)
  return roleid_;
}
void RoleDisconnectReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDisconnectAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDisconnectAck::RoleDisconnectAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDisconnectAck)
}
RoleDisconnectAck::RoleDisconnectAck(const RoleDisconnectAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:RoleDisconnectAck)
}

void RoleDisconnectAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

RoleDisconnectAck::~RoleDisconnectAck() {
  // @@protoc_insertion_point(destructor:RoleDisconnectAck)
  SharedDtor();
}

void RoleDisconnectAck::SharedDtor() {
}

void RoleDisconnectAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDisconnectAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleDisconnectAck& RoleDisconnectAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleDisconnectAck* RoleDisconnectAck::New(::google::protobuf::Arena* arena) const {
  RoleDisconnectAck* n = new RoleDisconnectAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDisconnectAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDisconnectAck)
  retcode_ = 0;
}

bool RoleDisconnectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDisconnectAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDisconnectAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDisconnectAck)
  return false;
#undef DO_
}

void RoleDisconnectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDisconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDisconnectAck)
}

::google::protobuf::uint8* RoleDisconnectAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoleDisconnectAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDisconnectAck)
  return target;
}

size_t RoleDisconnectAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDisconnectAck)
  size_t total_size = 0;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDisconnectAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDisconnectAck)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleDisconnectAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDisconnectAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDisconnectAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDisconnectAck)
    MergeFrom(*source);
  }
}

void RoleDisconnectAck::MergeFrom(const RoleDisconnectAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDisconnectAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleDisconnectAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDisconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDisconnectAck::CopyFrom(const RoleDisconnectAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDisconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDisconnectAck::IsInitialized() const {
  return true;
}

void RoleDisconnectAck::Swap(RoleDisconnectAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDisconnectAck::InternalSwap(RoleDisconnectAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDisconnectAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDisconnectAck

// int32 RetCode = 1;
void RoleDisconnectAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RoleDisconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectAck.RetCode)
  return retcode_;
}
void RoleDisconnectAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoleDataReq::kRoleIDFieldNumber;
const int EnterRoleDataReq::kRoleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoleDataReq::EnterRoleDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterRoleDataReq)
}
EnterRoleDataReq::EnterRoleDataReq(const EnterRoleDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rolename().size() > 0) {
    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:EnterRoleDataReq)
}

void EnterRoleDataReq::SharedCtor() {
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

EnterRoleDataReq::~EnterRoleDataReq() {
  // @@protoc_insertion_point(destructor:EnterRoleDataReq)
  SharedDtor();
}

void EnterRoleDataReq::SharedDtor() {
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnterRoleDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoleDataReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoleDataReq& EnterRoleDataReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterRoleDataReq* EnterRoleDataReq::New(::google::protobuf::Arena* arena) const {
  EnterRoleDataReq* n = new EnterRoleDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoleDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterRoleDataReq)
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_LONGLONG(0);
}

bool EnterRoleDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterRoleDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoleName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "EnterRoleDataReq.RoleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterRoleDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterRoleDataReq)
  return false;
#undef DO_
}

void EnterRoleDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterRoleDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleid(), output);
  }

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnterRoleDataReq.RoleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rolename(), output);
  }

  // @@protoc_insertion_point(serialize_end:EnterRoleDataReq)
}

::google::protobuf::uint8* EnterRoleDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnterRoleDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleid(), target);
  }

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnterRoleDataReq.RoleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rolename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:EnterRoleDataReq)
  return target;
}

size_t EnterRoleDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterRoleDataReq)
  size_t total_size = 0;

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rolename());
  }

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoleDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterRoleDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoleDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoleDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterRoleDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterRoleDataReq)
    MergeFrom(*source);
  }
}

void EnterRoleDataReq::MergeFrom(const EnterRoleDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterRoleDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rolename().size() > 0) {

    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void EnterRoleDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterRoleDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoleDataReq::CopyFrom(const EnterRoleDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterRoleDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoleDataReq::IsInitialized() const {
  return true;
}

void EnterRoleDataReq::Swap(EnterRoleDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoleDataReq::InternalSwap(EnterRoleDataReq* other) {
  rolename_.Swap(&other->rolename_);
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoleDataReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoleDataReq

// int64 RoleID = 1;
void EnterRoleDataReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 EnterRoleDataReq::roleid() const {
  // @@protoc_insertion_point(field_get:EnterRoleDataReq.RoleID)
  return roleid_;
}
void EnterRoleDataReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:EnterRoleDataReq.RoleID)
}

// string RoleName = 2;
void EnterRoleDataReq::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EnterRoleDataReq::rolename() const {
  // @@protoc_insertion_point(field_get:EnterRoleDataReq.RoleName)
  return rolename_.GetNoArena();
}
void EnterRoleDataReq::set_rolename(const ::std::string& value) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EnterRoleDataReq.RoleName)
}
#if LANG_CXX11
void EnterRoleDataReq::set_rolename(::std::string&& value) {
  
  rolename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EnterRoleDataReq.RoleName)
}
#endif
void EnterRoleDataReq::set_rolename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EnterRoleDataReq.RoleName)
}
void EnterRoleDataReq::set_rolename(const char* value, size_t size) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EnterRoleDataReq.RoleName)
}
::std::string* EnterRoleDataReq::mutable_rolename() {
  
  // @@protoc_insertion_point(field_mutable:EnterRoleDataReq.RoleName)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnterRoleDataReq::release_rolename() {
  // @@protoc_insertion_point(field_release:EnterRoleDataReq.RoleName)
  
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnterRoleDataReq::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    
  } else {
    
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:EnterRoleDataReq.RoleName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoleDataAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoleDataAck::EnterRoleDataAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterRoleDataAck)
}
EnterRoleDataAck::EnterRoleDataAck(const EnterRoleDataAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:EnterRoleDataAck)
}

void EnterRoleDataAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

EnterRoleDataAck::~EnterRoleDataAck() {
  // @@protoc_insertion_point(destructor:EnterRoleDataAck)
  SharedDtor();
}

void EnterRoleDataAck::SharedDtor() {
}

void EnterRoleDataAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoleDataAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoleDataAck& EnterRoleDataAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterRoleDataAck* EnterRoleDataAck::New(::google::protobuf::Arena* arena) const {
  EnterRoleDataAck* n = new EnterRoleDataAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoleDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterRoleDataAck)
  retcode_ = 0;
}

bool EnterRoleDataAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterRoleDataAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterRoleDataAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterRoleDataAck)
  return false;
#undef DO_
}

void EnterRoleDataAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterRoleDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:EnterRoleDataAck)
}

::google::protobuf::uint8* EnterRoleDataAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EnterRoleDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:EnterRoleDataAck)
  return target;
}

size_t EnterRoleDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterRoleDataAck)
  size_t total_size = 0;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoleDataAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterRoleDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoleDataAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoleDataAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterRoleDataAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterRoleDataAck)
    MergeFrom(*source);
  }
}

void EnterRoleDataAck::MergeFrom(const EnterRoleDataAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterRoleDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void EnterRoleDataAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterRoleDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoleDataAck::CopyFrom(const EnterRoleDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterRoleDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoleDataAck::IsInitialized() const {
  return true;
}

void EnterRoleDataAck::Swap(EnterRoleDataAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoleDataAck::InternalSwap(EnterRoleDataAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoleDataAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoleDataAck

// int32 RetCode = 1;
void EnterRoleDataAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 EnterRoleDataAck::retcode() const {
  // @@protoc_insertion_point(field_get:EnterRoleDataAck.RetCode)
  return retcode_;
}
void EnterRoleDataAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:EnterRoleDataAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneReq::kSceneTypeFieldNumber;
const int CreateNewSceneReq::kCopyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneReq::CreateNewSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateNewSceneReq)
}
CreateNewSceneReq::CreateNewSceneReq(const CreateNewSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scenetype_, &from.scenetype_,
    reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&scenetype_) + sizeof(copytype_));
  // @@protoc_insertion_point(copy_constructor:CreateNewSceneReq)
}

void CreateNewSceneReq::SharedCtor() {
  ::memset(&scenetype_, 0, reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&scenetype_) + sizeof(copytype_));
  _cached_size_ = 0;
}

CreateNewSceneReq::~CreateNewSceneReq() {
  // @@protoc_insertion_point(destructor:CreateNewSceneReq)
  SharedDtor();
}

void CreateNewSceneReq::SharedDtor() {
}

void CreateNewSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewSceneReq& CreateNewSceneReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateNewSceneReq* CreateNewSceneReq::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneReq* n = new CreateNewSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateNewSceneReq)
  ::memset(&scenetype_, 0, reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&scenetype_) + sizeof(copytype_));
}

bool CreateNewSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateNewSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 SceneType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scenetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateNewSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateNewSceneReq)
  return false;
#undef DO_
}

void CreateNewSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SceneType = 1;
  if (this->scenetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scenetype(), output);
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copytype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CreateNewSceneReq)
}

::google::protobuf::uint8* CreateNewSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SceneType = 1;
  if (this->scenetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scenetype(), target);
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copytype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CreateNewSceneReq)
  return target;
}

size_t CreateNewSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateNewSceneReq)
  size_t total_size = 0;

  // int32 SceneType = 1;
  if (this->scenetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scenetype());
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateNewSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateNewSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateNewSceneReq)
    MergeFrom(*source);
  }
}

void CreateNewSceneReq::MergeFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateNewSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scenetype() != 0) {
    set_scenetype(from.scenetype());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
}

void CreateNewSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneReq::CopyFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneReq::IsInitialized() const {
  return true;
}

void CreateNewSceneReq::Swap(CreateNewSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneReq::InternalSwap(CreateNewSceneReq* other) {
  std::swap(scenetype_, other->scenetype_);
  std::swap(copytype_, other->copytype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewSceneReq

// int32 SceneType = 1;
void CreateNewSceneReq::clear_scenetype() {
  scenetype_ = 0;
}
::google::protobuf::int32 CreateNewSceneReq::scenetype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.SceneType)
  return scenetype_;
}
void CreateNewSceneReq::set_scenetype(::google::protobuf::int32 value) {
  
  scenetype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.SceneType)
}

// int32 CopyType = 2;
void CreateNewSceneReq::clear_copytype() {
  copytype_ = 0;
}
::google::protobuf::int32 CreateNewSceneReq::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CopyType)
  return copytype_;
}
void CreateNewSceneReq::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CopyType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneAck::kSceneTypeFieldNumber;
const int CreateNewSceneAck::kCopyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneAck::CreateNewSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateNewSceneAck)
}
CreateNewSceneAck::CreateNewSceneAck(const CreateNewSceneAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scenetype_, &from.scenetype_,
    reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&scenetype_) + sizeof(copytype_));
  // @@protoc_insertion_point(copy_constructor:CreateNewSceneAck)
}

void CreateNewSceneAck::SharedCtor() {
  ::memset(&scenetype_, 0, reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&scenetype_) + sizeof(copytype_));
  _cached_size_ = 0;
}

CreateNewSceneAck::~CreateNewSceneAck() {
  // @@protoc_insertion_point(destructor:CreateNewSceneAck)
  SharedDtor();
}

void CreateNewSceneAck::SharedDtor() {
}

void CreateNewSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewSceneAck& CreateNewSceneAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateNewSceneAck* CreateNewSceneAck::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneAck* n = new CreateNewSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateNewSceneAck)
  ::memset(&scenetype_, 0, reinterpret_cast<char*>(&copytype_) -
    reinterpret_cast<char*>(&scenetype_) + sizeof(copytype_));
}

bool CreateNewSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateNewSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 SceneType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scenetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CopyType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateNewSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateNewSceneAck)
  return false;
#undef DO_
}

void CreateNewSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateNewSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SceneType = 1;
  if (this->scenetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scenetype(), output);
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copytype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CreateNewSceneAck)
}

::google::protobuf::uint8* CreateNewSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateNewSceneAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SceneType = 1;
  if (this->scenetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scenetype(), target);
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copytype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CreateNewSceneAck)
  return target;
}

size_t CreateNewSceneAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateNewSceneAck)
  size_t total_size = 0;

  // int32 SceneType = 1;
  if (this->scenetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scenetype());
  }

  // int32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateNewSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewSceneAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateNewSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateNewSceneAck)
    MergeFrom(*source);
  }
}

void CreateNewSceneAck::MergeFrom(const CreateNewSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateNewSceneAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scenetype() != 0) {
    set_scenetype(from.scenetype());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
}

void CreateNewSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateNewSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneAck::CopyFrom(const CreateNewSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateNewSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneAck::IsInitialized() const {
  return true;
}

void CreateNewSceneAck::Swap(CreateNewSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneAck::InternalSwap(CreateNewSceneAck* other) {
  std::swap(scenetype_, other->scenetype_);
  std::swap(copytype_, other->copytype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewSceneAck

// int32 SceneType = 1;
void CreateNewSceneAck::clear_scenetype() {
  scenetype_ = 0;
}
::google::protobuf::int32 CreateNewSceneAck::scenetype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.SceneType)
  return scenetype_;
}
void CreateNewSceneAck::set_scenetype(::google::protobuf::int32 value) {
  
  scenetype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.SceneType)
}

// int32 CopyType = 2;
void CreateNewSceneAck::clear_copytype() {
  copytype_ = 0;
}
::google::protobuf::int32 CreateNewSceneAck::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyType)
  return copytype_;
}
void CreateNewSceneAck::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransRoleDataReq::kRoleIDFieldNumber;
const int TransRoleDataReq::kRoleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransRoleDataReq::TransRoleDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransRoleDataReq)
}
TransRoleDataReq::TransRoleDataReq(const TransRoleDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rolename().size() > 0) {
    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:TransRoleDataReq)
}

void TransRoleDataReq::SharedCtor() {
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TransRoleDataReq::~TransRoleDataReq() {
  // @@protoc_insertion_point(destructor:TransRoleDataReq)
  SharedDtor();
}

void TransRoleDataReq::SharedDtor() {
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransRoleDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransRoleDataReq::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransRoleDataReq& TransRoleDataReq::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransRoleDataReq* TransRoleDataReq::New(::google::protobuf::Arena* arena) const {
  TransRoleDataReq* n = new TransRoleDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransRoleDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TransRoleDataReq)
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_LONGLONG(0);
}

bool TransRoleDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransRoleDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 RoleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoleName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TransRoleDataReq.RoleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransRoleDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransRoleDataReq)
  return false;
#undef DO_
}

void TransRoleDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransRoleDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleid(), output);
  }

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransRoleDataReq.RoleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rolename(), output);
  }

  // @@protoc_insertion_point(serialize_end:TransRoleDataReq)
}

::google::protobuf::uint8* TransRoleDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TransRoleDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleid(), target);
  }

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransRoleDataReq.RoleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rolename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransRoleDataReq)
  return target;
}

size_t TransRoleDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransRoleDataReq)
  size_t total_size = 0;

  // string RoleName = 2;
  if (this->rolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rolename());
  }

  // int64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransRoleDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransRoleDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TransRoleDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransRoleDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransRoleDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransRoleDataReq)
    MergeFrom(*source);
  }
}

void TransRoleDataReq::MergeFrom(const TransRoleDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransRoleDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rolename().size() > 0) {

    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void TransRoleDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransRoleDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransRoleDataReq::CopyFrom(const TransRoleDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransRoleDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransRoleDataReq::IsInitialized() const {
  return true;
}

void TransRoleDataReq::Swap(TransRoleDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransRoleDataReq::InternalSwap(TransRoleDataReq* other) {
  rolename_.Swap(&other->rolename_);
  std::swap(roleid_, other->roleid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransRoleDataReq::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransRoleDataReq

// int64 RoleID = 1;
void TransRoleDataReq::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TransRoleDataReq::roleid() const {
  // @@protoc_insertion_point(field_get:TransRoleDataReq.RoleID)
  return roleid_;
}
void TransRoleDataReq::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataReq.RoleID)
}

// string RoleName = 2;
void TransRoleDataReq::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransRoleDataReq::rolename() const {
  // @@protoc_insertion_point(field_get:TransRoleDataReq.RoleName)
  return rolename_.GetNoArena();
}
void TransRoleDataReq::set_rolename(const ::std::string& value) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransRoleDataReq.RoleName)
}
#if LANG_CXX11
void TransRoleDataReq::set_rolename(::std::string&& value) {
  
  rolename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TransRoleDataReq.RoleName)
}
#endif
void TransRoleDataReq::set_rolename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransRoleDataReq.RoleName)
}
void TransRoleDataReq::set_rolename(const char* value, size_t size) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransRoleDataReq.RoleName)
}
::std::string* TransRoleDataReq::mutable_rolename() {
  
  // @@protoc_insertion_point(field_mutable:TransRoleDataReq.RoleName)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransRoleDataReq::release_rolename() {
  // @@protoc_insertion_point(field_release:TransRoleDataReq.RoleName)
  
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransRoleDataReq::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    
  } else {
    
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:TransRoleDataReq.RoleName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransRoleDataAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransRoleDataAck::TransRoleDataAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Msg_5fLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransRoleDataAck)
}
TransRoleDataAck::TransRoleDataAck(const TransRoleDataAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:TransRoleDataAck)
}

void TransRoleDataAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

TransRoleDataAck::~TransRoleDataAck() {
  // @@protoc_insertion_point(destructor:TransRoleDataAck)
  SharedDtor();
}

void TransRoleDataAck::SharedDtor() {
}

void TransRoleDataAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransRoleDataAck::descriptor() {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransRoleDataAck& TransRoleDataAck::default_instance() {
  protobuf_Msg_5fLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransRoleDataAck* TransRoleDataAck::New(::google::protobuf::Arena* arena) const {
  TransRoleDataAck* n = new TransRoleDataAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransRoleDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:TransRoleDataAck)
  retcode_ = 0;
}

bool TransRoleDataAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransRoleDataAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransRoleDataAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransRoleDataAck)
  return false;
#undef DO_
}

void TransRoleDataAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransRoleDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:TransRoleDataAck)
}

::google::protobuf::uint8* TransRoleDataAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TransRoleDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransRoleDataAck)
  return target;
}

size_t TransRoleDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransRoleDataAck)
  size_t total_size = 0;

  // int32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransRoleDataAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransRoleDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  const TransRoleDataAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransRoleDataAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransRoleDataAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransRoleDataAck)
    MergeFrom(*source);
  }
}

void TransRoleDataAck::MergeFrom(const TransRoleDataAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransRoleDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void TransRoleDataAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransRoleDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransRoleDataAck::CopyFrom(const TransRoleDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransRoleDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransRoleDataAck::IsInitialized() const {
  return true;
}

void TransRoleDataAck::Swap(TransRoleDataAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransRoleDataAck::InternalSwap(TransRoleDataAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransRoleDataAck::GetMetadata() const {
  protobuf_Msg_5fLogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fLogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransRoleDataAck

// int32 RetCode = 1;
void TransRoleDataAck::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 TransRoleDataAck::retcode() const {
  // @@protoc_insertion_point(field_get:TransRoleDataAck.RetCode)
  return retcode_;
}
void TransRoleDataAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:TransRoleDataAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
